---

title: Structured data translation apparatus, system and method
abstract: An apparatus is provided that includes a processor and a memory. The processor is configured to determine a category for a group of isolated noun phrases in a structured or semi-structured data source stored in the memory. The group of isolated noun phrases includes one or more isolated noun phrases. The processor is also configured to translate the group of isolated noun phrases from a source language to a target language using a category-driven isolated noun phrase translation. The determination of the category and the category-driven isolated noun phrase translation are performed based on context derived from the group of isolated noun phrases.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08306807&OS=08306807&RS=08306807
owner: N T repid Corporation
number: 08306807
owner_city: Herndon
owner_country: US
publication_date: 20090817
---
Embodiments generally relate to data translation applications and in particular to an apparatus system and method of translating structured or semi structured data.

Automatic machine translation engines may be designed for general purpose translation of whole sentences making use of linguistic context to perform translations. Examples of such applications include Systran Language Weaver Apptek LogoMedia LEC and Google Translate . However with respect to structured data found in databases and spreadsheets or semi structured data that is extracted from full text via an information extraction engine frequent translation errors occur due to a lack of knowledge of a category for noun phrases NPs for the structured or semi structured information. For example the Russian names Sergey Lozhechko and Shedrov Aleksandr should be left alone or transliterated. Transliteration involves changing characters of one language into corresponding characters of another language. For instance the Greek X may be transliterated into English as ch . However these names could instead be literally translated as Sergey spoon and generous Alexander respectively without an understanding by the system that it is dealing with names of people. Similarly the Russian word means street in the context of an address but means brochure or prospectus in the context of a document type. Such errors due to a lack of linguistic or natural language context that is present in higher level units of linguistic analysis such as sentences paragraphs and full text documents may render conventional automatic machine translation engines inaccurate for translating noun phrases in structured or semi structured data.

In an embodiment an apparatus includes a processor and a memory. The processor is configured to determine a category for a group of isolated noun phrases in a structured or semi structured data source stored in the memory. The group of isolated noun phrases includes one or more isolated noun phrases. The processor is also configured to translate the group of isolated noun phrases from a source language to a target language using a category driven isolated noun phrase translation. The determination of the category and the category driven isolated noun phrase translation are performed based on context derived from the group of isolated noun phrases.

In another embodiment a method for performing automatic machine translation of isolated short and proper noun phrases includes determining a category for a group of isolated noun phrases in a data source. The group of isolated noun phrases includes one or more isolated noun phrases. The method also includes translating the group of isolated noun phrases from a source language to a target language using a category driven isolated noun phrase translation. The determination of the category and the category driven isolated noun phrase translation are performed based on context derived from the group of isolated noun phrases.

Some embodiments include an apparatus a system and an automatic machine translation MT method for performing automatic MT of isolated short and proper noun phrases. Some embodiments also include a system for translating structured and semi structured data using the automatic MT method. Under one definition a noun phrase is a single noun pronoun or adjective or a group of words containing at least one noun pronoun or adjective and no verb that function together as a noun pronoun or adjective. The group of words that function together as a noun pronoun or adjective may include parts of speech such as nouns pronouns adjectives adverbs determiners and conjunctions but no verbs. For example all of the following are noun phrases for the purposes of ASSETS boy the boy the small boy the small boy in the garden the small boy in the garden with the ice cream small very small and XL . The precise labels for the parts of speech depend on the syntactic model used to describe a language. For example the part of speech called determiner can be further sub classified as articles demonstratives possessive pronouns quantifiers etc. Nonetheless a person of ordinary skill in the art will readily appreciate the intent of this definition of noun phrase based on the discussion and labels provided herein. The automatic machine translation system and the functionality employed by the system may be called the Automatic Semi Structured Entity Translation System ASSETS . Isolated noun phrases may be found naturally in structured data sources such as spreadsheets and databases or the isolated noun phrases may be contained in semi structured data produced through preprocesses such as information extraction from full text or noun phrase chunking. While columns are discussed herein the term extends to any set of grouped data including data obtained from semi structured lists. Dividing sentences into non overlapping phrases is called text chunking and noun phrase chunking deals with a part of this task that involves recognizing the chunks that consist of noun phrases.

The translation strategies employed by ASSETS may use category labels in one or more ways. Some include a lexicon based lexical transfer mechanism that selects target language translations based on a preference for translations that are pre associated with a semantic category in the system s lexicon. A lexicon of a language is its vocabulary including words and expressions. An advanced translation strategy used by the ASSETS functionality in some embodiments employs category specific shallow transfer rules to produce a graph of possible translations combined with statistical language models specific to each category to enhance translation sense selection and word ordering.

Some embodiments of ASSETS provide translation capabilities for data that is naturally structured by virtue of occurring in lists or in rows and columns such as data that is found in spreadsheets or in tables of a database. ASSETS can also be used to process data that is semi structured in the sense that the data originally occurred in full text but was extracted and possibly categorized by information extraction technology. An example of category specific knowledge enabling the selection of an appropriate translation strategy is for names of people which normally should not be translated but instead either left alone transliterated or translated using name only translation senses. For example the Russian name should be transliterated as Sergey Lozhechko and not translated as Sergey spoon as mentioned above. Likewise should be transliterated as Shedrov Aleksandr or translated as Shedrov Alexander rather than translated as Generous Alexander . Also included are category appropriate translations of abbreviations such as np. which expands to street in addresses or to in medical terminology as in thymol test or to other in np. etc. . Further translation sense selection is affected by the semantic category of a noun phrase. For example per the above the Russian word means street in the context of a list of addresses but it means brochure or prospectus in the context of a list of document types.

Computer readable media may be any available media that can be accessed by processor and includes both volatile and nonvolatile media removable and non removable media and communication media. Communication media may include computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media.

Processor is further coupled via bus to a display such as a Liquid Crystal Display LCD for displaying information to a user such as server status information. A keyboard and a cursor control device such as a computer mouse are further coupled to bus to enable a user to interface with ASSETS server .

In one embodiment memory stores software modules that provide functionality when executed by processor . The modules include an operating system that provides operating system functionality for ASSETS server . The modules further include ASSETS functionality that is configured to perform structured data translation. ASSETS server can be part of a larger system such as a cluster computing system a distributed computing system a cloud computing system a server farm or any other system having multiple servers and or computing devices. ASSETS server will typically include one or more additional functional modules to include additional functionality. In some embodiments ASSETS functionality may be part of operating system or part of one or more other functional modules included in other functional modules .

It should be noted that many of the functional features described in this specification have been presented as modules in order to more particularly emphasize their implementation independence. For example a module may be implemented as a hardware circuit comprising custom very large scale integration VLSI circuits or gate arrays off the shelf semiconductors such as logic chips transistors or other discrete components. A module may also be implemented in programmable hardware devices such as field programmable gate arrays programmable array logic programmable logic devices or the like.

Modules may also be at least partially implemented in software for execution by various types of processors. An identified unit of executable code in a software module may for instance comprise one or more physical or logical blocks of computer instructions which may for instance be organized as an object procedure or function. Nevertheless the executables of an identified module need not be physically located together but may comprise disparate instructions stored in different locations that when joined logically together comprise the module and achieve the stated purpose for the module. Modules may be stored on a computer readable medium which may be for instance a hard disk drive a flash device random access memory RAM a tape drive an optical drive a compact disk having read only memory CD ROM or a digital video disk having read only memory DVD ROM or any other such medium used to store data. The medium may be read only or read write. The modules may also be stored on multiple media either residing on the same hardware device or distributed across multiple hardware devices.

Indeed a unit of executable code could be a single instruction or many instructions and may even be distributed over several different code segments among different programs and across several memory devices. Similarly operational data may be identified and illustrated herein within modules and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set or may be distributed over different locations including over different storage devices and may exist at least partially merely as electronic signals on a system or network.

The functional modules of ASSETS server include a tokenizer module a morphological analyzer module which may include or be replaced by a part of a speech tagging module a Comma Separated Value CSV translator module a transliterator module a dictionary module a TM module a categorizer module and a translator module . Tokenizer module divides a source language string into tokens when tokens are not provided to the system. Tokens represent word like units that may be looked up in dictionary module or translation memory module and thus be associated with a set of grammatical and semantic features. Tokenizer module generates information about the tokens it produces including properties such as the data type and the capitalization.

Morphological analyzer module may perform operations including lemmatization to find the citation form of each token along with dictionary and TM lookup by dictionary module and TM module respectively to retrieve all information associated with the citation form and to perform affix analysis for the purpose of determining grammatical characteristics marked by inflectional affixes. Lemmatization is the process of determining the lemma of a word. A lemma is the form of the word used as the headword or citation form in a dictionary glossary or index. For example hide is the lemmatized form for hides hiding and hidden . Lemmatization functionally allows the different inflected forms of a word to be grouped so they can be analyzed as a single item.

CSV translator module parses comma separated data to retrieve the structured data stored therein. While shown here as a CSV translator in some embodiments one or more other characters may be used to separate data by CSV translator . In some embodiments CSV translator may be denoted as a delimited data translator since what the delimiter characters are and whether the file is actually a physical file are matters of design choice. For example the data structure provided to ASSETS could be a virtual table resulting from a select statement from a database or from some other component that has read in data from an unknown spreadsheet format. Transliterator module uses a specified transliteration standard to convert the writing system of a source language into that of a target language and is used by various features to replace some or all of the source language string with target language characters. For example in some embodiments transliterator module may be used to replace indicated portions of a TM entry with appropriate transliterations. Transliterator module may also be used to replace unknown source language words with similar sounding representations in the target language and or to convert an entire source cell into a target language spelling. Dictionary module contains associations of tokens with a set of grammatical and semantic features. TM module contains lists of pre identified translation pairs whose associations may be restricted by category. Categorizer module may be configured to automatically identify the most likely category of a list of data. Translator module uses the ASSETS category driven isolated noun phrase translation feature to translate data cells from the source language to the target language.

Information for the functional modules of ASSETS server may be retrieved from the various databases DB s depicted in . These databases may either be located in the same physical storage device or distributed across two or more storage devices. The entirety of a single database is not necessarily stored on a single storage device. In tokenizer module uses tokenization rules DB morphological analyzer module uses morphological rules DB transliterator module uses transliteration rules DB dictionary module uses dictionaries DB TM module uses TM tables DB categorizer module uses categorization models DB and translator module uses translation rules and models DB respectively. Configuration parameters DB contains shared parameters that may be used by all modules. Statistical language translation and models DB may be used in performing noun phrase translation by a statistical engine or by a word sense selection feature that uses statistical knowledge such as statistical engine or category driven word sense selector respectively both illustrated in .

Various client applications may access the functionality of ASSETS server . A client computer accesses ASSETS server directly using a local client application . Another client computer accesses ASSETS server via a Java Remote Method Invocation RMI client application by way of RMI server . Yet another client computer accesses ASSETS server via a web client application by way of Simple Object Access Protocol SOAP server . While RMI and SOAP are discussed herein other distributed and remote technologies may be used at the implementer s discretion.

The ASSETS system may be configured with various parameters allowing user control over the interpretation of the document the behavior of categorizer module transliterator module and the translation features. The parameters available for controlling the system in some embodiments are listed in Table 1 below and explained in more detail in the sections pertaining to the affected component.

Once the encoding has been handled data loader checks whether the document should be categorized by sample rather than using the entire document at . If the system is configured to categorize by sample rather than using the entire contents of a column a sample selector gathers a set of column samples for use by ASSETS column categorization . The option to categorize by sample rather than using the entire contents of a column is an efficiency measure that is designed to increase the speed with which a document can be loaded. Categorization by sampling may be performed for instance for large documents. The final task of data loader is to determine whether column headers are to be used for categorization at . If yes a header selector isolates column headers to be factored into the column categorization. The process then proceeds to ASSETS column categorization .

After data loader has loaded the data ASSETS column categorization identifies the category of each column to be translated. Users may specify some or all of the column categories or may allow ASSETS column categorization to automatically determine the most likely category of each column. Once the category of each column to be translated is identified the individual cells along with the column category and any relevant parameter values are passed along by ASSETS. If cells require translation at the data is passed to ASSETS category driven isolated noun phrase translation to translate data cells from the source language to the target language. Once cells no longer require translation the process ends at .

The process starts at with a column or list of noun phrases being provided. Per the above one method of obtaining a column categorization is for a user who understands the source language to select a category for each column from among the column types available in the ASSETS category ontology. The precise contents of knowledge bases such as the category ontology lexicons transliteration and translation rules may be subject to change and may differ by language. If a user has specified a category at the category is known to the system and the process ends at .

However if a user such as a human using a GUI or a program that uses an Application Programming Interface API to configure the system either setting the category through the API parameters or configuring it to automatically detect the category does not specify a category for a column of data the system attempts to categorize the column automatically. While cells remain to be categorized at ASSETS column categorizer illustrated in creates a composite score for each category by combining results obtained for individual cells from Noun Phrase Categorization at . The score is created for a subset of the column s data if the system is configured to use column sampling or from every cell in the column otherwise. ASSETS column categorizer itself may use every cell provided to it to perform the categorization. Once there are no cells remaining to categorize at cell category score combiner combines the scores. If the system is not set to use a threshold at where the top ranking score for a column should exceed the second highest score by a margin defined either through system default values or specified by the user the system proceeds to select the top hypothesis at . If the system is set to use a threshold at and the top ranking score passes this threshold at the associated category is selected as the column category based on the top hypothesis at and the process ends at .

If the threshold is not passed at additional features of the column are considered in the reclassification. Column level distributional feature extractors are employed to extract distributional features pertaining to the whole column at and are incorporated into the classification results. In another embodiment the column level features and the header features are incorporated in the same Bayesian model as the cell level features which may be toggled on or off by configuration parameters. Distributional features may include observable statistics such as the number of unique cell values in the column the number of unique tokens in the column the frequency curve of the tokens in the column and the like. After passing through column level distributional feature extractors at the data passes through a Bayesian classifier that is trained to associate feature values with categories defined in the ASSETS category ontology. Bayesian classifier uses distributional models stored in distributional models DB .

If no column headers are available the process proceeds to category combination analyzer . If the system or a user has made column headers available at the column headers are passed to column header classifier and considered. The column headers are passed to a cross language header ontology component that is configured to classify column headers according to the ASSETS cross language header ontology. The header ontology in some embodiments is a two level classification system associating header strings with category labels. Strings of any language may be listed under any given category. If a header is not found within the header ontology an attempt may be made to use a general English semantic ontology to locate the header classification. This is accomplished via the translation senses of each source token.

If a header is found at using the header ontology at the process proceeds to category combination analyzer . If not the process proceeds to a general semantic ontology reasoner that is configured with a parameter that determines the direction in which the tokens should be examined i.e. left to right or right to left. This setting should generally be derived from the headedness of noun phrases in the source language. In other words if the source language reads from left to right and is a head first language the tokens should be scanned from left to right. If the source language reads from left to right and the source language is a head last language the tokens are likely to be scanned from right to left. Languages that are read from right to left are also accommodated by this approach. This parameter allows languages with different characteristics to be effectively handled by the header classification component.

For each token translation senses are looked up one by one in the general semantic ontology for the target language. The ontology is queried for synonyms of the translation sense under consideration. Each synonym obtained in this way is then looked up in the ASSETS cross language header ontology. If a synonym is found its associated category is returned and the process proceeds to category combination analyzer . If no synonym is found the next token is examined. The first token found using this cross language reverse lookup technique may be used to determine the category of the header. If no synonyms are found the ontology is queried to obtain hypernyms of the source token s translation senses which are then looked up in the header ontology. A hypernym is a word that is more generic than the source word. This process continues until a header category is selected or until the maximum node traversal limit is reached or all tokens in the cell have been examined. The maximum node traversal limit may be another parameter of general semantic ontology reasoner . Once the process has proceeded to category combination analyzer this component uses the data available from the previous components including one or more of cell category score combiner Bayesian classifier and column header classifier . Category combination analyzer then makes a determination as to the category that should be used.

In some embodiments category combination analyzer uses various techniques for producing the final decision about the category rankings. A decision tree is used to determine which technique is employed. If headers are not used then the results produced by noun phrase categorization and Bayesian classifier are combined mathematically to re rank the categories. If headers are available the decision tree determines whether header classifications are configured to override statistical classifications for direct matches in the header ontology. If so the header category is used directly. If not the header category produced by column header classifier is used to decide among the top choices when the category matches one of the top N categories where N is an integer and inclusion in the top N categories is determined by being within the threshold relative to the top hypothesis.

Some embodiments of the ASSETS noun phrase categorization like other ASSETS operations are language independent but configurable for specific languages using parameter settings and externally defined knowledge sources. The noun phrase categorization may use feature extraction and machine learning based on Bayesian statistics to automatically determine the category of a single cell or isolated noun phrase. A Bayesian classifier such as Bayesian classifier of may be trained to associate feature values with categories defined in the ASSETS category ontology. The types of features used for categorization may include data type characteristics morpho syntactic information semantic categories and features local distributional statistics and pattern based features. The specific set of features used may vary according to the parameter settings for the language being processed. Each language may be configured to use a different subset of the ASSETS category ontology and possibly a different subset of the ASSETS feature extractors.

Feature extractors are specialized components that look for specific characteristics of the entire noun phrase string or of individual tokens of the string. Each feature extractor is designed to identify a specific type of characteristic. For example one feature extractor may be specialized to examine the parts of speech of the NP s tokens another to calculate the ratio of numbers to characters another to examine the semantic category labels associated with each token and another to look for externally defined pattern matches. The ASSETS noun phrase categorization such as noun phrase categorization of and the process for noun phrase categorization illustrated in introduces the notion of feature extraction strategies. Each feature extractor uses one strategy selected from a library of feature extraction strategies along with a set of language specific knowledge base resources such as lexica and pattern descriptions. Some feature extraction strategies that may be used for NP categorization are described in Table 2 below.

The ASSETS noun phrase categorization may consist of a training phase and a run time classification phase. During the training phase the system is taught to associate each category in the ASSETS category ontology with values produced by a group of feature extractors. Training is accomplished by running feature extractors on labeled training data i.e. data for which the category is known . The feature extractors produce discrete continuous and real enumerated values representing different types of extraction results and a Bayesian statistical model is produced that records the strengths of association of each feature value with each category. At run time in order to classify unknown data the same set of features is extracted. The association strengths for each feature value are retrieved from the model and computed to produce for each category a probability score representing the likelihood that the data belongs to the category. This process flow is illustrated in .

The process then proceeds to token content analyzer . This component associates each token with all known attributes contained in lexicon DB or TM DB . While the DBs are shown as connected to one another and data from TM DB would be passed through lexicon DB in one of ordinary skill in the art would readily understand that the databases may be connected in any fashion and data from one DB need not pass through another to reach a certain module. This is also the case with the other DBs illustrated in the figures. In order to retrieve information from lexicon DB or TM DB token content analyzer inspects each token to determine whether it needs to be submitted to a morphological analysis routine and performs the analysis if it does. The behavior of this component may be controlled through configuration options specified by system developers during the creation of a knowledge base for a new source language. The configuration options allow certain token types to be excluded from morphological analysis and or from translation in general. For example tokens with the types NUMERIC URL or EMAIL do not need to be looked up in a dictionary or further analyzed. This behavior is configured for each language pair s knowledge base because the tokenization rules and therefore token types are subject to change from language to language.

Tokens whose types are not explicitly excluded are subject to morphological analysis. Morpholgical analysis in the ASSETS system includes lemmatization to find the citation form of each token along with dictionary and TM lookup to retrieve all information associated with the citation form and affix analysis for the purpose of determining grammatical characteristics marked by inflectional affixes. Any required disambiguation of translation senses is performed in subsequent stages of the ASSETS system.

The complication involved in looking up words in electronic dictionaries may be the same that a human being encounters when looking up words in a paper dictionary namely finding the appropriate headword or citation form for the word being looked up. For example one does not search for the word boys in an English dictionary but rather boy because the latter is the uninflected singular form of the noun which by English lexicographic standards is the citation form for nouns. Finding the citation form of words for the purpose of looking them up in the dictionary involves determining whether the word is already a citation form or whether it has affixes attached to it. For the word boys for example the citation form is found by removing the plural suffix s . Morphological analysis is challenging for numerous reasons. Often rules that guide the formation and decomposition of word forms have exceptions. For example in English a simple rule for finding the citation form based on a plural surface form might be to remove the letter s so that boys becomes boy and cats becomes cat . This rule would over apply to words ending in s such as his which would erroneously become hi and would under apply on surface forms ending in es such as crutches . Further the rule would not apply at all to irregular plurals such as children . These examples are provided to illustrate the concept of morphological analysis which is challenging even for languages with relatively limited morphological paradigms such as English.

In some embodiments of ASSETS each language configuration may use one of three possible strategies for relating surface forms of words to their citation form. The first is a morphological dictionary which is simply a file that lists all known surface forms their citation forms and the features indicated by any attached affixes including prefixes suffixes infixes circumfixes and any other category of bound morpheme. The second is run time morphological analysis which attempts to decompose words into citation forms plus affixes using rules statistics or other mechanisms. The third is stemming which is an imperfect but fast technique that may be used in information retrieval systems for removing endings leaving a stem that may or may not correspond to a real word but that can be used to quickly flatten distinctions among words and to find the associated entry in an index. The first two strategies may be the techniques used for locating terminology in some embodiments of the ASSETS TM and lexicons since they allow for the identification and use of grammatical information carried on affixes for the purposes of more accurate translation. Token content analyzer uses lexicon DB for looking up terms in the lexicons.

The process then proceeds to cell level feature extractors . Per the above each feature extractor is designed to identify a specific type of characteristic and in some embodiments may include one or more of those listed in Table 2. Next Bayesian classifier is trained to associate feature values with categories defined in the ASSETS category ontology using features such as data type characteristics morpho syntactic information semantic categories local distributional statistics and pattern based features. Bayesian classifier uses statistical category models from statistical category models DB and a semantic category ontology from semantic category ontology DB . Following application of the Bayesian classifier the process ends at .

A purpose of the ASSETS category driven noun phrase translation feature may be to define a set of processes where isolated noun phrases such as of the type encountered in structured data can be converted from one human language the source language into another human language the target language . The feature may rely heavily upon the identification of a category and the association of that category with a translation strategy. The overall approach of the translation in some embodiments is to delay deep linguistic analysis until all other options have been exhausted meaning that the feature may rely heavily upon the existence of a densely populated translation memory and system dictionary that may be supplemented by user created translation memories and dictionaries. If items are not found in one of these resources then the ASSETS hybrid category driven isolated noun phrase transfer feature may be used. The noun phrase transfer feature may offer a set of translation strategies along with default associations between those strategies and the categories of the ASSETS category ontology. Users may override those defaults either by explicitly specifying which strategy to use for a list or column of data or by changing the strategy assigned to a particular category. All of the major components of the system employ category labels to perform their role. The high level flow of the translation feature according to some embodiments is depicted in .

In translation of a data cell the category of the cell or isolated noun phrase is ascertained. In this application the terms cell and isolated noun phrase are used interchangeably. If the process is provided with a valid category at no categorization is performed unless the categorization provided to the system is overridden at . In the case that the categorization is overridden the cell would be re categorized using the ASSETS noun phrase categorization feature at . Once a valid category is established at if the category does not require translation at no further processing is required and the process terminates at . If the category does require translation at if tokens are not already available at the cell data is tokenized by tokenizer . As discussed above the role of an ASSETS tokenizer such as tokenizer may be to divide the source language string into tokens if tokens are not provided to the system. Tokens represent word like units that may be looked up in the system s dictionary or TM and thus be associated with a set of grammatical and semantic features. Tokenizer generates information about the tokens it produces including such properties as the data type and the capitalization. Tokens are then passed through token content analyzer to retrieve associated TM and lexicon based syntactic and semantic properties as discussed above. These properties may be used by components throughout the remainder of the translation. If the system is configured to use translation memory at the cell data level at ASSETS translation memory is applied to cell data. If ASSETS translation memory returns a translation no further processing is required and the process ends at . If the cell data is not handled by the translation memory component then it is passed to ASSETS category driven isolated noun phrase transfer feature which is discussed in further detail with respect to below.

Translation memory may be a standard component of some machine translation systems. However some embodiments of ASSETS translation memory are transliteration enabled . This means that although the translation memory contains a list of fixed translation pairs sub portions of the entries may be marked as transliteratable . Any portions of the source string marked as transliteratable will change form in the translated output based on the rules of the selected transliteration scheme unless the use of transliteration by the TM is globally disabled. For example the Russian TM entry for noun phrase 3AO may be listed in the TM as IntelCom Telecommunications Company JSC. If the TM is configured to use transliteration the bracketed portions in this example would be replaced with a different string if the transliteration standard used different letter to letter mappings. For example in many standards IntelCom would be spelled IntelKom and the string returned would be IntelKom Telecommunications Company JSC .

First user lexicon lookup is performed to determine whether the whole cell i.e. the entire NP string is found in the lexicon. If a match is found at and only one translation sense is available at the process ends at . If more than one translation sense is available at the process proceeds to category driven word sense selector . If the whole cell is not found in the lexicon at ASSETS TM lookup is performed at . If the whole cell is not found the process ends at . If the whole cell is found the process proceeds to the more than one translation sense decision point and continues as discussed above. If a whole cell match is found and a category specific translation sense is available that sense is returned. If not the default general sense is returned. Returning to the category match required decision point at that is reached when an entry is found in either the user TM lookup proceeding to the yes branch of decision point or the ASSETS TM lookup proceeding to the yes branch of decision point if the process requires a category match at then the category parameter is checked against the types listed for the entry in the TM. If the types do not match at the process finishes by returning no results. If they do match at or if no match is required at the next step is to determine whether transliteration is to be applied. If the translation memory feature is configured to not use transliteration at then the target language string is returned literally as is from the TM and the process ends at . Conversely if the TM feature is configured to use transliteration at the TM entry is checked for annotations indicating which portions of the entry need to be transliterated at and each portion if any is passed to transliterator in turn. Transliterator uses the specified transliteration standard to replace the indicated portions of the TM entry with the appropriate transliterations and the process finishes by returning the translation.

The ASSETS hybrid category driven isolated noun phrase transfer feature is a highly configurable translation component that provides flexibility by giving users the option of specifying a translation strategy to be used in some embodiments. The strategies range in complexity from a simple transliteration only strategy to a more complex shallow syntactic transfer strategy with category focused statistical translation sense selection. Some of the ASSETS translation strategies for some embodiments are listed below in Table 4.

The translation strategy works in conjunction with other parameters to control processing steps taken by the noun phrase transfer feature as illustrated in . is a flow diagram illustrating ASSETS hybrid category driven isolated noun phrase transfer according to an embodiment of the present invention. The process starts at with an isolated noun phrase being provided. Two of the translation strategies are essentially short circuit paths . If the translation strategy involves transliteration only at the data is passed to transliterator whose results are returned as the isolated noun phrase translation and the process then ends at . If the translation strategy is to use a third party component at the cell data will be passed off to that component and its results returned as the translation ending the process at .

If neither of the short circuit paths is chosen if a token list is not provided at the cell data is tokenized at . Token content is then analyzed by token content analyzer which makes use of lexicon DB and TM DB . Translation memory is applied at the sub cell level by subcell TM applicator if this parameter is toggled on at . Subcell TM applicator also has access to TM DB . Any remaining tokens are translated according to one of four remaining translation strategies key word replacement plus transliteration category driven lexical transfer shallow syntactic transfer and statistical model translation. If the translation strategy is key word replacement plus transliteration at then any key words in the un translated portion of the string are translated using the category appropriate translation sense or the default sense if a category specific sense is not available in the lexicon by key word replacer . The semantic features that mark a token as a key word may be specified on a per category basis. Once this is accomplished the remaining tokens are passed to transliterator and the combined results are returned as the isolated noun phrase translation ending the process at .

If the strategy is not key word replacement plus transliteration at three strategies remain. The first is the category driven lexical transfer strategy at . This is performed by category driven word sense selector which makes use of Target Language only Category specific Language TLCL Models DB . Under this strategy source words are translated in situ by replacing each source token with a category specific translation sense. If more than one category specific sense is available a target language only category specific language model is consulted to select the translation sense. If no category specific sense is available the default sense is used.

If category driven lexical transfer is not selected at the system determines whether statistical model translation is to be used at . If yes then statistical engine is employed. Statistical engine uses category specific statistical models for purely statistical translations making use of category specific translation models DB and TLCL models DB . After statistical engine the process ends at .

Finally if none of the previously described translation strategies is used the default behavior is to perform shallow syntactic transfer first using shallow syntactic semantic transfer rule engine which makes use of category specific phase reordering rules CSPR DB . In this approach category specific rules are applied to the input. These rules describe word order transformations necessary to achieve optimal target language word ordering. The application of these rules which may apply to overlapping spans of text produces a translation graph. A translation graph is a compact way to represent alternative translations that would be produced by the application of different rules and the selection of different word senses. Then the best path through the translation graph is chosen. This is accomplished using a similar translation sense selection as described for the category driven lexical transfer strategy but with the addition of statistical n gram models used to prefer paths through the graph that optimize the presence of high frequency n grams in the target language. Namely category specific translation senses are preferred. If more than one category specific translation sense exists a target language only category specific language model is consulted to select the translation sense. If no category specific sense is available the default sense is used. The result of this translation strategy should be a well formed phrase representing the meaning of the source phrase via the syntax and vocabulary of the target language.

In some cases input provided to ASSETS will contain words or tokens that are not recognized by the system as part of the source language s vocabulary. Unknown words are referred to as being out of vocabulary OOV . Tokens are out of vocabulary if they are not found in the dictionary or TM or recognized as a data type that is not required to be analyzed such as numbers email addresses and alphanumeric data types. The handling of OOV items is determined by configuration parameters. OOV items may be left as is in situ in the original script of the language or transliterated according to the selected transliteration scheme. OOV items may also be flagged meaning that they will be highlighted using some markup such as bold font brackets or some other technique. In order to allow ASSETS users or developers to enhance the system by inspecting and handling OOV terms if OOV items are to be logged at a log writer is provided that may record OOV terms and certain data about their context that will allow the OOV terms to be incorporated into the lexicon TM or rule base or statistical models in subsequent instantiations of the ASSETS system. If OOV items are to be transliterated at the process proceeds to transliterator . Thereafter the process ends at .

Other GUI features not shown may include automatic and interactive error correction with the ability to save correction settings to a user adaptation preferences file. A language information library giving users visual clues to help select encodings scripts for unknown languages may also be included in the GUI.

Some embodiments of ASSETS translate isolated noun phrases in the absence of the linguistic or natural language context that is available to and relied upon by conventional full sentence translation approaches. Rather the context in some embodiments of ASSETS may be derived from the group of isolated noun phrases. ASSETS may be language independent but configurable for specific languages using parameter settings and externally defined knowledge sources such as databases of for example. Some embodiments of ASSETS may compensate for the lack of linguistic or natural language context by using machine learning and advanced reasoning techniques to classify the semantic category of each noun phrase according to a predefined semantic category ontology for noun phrases principally covering proper noun phrases known as named entities. The term named entity refers to proper noun phrases of specific categories such as person name place name or organization name. Category labels may be used throughout the ASSETS functionality for selecting both category appropriate translation senses and category specific translation strategies. The ASSETS functionality may employ a large scale TM containing lists of pre identified translation pairs followed by a suite of specialized translators for each noun phrase category. The category specialized translators may employ various translation strategies. The TM may require category labels for retrieving category appropriate translations from the TM s list of pre determined translation pairs. A hybrid automatic translation approach may select translation components based on an association between a category and a translation strategy.

The ASSETS system may employ the ASSETS functionality on a larger scale further exploiting noun phrase categorization using context provided via structured data formats. The columnar organization of spreadsheets and database tables provides natural groupings of nearly homogenous category data. Some embodiments of ASSETS may either calculate the most probable semantic noun phrase category for an entire column of related noun phrases or allow users to specify the column category label. Column based categorization may reduce classification errors and therefore translation errors by providing either a human judgment or a probability distribution for the categorization of an entire column of data rather than for an individual cell. Column categorization uses additional features not available to an individual cell categorizer incorporating information obtained from column headers distributional features derived from the entire column of data and advanced reasoning pertaining to the relationships among the columns. By default the category label associated with a column may supersede the individual categorization of a single cell and may be provided by the ASSETS system based on system defaults or user specifications. The ASSETS functionality may use the provided category label or the automatically determined category label for selecting terminology from the TM as well as for selecting the appropriate translation strategy. The selected translation strategy may determine the combination of lexical senses transfer rules and statistical models used during the final algorithmic phase of the translation. One translation strategy available in the system is essentially to do nothing meaning that some categories once categorized might not be translated but instead passed through the system intact e.g. numbers email addresses and dates .

Some embodiments of ASSETS exploit knowledge about semantic categories that is available in structured and semi structured contexts. A column of data in a spreadsheet is normally a list of items that are grouped together by virtue of having the same category. Lists may contain one or more items. Individual items in a list may be referred to alternatively as a cell or as an isolated noun phrase. Lists provided to some embodiments of ASSETS are not forcibly derived from columns of a spreadsheet or a database table. The lists may also be manually assembled or grouped into like categories through the use of technologies such as information extraction.

Some embodiments of ASSETS provide a mechanism for allowing users to specify the category of a list or column of data. A column s category may be obtained by the user via automated means such as an information extraction engine or the category may be manually selected based on observation of the data. If the user cannot or does not wish to specify the category of a column ASSETS may provide an automatic column categorizer that uses ASSETS column categorization functionality to identify the most likely category of a list of data. Once the column s category has been established each of the cells in the column is passed to the ASSETS category driven isolated noun phrase translator for processing.

While the term server has been used in the description of some embodiments of the present invention the invention may be applied to many types of network computing devices. For purposes of this invention the term server includes rack computing systems cloud computing systems distributed computing systems personal computers laptops cell phones personal digital assistants tablet computing devices mainframes any networked devices that perform computing operations and any of these physical servers.

One having ordinary skill in the art will readily understand that the invention as discussed above may be practiced in a different order and or with hardware elements in configurations that are different than those that are disclosed. Therefore although the invention has been described based upon these preferred embodiments it would be apparent to and readily appreciated by those of ordinary skill in the art that certain modifications variations and alternative constructions would be apparent while remaining within the spirit and scope of the invention. Further some components may be left out for certain languages. For example the morphological analyzer component may be left out for some source language or the morphological analyzer may be substituted for or complimented by a part of speech tagger. Some languages may also include additional components. For instance Arabic and Hebrew may require a vocalization in order to insert vowels into names for proper transliteration. In order to determine the metes and bounds of the invention therefore reference should be made to the appended claims.

It should be noted that reference throughout this specification to features advantages or similar language does not imply that all of the features and advantages that may be realized with the present invention should be or are in any single embodiment of the invention. Rather language referring to the features and advantages is understood to mean that a specific feature advantage or characteristic described in connection with an embodiment is included in at least one embodiment of the present invention. Thus discussion of the features and advantages and similar language throughout this specification may but do not necessarily refer to the same embodiment.

Furthermore the described features advantages and characteristics of the invention may be combined in any suitable manner in one or more embodiments. One skilled in the relevant art will recognize that the invention may be practiced without one or more of the specific features or advantages of a particular embodiment. In other instances additional features and advantages may be recognized in certain embodiments that may not be present in all embodiments of the invention.

