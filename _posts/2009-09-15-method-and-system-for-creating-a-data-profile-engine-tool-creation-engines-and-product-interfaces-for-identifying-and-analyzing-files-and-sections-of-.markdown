---

title: Method and system for creating a data profile engine, tool creation engines and product interfaces for identifying and analyzing files and sections of files
abstract: A data profile engine identifies, classifies, analyzes, searches, compares and cross-references entire files and sections of files, records and other forms of electronic media, and a tool creation engine in combination with the data profile engine builds custom solutions and product interfaces.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08606796&OS=08606796&RS=08606796
owner: Kilac, LLC
number: 08606796
owner_city: Minneapolis
owner_country: US
publication_date: 20090915
---
This application relates to U.S. Provisional Application Ser. No. 61 097 033 filed Sep. 15 2008 and entitled Method for Creating a Data Profile Engine Tool Creation Engines and Product Interfaces for Identifying and Analyzing Files and Sections of Files which is herein incorporated by reference in its entirety.

A data profile engine for identifying classifying analyzing searching comparing and cross referencing entire files and sections of files records and other forms of electronic media is provided. A tool creation engine is also provided in combination with the data profile engine for building custom solutions and product interfaces.

Search and classification systems are measured by their precision the ability to find only relevant materials and their recall their ability to find all relevant documents . However the variability of language including synonymy different words describe the same idea and polysemy words having two or more meaning limit the accuracy of current search engines. The result is that researchers may not find all useful material or may have to review volumes of search results in order to find useful material. Moreover current search engines are limited in their capacity to accurately find a particular section from a certain type of document.

In addition to finding and classifying materials a number of industries and service sectors rely upon standard documents and forms to ensure quality and accuracy of their documents. A number of industries have manually constructed and maintained professional document standards and templates. For example the American Institute of Architects AIA and the American Society of Landscape Architects ASLA maintain standard building and planning specifications. In the legal field the International Swaps and Derivatives Association ISDA provides standard master documents for complex financing. Templates also exist for project management software development and many other professional practices. Currently in order to generate a standard template experts must read and review numerous documents manually create the outline and identify standard text associated with each section and alternative examples of each. Due to the breadth complexity and expense of the process standard documents are not broadly available for all professional documents.

In view of the aspects described above provided herein is a data profile engine that captures the digital signature or characteristics of electronic media and their component elements. The textual characteristics of text blocks together with hierarchical relationship information of the blocks to each other enables new tools to be created for accurate text search classification and data mining.

In certain embodiments a method for identifying a relationship between a plurality of data files comprising word text which may be implemented in a data profile engine. The method includes receiving at a processor the plurality of data files from one or more computer databases deconstructing the data files into one or more text blocks creating a data profile for each data file and for the one or more text blocks associated with each data file each data profile comprising a statistical signature for a set of data forming the corresponding data file or text block compared to the plurality of data files and storing the data profiles on the one or more computer databases.

In another implementation a tool creation engine may be provided which is based on the data profile engine and generates document standards and templates. Accordingly a system for analyzing a document comprising text is provided and may be considered a template and or benchmarking tool. In this implementation a processor is configured to receive the document and perform the steps of deconstructing the document into one or more text blocks creating a data profile for each of the one or more text blocks each data profile comprising a statistical signature for a set of data forming the text block and comparing the data profile for each of the one or more text blocks with a template stored on a computer database the template comprising data profiles for matching text blocks from a source set of documents and a user interface is coupled to the processor for displaying an indication of similarity of the document compared to the template the indication of similarity comprising statistical measure of frequency for matching text blocks.

In yet another implementation a system for preparing a document comprising text is provided which may be configured as a document drafting and reuse tool. In this implementation a processor is configured to receive the document and perform the steps of deconstructing document into one or more text blocks creating a data profile for each of the one or more text blocks each data profile comprising a statistical signature of a set of data forming the text block and comparing the data profile for each of the one or more text blocks with data profiles associated with a model document stored on a computer database the model document comprising a plurality of statistically similar text blocks from a source set of model documents and a user interface coupled to the processor is for displaying default standard clauses alternative clauses and infrequently used clauses based on the source set of model documents.

In another implementation a system for searching entire files and sections of files provides a processor configured to receive a plurality of documents and perform the steps of deconstructing the plurality of documents into one or more text blocks creating a data profile for each of the one or more text blocks each data profile comprising a statistical signature of a set of data forming the text block and comparing the data profile for each of the one or more text blocks with data profiles associated with a model document stored on a computer database the model document comprising a plurality of statistically similar text blocks from a source set of model documents. The system additionally includes a user interface coupled to the processor for entering a search the search comprising search terms sections captions and or text of a similar section of a user document compared to the model document as well as a display for displaying the search results.

These and other features and advantages of the present invention will become apparent to those skilled in the art from the following detailed description wherein it is shown and described illustrative embodiments of the invention including best modes contemplated for carrying out the invention. As it will be realized the invention is capable of modifications in various obvious aspects all without departing from the spirit and scope of the present invention. Accordingly the drawings and detailed description are to be regarded as illustrative in nature and not restrictive.

The data profile engine analyzes multiple source files e.g. electronic media including documents and records identifies sections of text in each file a text block matches text blocks within a file and across all files by constructing collections of matched text blocks a text block group resulting in multiple sets of text block groups a text block group set and building a statistical signature of each text block text block group and text block group set identifying their common and distinguishing attributes a data profile .

The data profile captures information including related text blocks text block groups and text block group sets captions alternative captions document levels text block sequences parent sibling and child relationships words and word weights word match scores for each text blocks and its sub blocks and its word clusters. An example of a data profile is attached in Exhibit 5. Data profiles are created for the document as a whole and its text blocks. The data profile can then be used to match similar text blocks and organize entire file into common framework.

The tool creation engine utilizes the data profile engine and its data profiles to facilitate the creation of a wide range software tools to analyze collections of files or individuals files performing services such as document organization research reuse and validation. An example of a tool creation engine is a document template engine that uses the data profiles of a text block group set to construct an aggregated document outline based on the content and structure of all compared documents. The aggregated outline can be applied to user selected documents or any part of a document to decompose classify extract meta data benchmark search mark up common language identify important document specific language identify default provisions and group results by common attributes. Product interfaces are used to render the results of these tools in a human readable fashion and can be adapted to different user domains e.g. architecture banking resumes law or general use .

The data profile engine operates in either an untrained or unsupervised mode of operation or it may be configured to utilize information in existing data profile. In the untrained mode the engine starts with no pre existing data and constructs data profiles using configurable settings and formulas. Using the initial settings and formulas engine builds information regarding the source set of documents to identify more and more detailed and variant statistical signatures or data profiles for text blocks appearing the source file set and thereby the types of files represented by its domain area. Using this approach the data profile engine may build and continue to refine knowledge of legal agreements architecture specifications resumes or any other type of document.

The word universe index is a word statistical index containing word frequencies word weights and statistical information including minimum value maximum value mean value median value and deviation. It is generated from a large set of sample documents and is used to measure commonality mean and divergence in a broad set of documents compared to the word occurrences in specific documents and word occurrences in specific text blocks.

A text block is a section of words from a file. It may consist of an entire file many paragraphs a single paragraph or even a singe word. Depending on the type of source documents text blocks may be organized at a single level or they may be hierarchically nested i.e. a text block may contain other text blocks as shown in .

In a hierarchical domain of documents text blocks can be grouped in a hierarchy recording their sequence and level. In text blocks 1 2 and 3 are examples of level 1 and incorporate the characteristics of the nested text blocks within its scope. Text blocks 4 5 and 6 are examples of level 2 text blocks nested within text block 2. Text blocks 7 8 and 9 are examples of level 3 text blocks nested within text block 5. The sequence of each text block follows the order in the document the hierarchical level provides information regarding the depth of a particular section. The combination of sequence and level and ancestral trail determines the location of the text block in the document.

In a hierarchical domain of documents nested text blocks are treated as sub text blocks of its parent. In the example of text blocks 4 5 and 6 are sub text blocks of text block 2. Text blocks themselves may be composed of sub text blocks. For example a caption heading may be considered a sub text block of a text block comprising a paragraph as shown in . Sub Text blocks may also be composed of hierarchically nested text blocks.

The scope of a text block is defined by program rules formulas identifying paragraphs captions matching words and matching word clusters in other documents.

Depending on the type of source documents text blocks may be organized at a single level or they may be hierarchically nested i.e. a text block may contain other text blocks as shown in .

A text block group is a set of matching text blocks sharing sufficient common characteristics as defined by formulas scores and thresholds. shows the example of two resume files and finds that text block 1 in file 1 has shared characteristics with text block 2 in file 2. In this example the two text blocks are grouped together in the set text block group 1 and the statistical characteristics of a text block group are stored as data profile capturing the individual and aggregate characteristics of each text block and all related text blocks.

By analyzing the shared characteristics of each text block group sets of text block groups are identified. In a text block captioned other interests is found and would likely match similar text blocks in further files and generates a text block group for other interests . By comparing the text block groups for hobbies and other interests the engine determines that hobbies and other interests share sufficient common attributes to be treated as a text block group set.

The engine uses configurable formulas to identify and match file elements. The scoring examples shown in this document are illustrative of the methodology applied. In practice the engine calculates numerous statistical metrics known to one skilled in the art. A complete set of formulas is shown in Exhibit 4 detailing the pseudo code for text block to text block group matching. All other processes minor this process but are not detailed in each section for purposes of understanding the overall methodology. A sample configuration file used to set threshold scores is attached as Exhibit 1. A sample output score for each statistical metric is attached as Exhibit 2.

Each entity i.e. words text blocks text block groups and text block group set is given one or more base scores for its characteristics using configurable formulas.

When comparing one entity to another the engine computes match scores focusing on a range of characteristics such as distinguishing words leading words and caption heading words. Each type of match score is created using configurable formulas to determine the level and scope of the shared characteristics of the entities being compared.

In many cases match scores yield different comparative metrics. Resolution scores again based on configurable formulas determine the processing methodology for particular tasks such as generating a template see tool creation engines template generation in relation to or matching text in a new document to a set of data profile. Resolution scoring methods include determining the best match identifying redundant matches and assessing the sequence and level of text blocks in a domain of files that possess hierarchical attributes.

The statistical signatures of text block groups are known as data profiles. Data profiles are constructed using an iterative process of building base scores match scores and resolution scores. The process generally follows the sequence of comparing 

In a workflow depicts certain implementations of the data profile creation methodology process in which a data profile engine generates data profiles for use in generating tools . A data profile engine provided on a computer system receives a set of files which may be cleaned and converted analyzes the files to capture a statistical signature of the files and sections within files and performs the steps of capturing the identifying and distinguishing attributes and establishing organizational relationships to other files and sections with such other files.

According to certain implementations a word universe captures the statistical attributes of words in a comprehensive set of files which may be the same or similar to the set of files and measures word frequency across the files and within sections of such files.

The data profile engine processes the files using a series of formulas to identify text sections and sub sections text blocks and sub text blocks within documents using lexical and formatting attributes of words and files . This file processing decomposes the files into text blocks . For example discrete text blocks are identified in each file by comparison to the statistical signatures of text sections created during the processing sequence or drawn from existing data profiles.

Each text block undergoes a matching process which may involve using a series of formulas for computing statistical scores for each text block in each file. For example a base statistical score of each text block in each file may be compared to generate match scores. Formulas may be applied to the scores for resolving different comparative metrics and determining match or shared characteristics . Text blocks are matched within each file and across a set of files.

Matching sets of text blocks sharing common characteristics are grouped into text block groups . In certain implementations redundant or duplicate text block groups are identified and or eliminated. For each text block group a data profile is created which is a definition of the statistical signature of the text block group. The data profile may capture a base statistical score shared word characteristics file organization characteristics and alternative match results. Text block groups are compared with each other to determine their matching characteristics and statistically similar text block groups may be merged and the text block group s data profile may be updated and refined. In some implementations certain text blocks are initially unmatched to a text block group either because the text block does not match any group at a particular instance as the text block groups are built or because the text block group has not been processed by the data profile engine. Accordingly the unmatched text blocks are compared to text block groups defining a base score a match score and a set of resolution scores and matched .

Text block group sets are generated by comparing text block groups to other text block groups and those that share common characteristics form a set. The text block group set may be analyzed to determine the correct sequence order of each text block. That is the sets of text block groups sharing common characteristics are compared to determine the correct hierarchical depth of each text block . The comparison may involve implementing a set of configurable rules for iterative reprocessing capturing increasing statistical information for identifying matching text sections with greater precision and broader recall.

Data profiles may be stored on a data profile database and information related to the text blocks text block groups and sets of text block groups may be provided to tool creation engines in order to create tools for text block utilization. The tool creation engines allow for the creation of programming tools and product interfaces.

The tool creation engine may include a data profile and matching rules tool for analyzing a user document in a manner similar to the data profile engine in which the document is decomposed into text blocks and matched with a text block group.

A document drafting and reuse tool may deconstruct a user document and identify text blocks based on paragraphs captions headings and statistical comparison to document template and text block data profiles. In certain implementations the user document and document sections may be used as data for use in finding alternative matching sections from a set of documents. In addition the document drafting and reuse tool may identify an exemplar section from the set of matching sections that most closely conforms to a data profile.

The tool creation engine may generate a document validation tool which may be configured for identifying language conformity in particular sections of a document compared to the data profile. In another embodiment the document validation tool is for identifying common language or key text based on statistical analysis of word clusters found in text blocks. Data may be extracted for identification of document specific information such as names places dates and amount applying the statistical comparison of file text blocks to template data profile to a word universe. In another embodiment the document may be analyzed for identifying and displaying standard language and document specific or negotiated language. Document may also be analyzed for identifying the default text block from all data profiles as the text block that contains the most common words containing all required word clusters and the least number of non standard words. In addition document may be evaluated and selected sections compared to a program generated prototypical section providing redline information including standard language non standard language and missing language in a redline format e.g. underlining bolding or highlighting standard language striking through non standard language and underlining or italicizing missing language.

Meta data extraction tool may retrieve meta data from user document by using rule based techniques to capture titles headings names places and dates.

The tool creation engine may generate a template generation tool for automatic generation of document templates and text block data profiles constructed from multiple source documents e.g. sample files etc. creating a single aggregated outline and index of all distinguishing documents elements that may be displayed as a hierarchical tree or alphabetical list.

In another embodiment the template generation tool is for automatic generation of master templates combing individual document type templates into a single universal template. For example combining all legal agreements into a universal template containing all document elements from all the individual document templates themselves generated from individual source documents. The master template can be constructed as a market standard a checklist or universe of all text blocks.

The template generation tool may be configured for automatic generation of model templates or documents for particular document types such as a merger agreement or landscape planning specification applying mutually exclusive rules and text block redundancy rules to remove similar text blocks found in different locations in individual documents and determine the most frequent location of each template outline element. A model document or templates includes a number of statistically similar text blocks from a source set of model documents.

The template generation tool may be also be configured for automatic generation of checklist templates identifying all common variants of each document hierarchical elements above a programmatically or user defined threshold including redundant text blocks that may be found in different locations in individual documents.

The template generation tool may generate universal templates identifying all distinguishing sections and text blocks in the analyzed document set including unique text blocks. Derivative templates may also be created from a small source set of files applying the data profile information from a larger set of similar files.

Furthermore templates may be analyzed for example by identifying the frequency that each text block appears in the template. Templates may be analyzed to identify the closest matching templates associated for a particular document applying template matching rules.

In addition a methodology for editing the templates and checklists to generate customized outlines and text block components to capture exemplar practice or the distinct needs of particular document requirements may also be implemented by the template generation tool .

Next the tool creation engine may generate a document and text block classification tool in which user documents are categorized based on text extraction and statistical comparison to document template and text block data profiles. In another example the document and text block classification tool categorizes topical sections of documents based on document decomposition statistical comparison to document templates and text block data profiles.

According to certain implementations the tool creation engine may generate a key language highlighting tool in which a user document is analyzed and the engine highlights standard terms in a document or section of document showing standard language and non standard language. A lawyer for example may select a particular clause in a Loan Agreement and highlight and distinguish the standard language of the clause the deal specific language and key deal terms such a party names jurisdictions dates amounts etc. .

The tool creation engine may generate a document and text block searching tool for finding entire documents using a file as the search pattern by comparing the file to all template profiles and comparing titles if available captions length and distinguishing text blocks uniquely associated with a given template. In another embodiment the document and text block searching tool may identify matching sections using any section of a document e.g. search terms captions sections of text or entire documents as the search pattern comparing the document fragment and the source file from which it derives to template profiles and data profiles.

The tool creation engine may generate a document and text block benchmarking tool for analyzing similarity and divergence of an entire document compared to a template providing a statistical measure of frequency for all matching text blocks and b a list of all text blocks missing from the selected document compared to the selected templates. In another embodiment the document and text block benchmarking tool is for analyzing similarity and divergence of selected text blocks or text fragments compared to the template providing a statistical measure of language commonality and variance compared to the a text block data profile.

Aspects of data profile creation methodologies are further described in the example below in which the methodology is applied to create data profiles in an untrained mode of operation using the example of a set of resumes used for employment application. The example illustrates the steps of the processing of a sample of 1 000 resumes and describes how the resulting text block group set is constructed.

The example assumes the general structure of resumes contains the sections listed in . However notably the system is not given this information the data profile engine deduces the structure applying engine rules and logic.

The word universe is generated from a large set of sample documents and is used to measure word commonality mean and divergence in a broad set of documents compared to the word occurrences in specific documents and word occurrences in specific text blocks. The examples shown illustrate the scoring methodology limited to averages. In addition scoring applied by the data profile engine calculates and measures other statistical measures such as mean mode and deviation.

The word universe statistical score may be built by measuring word occurrences in entire files or text blocks within such files. For purposes of measuring word occurrences in text blocks an identification formula using special characters such as carriage returns and line feed is used. By measuring word frequency in text blocks the word universe can determine whether words appear in distinct sections of files.

In addition to single word occurrences in files and text blocks the word universe also detects word pairs word triplets etc. The example in Table 1 shows an example of statistical measures for word occurrences in files.

The identification of text blocks uses configurable rule sets to identify demarcation characteristics and decomposes input documents into text blocks. Depending on the type of documents processed the rule set may incorporate the following formulas 

Each text block is attributed a base score calculated by the sum of its word weights for each word in the text block. The word weights may be carried forward from the word universe or recomputed comparing word frequency in files to word frequency in text blocks.

The calculation of the text block base score is illustrated using the text in . the sample text shows two text blocks taken from two different resumes files. Table 2 shows the calculation of text block 1 from the first resume file.

Word Commonality Score 1 calculates the word frequency in each file as a percentage of all files applying Formula 1.

In the example the base commonality scores for text block 1 are shown in Table 1 displaying the word frequencies for each word in the text block. It will be understood that formulas shown are illustrative of the methodology used and not comprehensive of all formulas used in the template engine.

After generating text block scores for each file text blocks in each file are compared to text blocks in every other file to measure the degree of commonality of match. The example shows the text block match scores for text block 1 and text block 2.

The match scoring methodology compares any two text blocks and applies a number of different statistical measures to assess similarity and difference each of which may generate a different score. Examples of the formulas include 

Other methods used but not illustrated include calculating scores for word pairs word triplets and word clusters. The data profile engine applies a number of different matching formulas that can be configured depending on the domain set of document analyzed.

The example in Table 4 shows the match results for comparing text block 1 and text block 2. Matching or common words appearing in both text blocks are bolded and italicized.

High frequency word formulas focus on the most distinguishing words in the text blocks. In the example the high weight words are italicized. The resulting formulas yield a score of 0.67 for Text Block 1 and 0.75 for Text Block 2.

Key topical features of a text block are frequently found at the start as authors typically draft from general to specific. Applying this circumstance scores can be calculated based on a defined number of leading words in each text block. In the example the first 4 words are used to generate a leading word score. The formula definitions apply the same methodology as used high word weight formulas. The resulting formulas yield a score of 1.0 for both text block and text block 2.

Section captions also provide valuable information about the topical content of the Text Block. The formula definitions apply the same methodology as used high word weight formulas. the resulting formulas yield a score of 1.0 for both text block and text block 2. As detailed in later sections the data profile engine stores the caption word sequence and its scores as a sub text block.

The text block matching formulas provide different comparison metrics for each text block. Formulas and rules can then be applied to solve particular tasks. For example if the task is to identify whether two text blocks match a text block match rule may be applied. Using the example some of the potential match score are shown in Table 5.

The data profile engine uses a multi pass methodology to build data profiles iterating through all or some of the steps described in each pass. The order of these steps outlined will vary dependent on configuration options and the nature of the document domain. In some cases they may be less linear. The steps outlined below show the typical composition of the first pass through the process.

The identification of the scope text blocks is refined during the iterative procedure. in the initial identification of text blocks described above the data profile engine uses lexical and formatting characteristics to identify text blocks. As more detailed information about the text blocks is constructed data profile matching is used is identify and demark text blocks. In addition data profile information from prior processing can be used which is described further in the bootstrapping example document decomposition.

As the data profile engine builds information about each text block its characteristics and its organizational relationships to other text blocks the engine is tuned for strict matching. In other words the initial passes are optimized for greater precision to find only those text blocks that are strong matches. In the current example text block matching is performed between different files but text matching may also be applied within files.

The results of matching process create text block groups which are set of text blocks sharing similar characteristics as identified by formulas.

In the current example initial sets of matching text blocks are identified by a sub text block caption word formula described in 2.1.1 1 b iii in order to generate high precision matches.

Redundancy rules eliminate duplicate variants. In many cases individual documents may use a different caption heading to describe the same or similar concept. In the example Hobbies and Other Interests likely capture a similar subject matter. Analysis of the files shows that a number of different files have a category for Hobbies and Other Interests but very few have both. The redundancy rules define the metrics for identifying duplicate variants and the least occurring forms.

The redundant scoring detects that Hobbies and Other Interests appear in the same resume very infrequently. Where the word commonality score further indicates that the section covers the same topic the text block group Hobbies is retained because it appears in more files than Other Interests .

The methodology of fine tuned using additional match scores including high weigh words leading words captioned words and word clusters.

After generating data profile scores for each matching text blocks each data profile is compared to all other data profile to measure the degree of shared characteristics.

The data profile engine applies a number of different matching formulas that can be configured depending on the domain set of document analyzed. The final data profile comparison score indicates the comparative match level between the two data profiles.

Profile to profile matching performed in step B.3 b determines that data profiles for Hobbies and Other Interests are similar and the redundancy check performed in step B.3 c indicates they are duplicate variants. Merge rules are defined whereby data profile meeting configurable rule set are merged into one text block group. In the example the Hobbies branch will have 340 members. The profiles are be recalculated to reflect this new combined text block group.

Since this example is a data domain with captions captions are stored as sub text blocks and sub text block groups.

This allows for example formulas to be used that understand the sub text block groups profiles such as using the various captions associated via sub text block groups with the text block groups to be used to match another caption. As a result the engine stores Other Interests as an alternative caption to Hobbies and this information can be used in subsequent passes through the engine to match captions.

The process of creating initial text block groups is tuned for high precision. As a result many text blocks are likely not matched to a text block. With the additional information in the data profiles these unmatched text blocks can be compared to the data profiles.

Each unmatched text block is compared to all data profiles. In this example unmatched text block 5 from file 3 is compared to the data profile of the hobbies text block group.

Applying the text block comparison methods described earlier the system calculates the selected data metrics. In this example high frequency word weight word scores and leading word scores are computed however additional comparison formulas may be applied depending of the type of document set analyzed.

Additional match scores can be calculated and match rules applied through configuration settings. See Exhibit 3 . Where the unmatched text block is determined to meet the rules it is added to the text block group augmenting the statistical information in the profile.

The data profile engine will often generate multiple strong matches for text blocks and data profiles. Formulas and rules are applied to determine the best matches. In the circumstance of identifying a unique set of text block groups as opposed to document matching the formulas and rules are tuned for high precision. Where the task is matching a new document to the data profiles the match rules are relaxed and tuned for higher recall.

In general the best match rules draw on information in the data profiles and the match results generated in the process of creating text blocks and data profiles. The example shown illustrates a simple application of the approach.

Typically resolution of best matches requires the application of several formulas and scores. For example if match score of text block 1 and match score of text block 2 are both strong then the match attributes of other text blocks are analyzed to evaluate the degree of match and what they matched.

A text block group set is a collection of text block groups as defined by configurable formulas. An example is the set of all text block groups in a document domain. Another example is the set of all text block groups that share certain characteristics across document domains.

Text block group sets generated by the engine can reflect the order most commonly appearing in the input set of documents. In the example the resume structure follows the order objective experience education clubs and affiliations hobbies and contacts. Individual documents may choose a different sequence. The goal of the sequencing formulas is to determine the appropriate order of the data profiles by means of statistical averages adjusted where necessary to handle exceptional cases.

To illustrate the approach formulas are applied first to identify the relative average location of each text block in its source file.

Text Block Group Average Relative Sequence is therefore 0.878. Applying the relative sequence of all text blocks groups individual text blocks and all text blocks groups can be ordered by this sequence value. In some cases additional formulas are applied to capture sections that typically appear in a particular order such as the contacts sections of a resume that is usually the last section of the file. Average relative sequence is supplemented with mean and modal sequence statistics to gather information about absolute sequencing such text blocks that typically appear at the start or the end of a file or typically appear following a particular text block.

Data profile also gathers information about the organizational structure and relationships between text blocks to determine the depth level of each text block and its parent sibling child relationships. The hierarchical associations provide the engine more data points with which to make decisions such as the familial relationships and sub sequencing.

For example where the engine is analyzing sample text block 15 the structural elements shown in may be identified.

In the first pass based on an untrained mode of operation the engine relies formatting and lexical rules to identify the relationships in the same manner undertaken in identifying text blocks in the first iteration through the input set of documents. After data profiles have been constructed the relationship information in the profiles can be applied to identify the text blocks and the relationships between the text blocks. The engine captures and stores the profile information for hierarchically nested text blocks as sub text blocks applying the same methodology used to capture and store captions as discussed in section 2.1.2 1 b .

Text block relationship rules analyze familial relationships of a particular text block. In one approach the engine matches text block 15 Leisure Time Activities to the text block group 10 Other Interests because they posses matching children. In practice numerous profile matching techniques applying the matching approaches described are required to determine if the children of a text block match the children of a text block group.

In addition formulas are applied to identify word clusters within a text block group to identify common groups of words within the text of each member of the text block group. These clusters are then used in the same manner as the children in the example above. These clusters can also be used to highlight the important text in a text block for an end user and conversely identify Proper nouns specific document items etc.

Additional intelligence rules analyze familial relationships across the entire text block group set and determine the best location level and sequence of each data profile. Familial relationships across the entire text block group set apply formulas to cross check profiles to look for additional commonalities deficiencies and other information.

Identify Text Block Groups and Sub Text Block Groups The data profiles characteristics of parent siblings and children are applied in rules and formulas to identify text block groups with similar characteristics. For example two text block groups sharing the same parent and common children can be detected by a formula.

Identify Alternative Locations In a given document the same or similar sections text blocks may appear in different locations or in a different sequence in other documents. For example text block group 1 has a depth level of 2 while text block group 2 has depth level of 4 and it not a descent of block group 1. A formula can detect that these two have very similar profiles and in any individual document there will rarely if ever possess both text block groups. Thus a standard representation of the document structure should not include both.

In general this comparison applies data profile matching rules to compare text blocks that are not a part of any text block group or text blocks in new documents documents that are not a part of the text block set data profile to the data profiles in the selected set of text block groups matching either individual text blocks or the entire set of text blocks in the new document. The rules are based on base scores match scores and resolution scores with adjusted thresholds to account for the fact that the process involves a one to many comparison as opposed the many to many comparisons used for creating text block groups.

The process of matching operates in configurable sequence and in each pass lists of matched and unmatched text blocks are maintained. First level 1 text blocks and its direct descendents in the new document are compared to level 1 data profiles in the text block group set and its direct descents i.e. comparing among levels and between adjacent levels . Second each successive lower level text blocks and their direct descendents in the new document are compared lower level data profiles in the text block group set and their direct descents. Third each successive text block level in the new document are compared each successive level in the text block group set regardless of ancestry. Finally any remaining unmatched text blocks in the new document is allowed to match any data profile in the text block group set.

This section begins with an example of creating data profiles in untrained mode. Once data profiles are initially created they can be used to enhance the next creation of data profiles and allow the engine to operate in a trained mode. Examples of this bootstrapping follows and additional examples of bootstrapping are described in tool creation engines 2.2.1.

Bootstrapping may be applied for example to the process of document decomposition. In an untrained mode decomposition relies on lexical characteristics such as paragraph break rules and identification of headings based on text formatting. With existing data profiles document decomposition can more accurately decompose using the text block group profiles.

In a trained mode of operation together with more accurate document decomposition the data profile engine can re process all documents and generate more accurate data profiles. This process can be repeated as specified by settings or by formulas that instruct the data profile engine to stop re processing once the resulting changes are insignificant.

In an untrained mode of operation the process of creating text block groups is based on scorings that include potentially redundant text block groups. As a result the relative scores matching other text block groups is less accurate or non existent. And because the engine lacks accurate data regarding the importance of the words in the profiles the engine utilizes different threshold settings for an untrained mode of operation.

Text block group word profiles build statistical information determining how distinguishing the word is across all text block groups. In an untrained mode however the engine cannot determine the how distinguishing a word is compared to all text block groups because the engine does not know which text block groups are redundant and therefore scores will be less accurate.

In an untrained mode the engine may lack sufficient information to accurately perform step 2 b . In subsequent passes or in a trained mode of operation the engine can benefit from the distinguishing words calculation and scoring rules adjusted to reflect the greater precision. In this manner using a trained mode of operation the data profiles builds increasingly accurate information and more varied word examples and thereby learns from the data.

Tool creation engines apply formulas to the data profiles to enhance the data profiles and to create tools for end users such as search capability and document templates. The tool creation engines formulas create tool specific scores which can be stored back to the data profiles for use by other tool creation engines and to enhance the intelligence of the data profile engine for future processing. An example is a tool creation engine with sophisticated formulas to calculate relationships across a text block group set. The results of theses formulas are not only useful to create a tool to view a standard outline of a document set but the results are also stored to the data profiles to add intelligence to the document classification tool.

Different data domains will share appropriate tool creation engines but may also require specialized tool creation engines.

Tool creation engines are constructed from the data profile engine and facilitate the development of a wide range of software systems for organization research reuse and validation of individuals of sets of files. For example the systems can be built for analyzing a set of files and creating document templates searching and classifying files and any part of a file identifying exemplar or alternative sections and validating entire files or any section of file against the standard established by a template.

Product interfaces combine the tools into logical product packages for a specific user domain and apply human readable interfaces to the tools created by the tool creation engines.

Using the example of resume analysis discussed in the data profile engine section a standard template showing the frequency of occurrence of each section of the template is shown in and this example is used to illustrate other Tool Creation Engines and Product Interfaces.

A document template is a standardized exemplary document structure organizing all matching text blocks in a source set of documents and creating a single organizing framework. From an end user perspective it is a master specification or a guiding framework capturing and organizing all distinct elements from all source documents. It can be viewed as an outline See similar to the table of contents of a book and typically listed at the front of a publication or an index of topical items sometimes appearing at the end of a document See .

The document template tool creation engine automates the process of defining the outline structure identifying text examples associated with each outline element and maintaining the structure as new standards emerge. The engine can analyze a few files or many thousands of documents. The greater the number of source documents the more variants the engine will identify.

The document template product interface provides an end user interface on the results of the document template tool creation engine. show examples of a legal document template generated by the engine. In addition to displaying the structure and organization of the standardized document information is displayed to show the frequency that each section of the outline occurs in the template. Sections occurring with high frequency may be denoted and considered as standard or even required elements while those with a low frequency may denoted and be viewed as optional document specific or emerging new language.

The engine can produce different types of outlines depending on the selection of the template generation rules.

A master template aggregates all document type templates such as model checklist and universal templates used in a particular professional practice area into a single comprehensive outline such a master legal document template capturing all the discrete matching document elements for every type of legal agreement or a master building template containing all the design and construction requirements for every type of building project.

A model template generates a standardized template for one particular type of document such as residential home construction specification or a credit agreement. The model template serves as a best practice guideline containing standard sections i.e. those over a stated commonality threshold and applies mutually exclusive rules to remove redundant variants so that each topical section occurs in only one place in the Template 7.

A checklist template contains all matching clause variants and redundant variants. it is typically constructed from a large sample set of document so that the template framework contains all topical elements together with detailed sub elements for each section thereby creating an outline of all items that may be considered in a particular project.

A universal template is an encyclopedia of all discrete topical variants including infrequently occurring and unmatched sections and may be used as a reference source.

A derivative template is a template generated from a smaller set of documents based on the template and data profiles created from a larger document collection. Derivative templates can be used where for example a particular organization wishes to build a model template but lacks sufficient examples to provide a data rich set of data profiles. In this circumstance statistical information in the primary template is used to build a derivative whose structure solely based on the smaller set of documents.

A new document can be decomposed into an outline structure by identifying text blocks in a new document and matching the text blocks to the selected data profiles providing a navigation tool to link to sections in the document whether or not the new document contains captions or numbered sections as shown in .

Using the data profiles the document template tool creation engine automates the process of defining the outline structure identifying text examples associated with each outline element and maintaining the structure as new standards emerge. The engine can analyze a few files or many thousands of documents. The greater the number of source documents the more variants the engine will identify.

Each of the functions requires a tool creation engine to analyze and create the data necessary for the product interface.

A Search Tool Creation Engine is a set of formulas that use the data profiles to match text to text block groups in order to create a search tool that can be used in an end user product interface.

For example if the desired search tool is a text box in which the user can enter a textual query and receive a list of the top text block group matches it may apply the following sets of formulas 

A document search tool creation engine can find entire documents by analyzing the structure and contents of an example document compared to text block group sets and their data profiles. Topical sections of documents can be located based on a selected section or fragment of text by comparison to the data profile in user selected or automatically identified templates. In addition the engine facilitates word searching for captions and text content.

A new document in its entirety is classified by comparing its structure and contents to document type text block group sets by applying data profile matching rules. Topical sections of new document are classified by comparison to program selected or user selected text block group sets and its associated data profiles.

For example a tool creation engine can be created to analyze data profiles word commonality and divergence between various text block group sets and store findings to the data profiles. The data profile engine may thereafter use this information to classify documents to specific text block group sets. For example the existence and frequency of a few words and the lack of a few other words indicate this document is a resume.

The document and section search tools are applied to find alternative examples of particular sections with the need for explicit search techniques. Users can select a particular section and the words in the section are used as a search pattern to identify and find alternative example. The search result set can be ordered in sequence of conformity to the data profile or grouped by clustering the result set of sections based on the attributes of the alternative sections.

In addition the tool creation engine can identify an exemplar section as the alternative most closely matching the data profile.

The tool creation engine may also be used to display the outline of a document such as a resume and provide other functionality. For example Formulas may be constructed to utilize the data profile information to produce the following 

Entire documents and text sections are benchmarked to a selected text block group set by comparison to the data profiles in the text block group sets. Benchmarking identifies matching text blocks displays the frequency that each text block occurs in the text block group sets the consistency of the language in each text block in a document compared to the data profiles in the text block group sets and any text blocks occurring with high frequency in the text block group set that are missing from the benchmarked document.

In the resume example the tool creation engine analyzes the data profiles so that the product interface can provide feedback to the user identifying 

In addition to provide a benchmarking report the tool creation engine can propose changes be made to a specific document. Applying sequencing formulas and sub text block caption formulas the system can automatically re order the sequence of the Hobbies section and rename the Contact Information section to Contacts. 

In addition to analysis occurrence and frequency of text blocks compared to the data profiles the tool creation engine can analyze the degree of consistency of the language used in each section of the new document compared to the data profiles. The analysis applies matching formulas to validate the present of sub text blocks common words words pairs and word clusters. In the same manner as document benchmarking the validation feed back can identify conforming language non conforming language and missing language.

In the resume example the sections entitled Objective while matching the location and sequence of the Text Block in the Data Profiles shows little conformity of the language used compared to the Data Profile and is therefore highlighted.

Typically text processing techniques for meta data extraction operate using rule based techniques to capture titles headings names places and dates. The data profiles facilitates a tool creation engine that uses the statistical information in the word universe and the data profiles to identify words and words clusters appearing in a document with much higher frequency than in the word universe. Words appearing frequently in a particular file but having a lower commonality score in the word universe are typically document specific data such as names of people companies amounts and dates and other information specific to the document being analyzed.

By constructing data profiles the engine provides a new method of data mining and identifying document specific information. By comparing the statistical information in the word universe to the data profiles formulas identify words and word clusters appearing with higher frequency in a document compared to the universe. For example a company name may appear frequently in a particular document but is rare in the universe.

In the example bolded text represents common words and word clusters in the text block group profiles. Italicized words are more common in this text block group than in the word universe. Underlined words are very uncommon in the word universe but they appear unusually frequently in a particular document and are likely key entities or subject matter topics in the document. Combining the key data identification rules with other known attributes of data profiles offers faster and more accurate data mining compared to existing rules based approaches.

A document research engine identifies the best matching model document for a new drafting project. For example a lawyer may use the tool to identifying a particular existing loan agreement closely matching a reference standard from the lawyer s personal collection of documents a law firm s collection or a public collection to be used as a starting point for a new drafting assignment. An architect may use the tool to retrieve a construction specification for a particular type of building project from the architect s archives.

A document deconstruction and navigation tool summarizes the provisions in a file and create an outline and index of all sections in a file and a method to hypertext link to each section. A lawyer reviewing a lengthy loan agreement for example may use the tool to create a outline of a file showing listing all its articles clauses and sub sections and use the index to find and display each section.

A document analysis engine benchmarks an existing document against a reference standard for commonality and consistency. For example a lawyer may use the tool to analyze a document drafted by another lawyer or another law firm to determine how the new document matches a reference standard to access whether the clauses in the new document are frequently used standard clauses whether they are uncommon whether any standard clauses are missing whether any clause is not located in the standard place in the document whether the language of each clause matches the reference standard is missing any standard language or includes deal specific language. An architect may use the tool to analyze a building specification to ensure it is complete contains standard building specifications is not missing any standard specifications and that the language of each specification meets the building code guidelines.

A document drafting tool identifies default standard clauses alternative clauses and infrequently used clauses. A lawyer for example reviewing a loan agreement may identify non consistent clauses uses the tool and replace the clause or selected text in the clause with a standard or default clause or use the engine to display alternative clauses grouped by conformity to the reference set of clauses or grouped by reference to the selected clause in the loan agreement or use the engine to display infrequently used clauses. An architect reviewing a building specification for a new home construction may identify non standard building specifications and use the tool to find and replace such non standard specifications with the standard building specification and review alternative specifications.

A document analysis engine highlights standard terms in a document or section of document showing standard language and non standard language. A lawyer for example may select a particular clause in a loan agreement and highlight and distinguish the standard language of the clause the deal specific language and key deal terms such a party names jurisdictions dates amounts etc. .

A document validation engine ensures that a document satisfies the market standard. Upon completion if a drafting assignment a lawyer or architect may use the tool to ensure that the document is complete contains all required clauses or specifications and that the language of each clause contains all required terms.

The methods according to the present invention are implemented using computer methods. In some implementations various combinations of software and hardware may be used as would be apparent to those of skill in the art and as desired by the user. In addition the present invention may be implemented in conjunction with a general purpose or dedicated computer system having processor memory and display components which may be communicatively coupled on an internal or external network e.g. the World Wide Web Internet to other computing systems including databases.

From the above description and drawings it will be understood by those of ordinary skill in the art that the particular embodiments shown and described are for purposes of illustration only and are not intended to limit the scope of the present invention. Those of ordinary skill in the art will recognize that the present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. References to details of particular embodiments are not intended to limit the scope of the invention.

