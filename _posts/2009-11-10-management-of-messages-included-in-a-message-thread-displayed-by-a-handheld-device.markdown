---

title: Management of messages included in a message thread displayed by a handheld device
abstract: The present invention determines which messages to display in message threads to a user. An electronic communication device receives and stores numerous SMS messages transported through an SMS network, but the SMS messages are sent without explicit linking information such as a previous message or subject line. A threading module applies threading rules to determine which messages to correlate into an SMS message thread through implicit link information. The threading rules thread outgoing messages sent in response to an incoming message from a user, or incoming messages where a previous outgoing message was sent to the user. An SMS application displays threads in a user interface and indicates messages threads with an icon in one view, and displays an expanded message thread in another view.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08046014&OS=08046014&RS=08046014
owner: Hewlett-Packard Development Company, L.P.
number: 08046014
owner_city: Houston
owner_country: US
publication_date: 20091110
---
This application is a continuation of U.S. patent application Ser. No. 10 759 597 entitled SMS Threading which was filed on Jan. 15 2004 and which claims priority under 35 U.S.C. 119 e to U.S. Provisional Patent Application Nos. 60 455 178 filed on Mar. 16 2003 entitled Handheld PDA Telephone and Camera and 60 479 392 filed on Jun. 17 2003 entitled Communicator the disclosures of each of which are incorporated by reference herein in their entirety.

This invention relates generally to network messaging applications and more specifically to correlating messages received in network messaging applications.

Messaging applications are the killer apps for networked devices. Mobile phone networks have traditionally been limited to voice communications but new technologies such as GSM Global System for Mobile Communications have enabled mobile phone networks to also include data communications. For example SMS Short Message Service messaging provides a software independent protocol to send short text messages composed of either 160 7 bit characters 70 16 bit characters or 140 octets of binary data. Individual SMS messages thus require a relatively small network bandwidth and devices can receive messages even when connected to a voice call. The number of SMS messages a user receives has continually increased because many new types of network devices have joined mobile phone networks. These devices include for example PDAs hybrid PDA mobile phone devices and other text messaging devices using GSM networks. An inherent limitation of the small SMS packet size is that neither previous messages nor subject lines are included within a current SMS message.

Because there is no inherent linking information e.g. subject line or application session tags in SMS messages they are displayed as discrete interchanges without the context of related SMS messages. A user exchanging SMS messages with multiple other users can thus quickly lose track of the multiple conversations. Moreover messages identified by phone numbers add a level of confusion. Consider a situation where User A sends a message to User B What time shall we meet and also to User C How many times A response message of 3 identified only by the sender s phone number may leave User A wondering whether the message was from User B or from User C.

A similar problem can arise when exchanging multiple messages with a single user. Because SMS messages are held while a mobile device is not reachable User A may not receive User B s response to a message for hours or even days. The entire conversation topic can thus span hours or days. Without the context of previous messages User B s response may leave User A wondering what question is being answered or how the conversation started.

What is needed is a robust messaging application that solves the above constraints of mobile devices and the inherent shortcomings of their communication protocols. Furthermore the messaging application should determine which messages to thread despite the above problems.

The present invention determines which messages to display to a user as a message thread. In one embodiment an SMS device receives and stores numerous SMS messages transported through an SMS network. SMS messages do not contain any explicit linking or relationship between the messages. Thus the SMS device must apply threading rules to determine whether to thread SMS messages by identifying implicit links. A threading engine generates an SMS message thread by applying threading rules from the outgoing SMS message rules for outgoing messages and from the incoming SMS message rules for incoming messages. An SMS application operating independently from the threading engine displays SMS message threads to the user.

One embodiment of the threading engine identifies related messages from implicit links between messages from a unique identifier native to SMS data packets such as a source or destination address. The unique identifier is independent of an SMS application or instantiations of the SMS application. In another embodiment the SMS application assigns an application identifier to an identified message thread. As such the source and destination SMS applications and instantiations of the same are capable of further communications.

In another embodiment the threading engine applies threading rules to correlate current messages with previous messages. The threading engine appends the current message to an active thread when available. If not the threading engine generates an SMS thread having the previous and current messages in a hierarchy according to relationships between the messages. For example the hierarchy may represent the order of arrival of included messages who sent each message and or which messages are replies to others.

In yet another embodiment the threading rules database is organized according to outgoing message rules and incoming message rules. In another embodiment the threading rules database is organized by interrelated set of message inclusion rules message hierarchy rules message formatting rules and thread management rules. The threading rules may be predetermined and or dynamically updated according to user configurations.

In still another embodiment the user interface displays an icon to indicate message threads. In another embodiment the user interface displays an expanded message thread representing message hierarchy. In yet another embodiment the user interface displays a drop down menu to list active threads.

The present invention determines which messages to display in a message thread to a user. A thread as used herein refers to a set of correlated messages. The threads are displayed to show current incoming or outgoing messages and their relationship to previous messages.

It will be understood by one of ordinary skill in the art that although the described embodiment uses an SMS messaging the invention may also be applied to MMS Multimedia Messaging Service EMS Enhanced Messaging Service or any data protocol capable of encapsulating messages for transport between networked devices. Also the terms SMS messages and messages are used interchangeably herein. Additionally the terms outgoing and sent messages are used interchangeably herein as are the terms incoming and received. 

The SMS message database persistently stores incoming and outgoing SMS messages. Incoming messages are received from other SMS devices. Outgoing messages are entered into the electronic communication device by the user. The SMS message database stores messages until a corresponding memory is full a maximum number of messages has been reached a time period has passed or the like. If the SMS device is powered down and then powered up again the messages are still available for correlating into threads. By contrast prior art systems without persistent memory are not able to recover message threads after powering down resetting or the like. In one embodiment unthreaded messages are stored in format as shown in and threaded messages are stored in a format as shown in .

The threading rules database stores rules that characterize relationships between incoming and outgoing messages stored in the SMS message database . is a block diagram illustrating a threading rules database according to one embodiment of the present invention. The threading rules database comprises outgoing SMS message rules and incoming SMS message rules . In one embodiment the incoming SMS message rules prevent unnecessary or unsolicited threads.

The outgoing SMS message rules are applied to messages sent from the electronic communication device to determine its relationship to previous messages. Example categories of threading rules include rules that determine thread association the type of thread in which to include the message previous messages to include in the thread and thread hierarchy. One rule always threads outgoing messages sent in reply to incoming messages. Another rule only thread outgoing messages sent to devices listed in the phone book. Yet another ensures that messages older than for example an hour or a week are not threaded. Also if the last message is older than a predetermined time a new messages are included in a new thread.

The incoming SMS message rules are applied to messages received to the electronic communication device to determine its relationship to previous messages. For example one rule limits unsolicited threads by only threading incoming messages from known users or that are verified by the device user. A similar rule does not thread messages that originate from known spammers or commercial entities. Other do not thread rules relate to special addresses that although are from a common source are not desirable for threading. For example rules detect and exclude voicemail notifications and numerical pages from a database of special addresses. Another rule attempts to thread incoming messages sent in reply to outgoing messages by assuming that any incoming message received from the destination of an outgoing message within a time limit such as 15 minutes is a reply. It will be understood by one of ordinary skill in the art that the outgoing and incoming threading rules are provided solely for the purpose of illustration and that other rules may also be included without departing from the spirit of the invention.

In the threading engine applies threading rules to correlate the current and previous messages into threads. In response to receiving incoming or outgoing messages or indications of such from the operating system the threading engine associates the current message with previous messages of the same thread. The threading engine identifies the messages based on a unique identifier native to SMS packets containing the SMS message. One example of a unique identifier is the source or destination address. A thread is organized by the unique identifier a sender s or receiver s name a contact from a phone book a phone number SMS address group affiliation a business entity a subject matter category a device a location a message urgency or otherwise. The threading engine may find an appropriate active thread and add the message into that thread. In another embodiment the threading engine generates a thread on the fly by sorting or previous messages in the SMS message database to find messages of similar characteristics. The messages are then put in chronological order. In yet another embodiment if there are no active threads or previous messages that correlate to the current message the threading engine initializes a new SMS thread. Methods related to the threading engine are described in more detail below.

The SMS application displays threads in a user interface and receives messages input by a user. The SMS application displays a SMS messages thread icon responsive to receiving an indication that the message belongs to a thread as shown in . In response to selecting the threaded message icon or active thread from the drop down menu the SMS application displays an expanded thread as shown in .

The SMS application may perform additional analysis on the message thread. In one embodiment the SMS application initiates a ring tone when receiving an incoming message included in an SMS thread. In another embodiment the SMS application determines format of the message text. In yet another embodiment the SMS application receives display formats from the threading engine . For example the threading engine indicates separate display formats for incoming and outgoing messages outgoing messages in progress or otherwise.

The SMS application is for example a network browser to view remotely stored SMS threads an application dedicated to SMS threading or any other messaging application that configured to send and or receive messages SMS and or other types of messages according to the present invention. In one embodiment a sending SMS application is different from a receiving SMS application . The threading engine thus threads messages independently and outputs its results through an application programming interface. Methods related to the SMS application are described in more detail below.

The threading module identifies the receiver of the outgoing message from for example a To Cc or Bcc field in the user interface the SMS packet s destination address or as indicated by the SMS message database . In one embodiment a first identifier is the identified receiver as indicated by the receiver s name phone number SMS address group affiliation or other unique identifier. In another embodiment a second identifier is associated with two or more first identifiers. One example of a second identifier is a phone book contact with two phone numbers each phone number constituting a first identifier. Based on the specific implementation two SMS threads can be generated based on the first and second phone numbers or a single SMS thread can be generated based on the phone book contact.

The threading engine correlates the outgoing message with previous messages according to threading rules and outputs the resulting thread to the SMS application as shown below in .

The SMS application displays the resulting SMS thread in a user interface. In one embodiment the SMS application displays the thread while the outgoing message is being entered. For instance if a user selects a reply icon the threading module may assume that the current message will be sent to the same entity that the replied to message was received from and include that outgoing message in the same thread. In another embodiment the SMS application displays threads after the message has been sent. The threading module may also display threads in circumstances other than receiving an incoming or outgoing message such as in response to selecting a user from the phone book.

In one embodiment displaying comprises a thread icon in an interface having other types of text and associated icons as shown in . In another embodiment displaying comprises an expanded thread of the outgoing and incoming messages as shown in .

The electronic communication device sends the outgoing message as shown below in and stores the message in the SMS message database .

If there is no an active thread the threading engine determines whether there are previous SMS messages sent to or received from the receiver. Accordingly the threading engine checks the SMS message database to identify previous messages based on either the first or second identifier. If there are previous messages the threading engine generates an SMS thread including the outgoing message and related messages as shown in . If there are no previous messages the process ends .

The threading engine determines whether the outgoing message is a reply message to an incoming message. If so the threading engine continues by sorting the previous SMS messages in chronological order. In one embodiment order of arrival to the electronic communication device determines the chronological order. In another embodiment a time stamp at dispatch from an SMSC or sending electronic communication device determines the chronological order. In one embodiment if the outgoing message is not a reply message the process ends .

The threading engine filters expired SMS messages so that they are not included in the thread. Message expiration is determined by age how many intervening messages have been received or otherwise. In one embodiment the threading engine indicates whether previous SMS messages were sent or received so that the SMS application can use different display formats in it s user interface. In one embodiment the threading engine updates the list of active threads for faster processing of future messages.

The threading module identifies the sender of the incoming message from a source address in the SMS packet or as indicated by the SMS message database . As with an outgoing message identifying may be based on a unique first or second identifier.

The threading engine correlates the incoming message with previous messages according to incoming SMS message rules and outputs the resulting thread to the SMS application . An advantage of having separate incoming and outgoing rule sets is that the incoming rule set can be configured to contain more restrictions than outgoing threading to prevent unnecessary and unsolicited message threads. The SMS application displays the SMS thread to the user as described above.

If there is no an active thread the threading engine determines whether there are previous SMS messages with the sender. Accordingly the threading engine checks the SMS message database to identify previous messages based on either the first or second identifier. If there are previous messages the threading engine generates an SMS thread including the incoming message and related messages as described. If there are no previous messages with the sender the process ends

In one embodiment the threading engine determines whether the sender is a non threaded sender. If the sender is a non threaded sender the process ends . If the sender is not a non threaded sender the threading engine determines whether a previous outgoing message was sent to the sender. If a previous outgoing message was not sent to the sender the process ends .

If a message was sent to the sender the threading engine sorts the previous SMS messages in chronological order as described. In one embodiment the threading engine then filters expired SMS messages and updates the list of active threads .

The transceiver provides the transmission and reception of signals carrying SMS messages in SMS data packets through a carrier frequency. The transceiver may be an RF Radio Frequency a Bluetooth an IEEE 802.11 type a USB Universal Serial Bus or an IEEE 1394 type transceiver or any other transceiver capable of transmitting and receiving signals carrying SMS messages.

The SIM card provides user account information to log on to a carrier server. Responsive to an event such as power up or reset the SIM card securely provides user profile information for access to the carrier server. The SIM card may be a compact flash or other type of memory capable of storing a user profile.

The processor executes instructions and manipulates data necessary for SMS message threading. The processor may be a microprocessor such as an ARM processor by ARM Inc. a Pentium 4 by Intel Corp. or an Athlon XP by Advanced Micro Devices an ASIC a FPD Field Programmable Device a microcontroller or any other device capable of executing instructions and manipulating data.

The input output controller receives outgoing messages from and sends thread display information. The input output controller may further comprise an audio video interface interface drivers a set of input and or output buffers and or microcode for interrupts. The input output controller may be implemented in hardware software or a combination. The input output controller is also capable of servicing other input output or peripheral devices.

The input output controller is coupled to a display . The display receives and displays processed video from the input output controller . The display is for example a monitor such as an LCD or plasma type a television or any other type of display device capable of displaying message threads. The display may be integrated with the device or separate.

The input output controller is also coupled to a keypad . The keypad receives messages and control commands from the user and outputs to the input output controller . The keypad is for example a QWERTY keyboard a number pad a graffiti module a touch screen a combination or any other input device capable of receiving user text and commands. The QWERTY keyboard may be mechanically adapted to use on a mobile device. Additionally they keypad works in combination with software that provides text shortcuts for faster text entry.

The memory stores the program code executed by the processor to thread messages such as the threading module . The memory may be a non volatile type persistent memory such as a hard disk a compact flash or an EEPROM. The memory may be also be a volatile type such as a random access memory a buffer a cache a register a combination of non volatile and volatile memory or other device capable of storing instructions and data. The memory may also be a single storage device or a system of storage devices. In one embodiment the memory also includes a phone book to store user contacts phone numbers SMS addresses e mail addresses etc.

The electronic communication devices correlate messages into threads for display to a user. The electronic communication devices exchange messages with each other through the SMS network . The electronic communication devices provide the described user interface to display messages to the user and also to input new messages. The electronic communication devices may comprise a PDA Personal Desktop Assistant such as the Palm Pilot an IP or cellular telephone a hybrid PDA cellular telephone device such as the Treo 600 by Handspring a PC Personal Computer a network appliance a mobile network device an SMS device or any other device capable of sending and receiving messages with the SMS network .

The SMS network comprises various interconnected network devices providing communication pathways for SMS messages exchanged between SMS devices . In one embodiment the SMS network comprises SMSCs that forward SMS packets from the electronic communication devices to other components within the SMS network and other electronic communication devices . In another embodiment the SMS network comprises a gateway to interface with alternative networks and an alternative network such as those on an IP network. An electronic communication device such as a PDA can thus exchange SMS messages with a PC. In another embodiment the system comprises an MMS or other type of messaging network for which the electronic communication devices thread messages.

In sum a system and method provide message threading for stored SMS messages. The threading engine identifies relationships between SMS messages by applying a set of threading rules responsive to an electronic communication device sending or receiving an SMS or other type of message.

The above description is included to illustrate the operation of the preferred embodiments and is not meant to limit the scope of the invention. The scope of the invention is to be limited only by the following claims. From the above discussion many variations will be apparent to one of ordinary skill in the art that would yet be encompassed by the spirit and scope of the invention.

