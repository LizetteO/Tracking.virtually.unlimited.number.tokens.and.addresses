---

title: Detecting spatial outliers in a location entity dataset
abstract: Disclosed herein are one or more embodiments that arrange a plurality of location entities into a hierarchy of location descriptors. One or more of the disclosed embodiments may determine whether one of the location entities is a spatial outlier based at least in part on presence of one or more other location entities within a predetermined distance of the one location entity. Also, the other location entities and the one location entity may share a location descriptor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09063226&OS=09063226&RS=09063226
owner: Microsoft Technology Licensing, LLC
number: 09063226
owner_city: Redmond
owner_country: US
publication_date: 20090114
---
With the wide availability of wireless and satellite connections to online services users are increasingly relying on location search services to find destinations. Services such as Windows Local Live Search often provide users with traditional maps of locations aerial photographs of those same locations and or combinations of photographs and maps.

In addition the services often annotate these maps and photographs with identifiers for landmarks businesses and or other points of interest. These annotations are often drawn from large datasets of location entities. The location entities are in turn often classified as point of interest POI entities or yellow page YP entities. POI entities are often created by users with mobile GPS enabled devices. Accordingly the GPS coordinates for such entities tend to have a high degree of accuracy. Other fields of POI entities e.g. name address etc. however tend to be less accurate as the entity creating user may not enter those fields with a great degree of care. YP entities are often created by the businesses or locations that they identify and may be captured for the dataset by for example crawling the Internet. Because YP entities are often created by businesses or locations having a strong desire to be found name and address fields of the entities may be highly accurate. GPS coordinates for YP entities are then geo coded based on the address field and vary in quality based on the accuracy of the address field.

These large datasets often include a number of entities with erroneous location information resulting in location identifiers being placed on maps at the wrong locations. While location entities with erroneous location information may be manually located and deleted doing so can be time and labor intensive.

In various embodiments a computing device is configured to arrange a plurality of location entities into a hierarchy of location descriptors. The computing device may further process determine whether one of the location entities is a spatial outlier based at least in part on presence of one or more other location entities within a predetermined distance of the one location entity. Also the other location entities and the one location entity may share a location descriptor.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Unless the context indicates otherwise a POI entity as used herein refers to a location entity having a GPS coordinate field the GPS coordinates having been captured by a GPS enabled device. Also unless the context indicates otherwise a YP entity as used herein refers to a location entity for which at least an address field has been manually entered or copied from a manually entered address and GPS coordinates have been geo coded based on the address. A POI entity may also have a manually entered address but a YP entity is often created by a business thus providing an incentive for a more accurate recording of the address.

In both identifiers and refer to location entities named Starbucks. Identifier refers to a location entity named Wal mart. Visual inspection of the map seems to confirm the accuracy of identifiers and and call into question the accuracy of identifier which appears to point to an empty field despite being associated with the name Starbucks. Accordingly Starbucks may be a spatial outlier. A spatial outlier as used herein is a location entity having measurably erroneous location information.

To determine whether identifier is a spatial outlier a computing device programmed as shown in and described below may perform a location dataset analysis on a plurality of location entities including the location entity corresponding to identifier . The computing device may arrange the location entities into a hierarchy of location descriptors and determine whether the location entity for identifier is a spatial outlier based at least in part on presence of one or more other location entities within a predetermined distance of the location entity for identifier . The other location entities and the location entity for identifier may share a location description. If the location entity for identifier is determined to be a spatial outlier that location entity may be deleted and identifier may not be rendered to a user as part of the map or aerial photograph.

In various embodiments dataset may be any sort of file storing a plurality of location entities. For example dataset may be a database file a text file or an XML file. In some embodiments dataset may be stored on a database server not shown that is separate and distinct from the computing device or on some other server or computing device. In other embodiments dataset may be stored on computing device . Additionally dataset may comprise POI and YP location entities. An exemplary location entity may include fields for a location name an address a GPS position a phone number a category and or a type e.g. POI or YP . A dataset having two location entities is illustrated in Table 1 

In various embodiments framework may be a hierarchical tree structure of location descriptors. For example framework may have a location descriptor for a city as the root node location descriptors for districts as the nodes for the next level location descriptors for streets as the nodes for the third level and location descriptors for buildings in the fourth level. In some embodiments levels of the framework may include multiple descriptor types i.e. the second level may contain district nodes and a landmark node . illustrate exemplary frameworks after the insertion of nodes for location entities. For example picture A in illustrates a framework with a root node labeled Beijing a second level node labeled Haidian District and third level nodes labeled Zhichun Road and Zhongguan chun .

In various embodiments computing device may create the framework based on layout information for a city. For example some cities may publish a file having layout information and computing device may build the hierarchical tree of framework based on the layout information. In such embodiments the framework may be stored on computing device . In other embodiments framework may be generated by another computing device and or stored on another computing device such as a storage server.

As further illustrated in computing device may also utilize one or more dictionaries . In some embodiments dictionaries may include a breaker words dictionary and a category words dictionary. Either dictionary may be of any file format known in the art such as a database file a text file or an XML file. The breaker words dictionary may include words or phrases indicating a break between location descriptors comprising an address. For example in the address Chow restaurant 200 meters from the Sigma building Yi Ping Road Beijing 200 meters from may be a breaker word indicating a break between the location descriptors Chow Restaurant and Sigma Building . Other exemplary breaker words may include turn left on the north side of etc. In some embodiments one or more users of one or more computing devices may manually generate the breaker words dictionary . The breaker words dictionary may be stored on computing device or on some other computing device such as a storage server.

In various embodiments category words dictionary may include words or phrases derived from name or category fields of location entities. For example category words may include such words or phases as restaurant company or shopping mall. In some embodiments category words dictionary may be manually generated automatically generated based on names or categories of location entities or both. If manually generated one or more users of one or more computing devices may create or contribute to the document including the category words. If automatically generated computing device or some other computing device may process the location entities to extract category words. In some embodiments the computing device or other device may extract a plurality of n grams from the name and or category fields of the location entities and evaluate those n grams utilizing n gram algorithms known in the art selecting n grams as category words that occur with a pre defined frequency within dataset .

As shown in computing device may be any sort of computing device or devices known in the art such as personal computers PCs laptops servers phones personal digital assistants PDAs set top boxes and data centers. In some embodiments the computing device may be a particular machine configured to perform some or all of the location dataset analysis operations described above and below. As shown computing device may be programmed with location dataset analysis logic and may thus be capable of detecting and deleting spatial outlier location entities from dataset and providing the modified dataset to a location search server . Computing device may further be configured to receive retrieve or generate any or all of dataset framework and or dictionaries either as they are generated at pre determined times or in response to a user command or request. and its corresponding description below illustrate an exemplary computing device in greater detail.

Also in some embodiments computing device location search server clients and or device s storing any or all of dataset framework or dictionaries may be connected by at least one networking fabric not shown . For example the device and server may be connected by a local access network LAN a public or private wide area network WAN and or by the Internet. In some embodiments the devices may implement between themselves a virtual private network VPN to secure the communications. Also the devices may utilize any communications protocol known in the art such as the Transmission Control Protocol Internet Protocol TCP IP set of protocols. In other embodiments rather than being coupled by a networking fabric the devices may be locally or physically coupled.

As is further illustrated in computing device may include and be programmed with location dataset analysis logic hereinafter logic . Logic may be any set of executable instructions capable of performing the operations described below with regard to modules . Logic may reside completely on computing device or may reside at least in part on one or more other computing devices and may be delivered to computing device via the above described networking fabric. While logic is shown as comprising concept segmentation module hierarchy module and spatial outlier determination module logic may instead comprise more or fewer modules collectively capable of performing the operations described below with regard to modules . Thus modules are shown and described simply for the sake of illustration and all operations performed by any of the modules are ultimately operations of logic that may be performed by any sort of module of logic .

In various embodiments segmentation module may segment an address field of a location entity into a plurality of location descriptors. For example if the address of a location entity is 4F Sigma Building No. 49 Zhichun Road Haidian District Beijing then segmentation module may segment the address into four phrases descriptors Beijing Haidian District Zhichun Road and Sigma Building. In some embodiments segmentation module may operate to determine the segmentation by finding word delimiters such as commas or other grammatical symbols. Each delimiter or symbol may be regarded as separating two location descriptors. For an address with N delimiters or symbols there may be N 1 location descriptors phrases. In some embodiments in addition to extracting phrases descriptors segmentation module may filter out information such as street or suite numbers. Thus for example segmentation module may filter 4F from 4F Sigma Building leaving Sigma Building as the location descriptor. Also in some embodiments segmentation module may filter out words that match entries in the breaker words or category words dictionaries from the location descriptors.

In other embodiments segmentation module may instead segment addresses of location entities based at least in part on framework and dictionaries . For example in other languages such as Chinese delimiters or symbols do not separate the terms of an address. Thus some other mechanism of separating the terms into location descriptors is required. In various embodiments segmentation module may separate an address into words descriptors by comparing the address to the contents of the framework and dictionaries . For example framework may contain a root node associated with the location descriptor Beijing. The address of the location entity under evaluation by segmentation module may also include the word Beijing. Upon finding a match the segmentation module may consider the word Beijing a location descriptor for the location entity. Also if segmentation module finds a match between a portion of the address and the breaker words dictionary e.g. turn left it may consider the words on either side of the breaker word to be candidate words descriptors. Further the segmentation module may compare the address of a location entity to words contained in the category words dictionary . If a match is found such as building the segmentation module may consider the matching word to be a delimiter as category words are often the last word or words in any portion of an address.

In some embodiments the segmentation module may then filter out words that match entries in the breaker words or category words dictionaries from the determined location descriptors as well as street numbers etc. After filtering for any portion of the address that has not yet been matched and is over a certain threshold length e.g. 5 Chinese characters the segmentation module may attempt to split that portion. Other unmatched portions that are smaller than the threshold length may be considered location descriptors. To split an address portion with a length exceeding the threshold length the segmentation module may again compare the portion to the framework to determine of any sub portion matches the framework . If a match is found the segmentation module may consider the sub portion a location descriptor and may again filter and split the remaining portion if necessary. If a match is not found then the segmentation module may consider the portion of the address a location descriptor.

In various embodiments hierarchy module may arrange the location entities into a hierarchy of location descriptors such as framework as mentioned above. To arrange the descriptors derived from the address by the segmentation module into the framework hierarchy module may start with the broadest descriptor such as a city name and determine if it is present in the framework. The broadest descriptor may be the last descriptor that appears in an address if the address is in English or the first descriptor in an address if the address is in Chinese. If not descriptors are found in the framework i.e. the framework is empty then the broadest descriptor may be added as a root node. The hierarchy module may then repeat the determining of whether each descriptor is present in the framework until the narrowest descriptor is reached. For each descriptor not found in the framework hierarchy module may add it as a child node of a parent node that corresponds to the next broadest descriptor in the same address. For example if an address include the fragment Zhichun Road Haidian District and Haidian District is present in the framework and Zhichun Road is not then hierarchy module may add Zhichun Road as a child node of Haidian District. If the narrowest descriptor is already present in the framework then the hierarchy module may associate the node for the narrowest descriptor with the location entity containing that descriptor in some embodiments by a pointer or index to the location entity. In various embodiments the narrowest descriptor may often correspond to a leaf node of framework .

In various embodiments illustrates several exemplary insertions of location descriptors into frameworks . In picture A a location entity having the descriptors Sigma Building Zhichun Road Haidian District Beijing is inserted into the framework . Hierarchy module may compare the descriptors of the address of the location entity to the framework and determine that only the narrowest descriptor Sigma Building is not present in the framework . Hierarchy module may then add a Sigma Building node as a child node of the node for the next broadest descriptor Zhichun Road and associate the location entity being inserted with the Sigma Building node .

Further illustrated in in picture B sometimes a location entity may contain two descriptors at the same level in the framework . For example Zhichun Road and Zhongguan chun appear as nodes at the same level of the framework . They are peers rather than parent and child. An address of a location entity however because of an error or other reason may include them in sequence suggesting a parent child relationship. When hierarchy module encounters this situation it may add an edge between the peer nodes the edge pointing from the node in the broader position in the address to the node in the narrower position.

Again referring to in Picture C sometimes the same narrowest descriptor for a plurality of different location entities may be inserted at a plurality of different locations in the framework . For example three different location entities sharing the same narrowest location descriptor Tsinghua University may each have an address field comprised of different sets of descriptors. A first may have Tsinghua University Beijing. A second may have Tsinghua University Chengfu Road Haidian District Beijing. A third may have Tsinghua University Zhongguan chun Haidian District Beijing. In evaluating these sets of descriptors hierarchy module may insert a node for the narrowest descriptor multiple times in multiple places because of the different parent child relationships implied by the descriptors.

In various embodiments after inserting descriptors for the location entities the hierarchy module may merge nodes descriptors which refer to the same instance. For example referring to picture C the three Tsinghua University nodes may actually all refer to the same physical Tsinghua University. Before merging descriptors however hierarchy module must determine whether the descriptors refer to the same instance. If there are ten descriptors for Starbucks they may well refer to several different physical Starbucks locations. To determine whether multiple location descriptors refer to the same instance hierarchy module may determine the frequency with which the location descriptor occurs as a child node of a common parent node. If the frequency exceeds a pre defined threshold the hierarchy module may determine that the descriptors refer to the same instance. For example in the descriptor Tsinghua University is shown as occurring as a child node of the Beijing node twenty five times. If the threshold is for example twenty occurrences then hierarchy module will consider all descendent nodes of Beijing referring to Tsinghua University to refer to the same instance.

In some embodiments hierarchy module may then determine the number of location entities associated with each node having the descriptor to be merged. For example eight location entities may be associated with the node Tsinghua University that is a child of Chengfu Road . In other words eight location entities may share this same set of location descriptors. Hierarchy module may then select the node with the lowest level in framework whose number of associated location entities exceeds a pre determined threshold. Continuing with the example above there may be a lower level node for Tsinghua University e.g. Tsinghua University Fudan Campus Chengfu Road but that lower level node may only be associated with for example three location entities. If the threshold is seven then hierarchy module may select the node associated with the eight location entities. Hierarchy module may then retain the selected node and delete the other nodes sharing the location descriptor effectively combining the nodes. In combining the nodes hierarchy module may add edges from the parent nodes of the nodes being deleted to the node being retained and may associate the location entities of the nodes being deleted to the node being retained. For example illustrates the lowest level node being retained and other nodes being deleted. Also edges are shown being added from each of the parent nodes of deleted nodes to the retained node .

As is further illustrated in the spatial outlier determination module hereinafter outlier module may determine whether a given entity is a spatial outlier based at least in part on presence of one or more other location entities within a predetermined distance of the one location entity the other location entities and the one location entity sharing a location descriptor. To determine whether a location entity is a spatial outlier outlier module may apply at least one of a D P algorithm or a POI based algorithm.

In various embodiments if performing the D P algorithm the outlier module may first determine a reference set for a location entity. The reference set may include other location entities associated with the same node of framework the same parent node and or a same ancestor node. Based on the set selected outlier module may further determine or select a distance d and a number p of other location entities expected to be within that distance. In one embodiment the outlier module may calculate the distance d by determining a box which includes the geographic area of the common node for the set. If the common node is the same node the box may be small and if the common node is an ancestor node the box may be large. The outlier module may then multiply a diagonal of the box by a predetermined percentage e.g. 10 and may assign the resulting value to the distance d. In some embodiments outlier module may calculate p by determining the total number of location entities in the reference set and multiplying that total number by a predetermined fraction e.g. . Once d and p have been selected or calculated the outlier module may determine the number of location entities from the reference set that are within the distance d of the location entity being evaluated. In performing this determining the outlier module may utilize the GPS coordinates of each location entity. If that number does not meet or exceeds p the outlier module may deem the location entity a spatial outlier.

In various embodiments the outlier module may only perform the POI based method if the entity being checked is a YP entity. If performing the POI based algorithm the outlier module may first determine a reference set for the YP entity the reference set including only POI entities. The reference set may include POI location entities associated with the same node of framework the same parent node and or a same ancestor node as the YP entity being checked. Based on the set selected outlier module may further determine or select a distance d. In one embodiment outlier module may calculate the distance d by determining a box which includes the geographic area of the common node for the set. If the common node is the same node the box may be small and if the common node is an ancestor node the box may be large. The outlier module may then multiply a diagonal of the box by a predetermined percentage e.g. 10 and may assign the resulting value to the distance d. Once d is selected or calculated the outlier module may determine whether any POI entities of the reference set are within the distance d of the YP entity. In performing this determining the outlier module may utilize the GPS coordinates of each location entity. If no POI entities are within d of the YP entity then outlier module may deem the YP entity to be a spatial outlier.

In various embodiments after determining that a location entity is a spatial outlier the outlier module may delete the location entity from the dataset or create a new modified dataset which does not include the spatial outlier. The outlier module may then repeat the determination of whether an entity is a spatial outlier for some or all of the other entities of the dataset . In some embodiments outlier module may perform both the D P algorithm and the POI based algorithm for a location entity. In one embodiment the outlier module may then only delete the location entity if both algorithms deem it a spatial outlier. In another embodiment the outlier module may delete the location entity so long as it is deemed a spatial outlier by one of the algorithms.

As is further illustrated by a location search server may receive the modified dataset with the spatial outliers deleted from the computing device . Location search server may be any sort of computing device or devices known in the art such as personal computers PCs laptops servers phones personal digital assistants PDAs set top boxes and data centers. In one embodiment location search server and computing device may be the same physical computing device. Location search server may be configured to provide location search services such as Windows Local Live Search to a plurality of client over a networking fabric such as the networking fabric described above. The location search services may include providing the clients with maps or photographs annotated with identifiers corresponding to location entities of the modified dataset in some embodiments.

In various embodiments the computing device may then arrange the plurality of location entities into a hierarchy of location descriptors block . The arranging shown in block is illustrated in greater detail in and is described further herein.

As further illustrated in the computing device may then determine whether one of the location entities is a spatial outlier based at least in part on presence of one or more other location entities within a predetermined distance of the one location entity block . In some embodiments the other location entities and the one location entity may share a location descriptor. In various embodiments the determining block may also comprise determining whether the number of other location entities within the predetermined distance of the one location entity exceeds a threshold and in response determining that the one location entity is a spatial outlier. Further in some embodiments when the one location entity is a yellow page entity and the other location entities are point of interest entities the determining block may comprise determining whether at least one of the point of interest entities is present within a predetermined distance of the yellow page entity and in response determining that the yellow page entity is a spatial outlier.

In various embodiments in response to determining that the one location entity is a spatial outlier the computing device may delete the one location entity block .

In a very basic configuration computing device may include at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory may include an operating system one or more program modules and may include program data . The operating system may include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash. The device may be of a configuration demarcated by a dashed line .

Computing device may also have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well know in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. Communication connections are one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules etc.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

References are made in the detailed description to the accompanying drawings that are part of the disclosure and which illustrate embodiments. Other embodiments may be utilized and structural or logical changes may be made without departing from the scope of the disclosure. Therefore the detailed description and accompanying drawings are not to be taken in a limiting sense and the scope of embodiments is defined by the appended claims and equivalents.

Various operations may be described herein as multiple discrete operations in turn in a manner that may be helpful in understanding embodiments however the order of description should not be construed to imply that these operations are order dependent. Also embodiments may have fewer operations than described. A description of multiple discrete operations should not be construed to imply that all operations are necessary.

The description may use perspective based descriptions such as up down back front and top bottom. Such descriptions are merely used to facilitate the discussion and are not intended to restrict the scope of embodiments.

The terms coupled and connected along with their derivatives may be used herein. These terms are not intended as synonyms for each other. Rather in particular embodiments connected may be used to indicate that two or more elements are in direct physical or electrical contact with each other. Coupled may mean that two or more elements are in direct physical or electrical contact. However coupled may also mean that two or more elements are not in direct contact with each other but yet still cooperate or interact with each other.

The description may use the phrases in an embodiment or in embodiments which may each refer to one or more of the same or different embodiments. Furthermore the terms comprising including having and the like as used with respect to embodiments are synonymous.

For the purposes of the description a phrase in the form A B means A or B. For the purposes of the description a phrase in the form A and or B means A B or A and B . For the purposes of the description a phrase in the form at least one of A B and C means A B C A and B A and C B and C or A B and C . For the purposes of the description a phrase in the form A B means B or AB that is A is an optional element.

