---

title: Constructing linear representation of a content based network
abstract: Described herein are systems and methods for constructing linear representations of content based networks. The methods comprise receiving a sub-network of a content based network comprising a plurality of fragments connected by one or more links, calculating fragment weight for at least some of the plurality of fragments, calculating link weight for at least one of the one or more links, creating a hierarchical structure from the sub-network, based on at least some of the calculated fragment weights and at least some of the calculated link weights, and converting the hierarchical structure to a linear representation. The linear representation may be augmented by additional overview information such as table of contents and index, which may be automatically generated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08261185&OS=08261185&RS=08261185
owner: SAP AG
number: 08261185
owner_city: Walldorf
owner_country: DE
publication_date: 20090601
---
The field of the invention relates generally to software and more particularly but not exclusively to linearization of content based networks.

Content based networks are one of the most popular information representations available on the web today. Based on a number of linked information fragments the content based networks benefit from the simple concept of browsing by giving their users the opportunity to move forward into different directions according to their current needs. Unlike the classic document with a linear arrangement of content the content based networks are more adapted to the associative way of human thinking. A typical example of a content based network is the information representation of the Wikipedia web site.

Although extremely useful for quick access to specific information the content based networks are not suitable for thorough reading. For instance majority of publications presentations and printed documents require linear text representation in order to consolidate and present the information. Thus linearizing techniques are needed to present the information contained in fragments that make up content based networks as a document with a linear text representation which may be more suitable for conventional reading.

Described herein are systems and methods for constructing linear representations of content based networks. According to one aspect the methods comprise receiving a sub network of a content based network comprising a plurality of fragments connected by one or more links calculating fragment weight for at least some of the plurality of fragments calculating link weight for at least one of the one or more links creating a hierarchical structure from the sub network based on at least some of the calculated fragment weights and at least some of the calculated link weights and converting the hierarchical structure to a linear representation. In yet another aspect the linear representation may be augmented by additional overview information such as table of contents and index which may be automatically generated.

Embodiments of systems and methods for linearization of content based networks are described herein. In the following description numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that the invention can be practiced without one or more of the specific details or with other suitable methods components materials etc. In other instances well known structures materials or operations are not shown or described in detail to avoid obscuring aspects of the invention.

Reference throughout this specification to one embodiment or this embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus the appearances of the phrases in one embodiment or in this embodiment in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

In one embodiment fragments may have the several properties affecting the linearization process including access rights to control the access of different user groups and version to monitor the fragment s version. The links and fragments may be augmented with metadata describing specific features that may be used for construction of different linear representations. For example a user may want to construct a linear representation containing only fragments published by him. So the publisher of a fragment may be part of the metadata associated with the fragment and this metadata may be used as criteria for determining the linearization of fragment. The metadata may also include tags describing the purpose of the fragment or the link for example documentation fragment or link to documentation . These tags may be used to construct a linear representation containing only fragments having specific tags for example documentation fragment .

At block a portion of the content based network is selected for linearization. In one embodiment such sub networks may be selected according to the purpose of the linearization. Examples of selection strategies are described below with reference to B and C. At block the process calculates fragment weights and link weights for fragments and links of the sub network. The fragment weights are related to the fragment s importance and may be used to determine an order by which the fragments will be assembled to generate the linearized form of the content based network. The link weights are closely related to the fragment weights. They are used to create a hierarchical structure of the sub network having only one path of links between each two fragments as described below with reference to block . All fragments of the selected sub network are included in the hierarchical structure and it does not contain cycling links because it is later used to order the fragments in a linear representation.

There are various approaches for determining the importance of a fragment. For example the importance may be related to the amount of information measured for each fragment. In another embodiment statistical information about the number of visits to each fragment may be used. The higher number of visits to a fragment can be interpreted as an evidence of its higher importance resulting in assigning a higher weight. In yet another embodiment the importance is determined by the number of links to the fragment. The higher number of links results in higher weight. In yet another embodiment the users may rate the importance of each fragment by entering values in a designated rating area. Higher values result in higher fragment weight. Customizing fragment weight according user specified keywords is also possible. The higher number of occurrences of the user specified keyword in the fragment could result in higher fragment weight. Link weight is closely related to the weights of the fragments that are connected by the link. In one embodiment the link weight is the arithmetic average of the weights of the fragments connected by the link.

At block a hierarchical structure is created from the fragments and the links of the sub network selected at block . The hierarchical structure is based on the weights calculated at block . There is a possibility to have cycling links between some fragments in the sub network. Cycles typically refer to a circular collection of links that start out and end at the same fragment. These cycles should preferably be resolved in order to construct a linear representation. In one embodiment the cycles are resolved by removing links starting with the lowest weighted links while ensuring that their removal does not leave any fragments isolated from the rest of the sub network. The process can be repeated with removal of links with higher weights. This process continues until there are no more cycling links or until no more links having the same weight can be removed without leaving fragments isolated from the sub network. When it is not possible to remove more links having the same weight each fragment from each remaining cycle is analyzed for the possibility of removing all links with the lowest weight from this fragment. If such removal is possible without leaving fragments isolated from the rest of the sub network all links with lowest weight are removed from this fragment. If after this step there are more cycling links left they are removed by a procedure confirming the availability of links between each of the fragments on a first come first served basis. This procedure checks if there is already an existing path between each pair of fragments and removes any additional links between the two fragments.

At block a linear representation is constructed based on the hierarchical structure created at block . In one embodiment the order of the fragments in the linear representation is determined by the fragment or link weights e.g. fragments with higher weights will appear first in the linear representation . In the linear representation the links may be replaced by plain text or footnotes depending on the metadata associated with the links and the scope of the linearization. If the user does not have access rights to view a certain fragment the fragment is not included in the linear representation. However if there is a link from the disallowed fragment to other fragment which the user is allowed to view only the contents of the disallowed fragment are removed. In one embodiment the removed contents are replaced in the linear representation by a footnote with a remark to the linked fragment. The fragments can be included in the linear representation either dynamically or statically. The dynamically included fragments remain linked to the original fragments of the content based network. Any change of these fragments in the linear representation will affect the content based network and vice versa. The statically included fragments are copies of the original fragments of the content based network and changes to them will not affect the originals. The linear representation is enriched with automatically generated page numbers table of contents and index entries linked to the page numbers and glossary fragments.

The glossary fragments can be based on the glossary entries available for each fragment included in the linear representation fragment. According to one embodiment the glossary entries are generated depending on the fact that the user has access rights for the fragment from which the entry is generated. In one embodiment it is possible to allow weaker access rights allowing the fragment to be replaced by the glossary entry if the fragment is not accessible.

Some example embodiments of the invention may include the above illustrated modules and methods being written as one or more software components. These components and the functionality associated with each may be used by client server or peer computer systems. These components may be written in any computer programming languages including object oriented computer languages such as C and Java. The functionality described herein may be distributed among different components and may be linked to each other via application programming interfaces and compiled into one complete server and or client application. Furthermore these components may be linked together via distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level e.g. a graphical user interface . These first and second computer systems can be configured in a server client peer to peer or other configurations.

Software components described above are tangibly stored on a machine readable medium including a computer readable medium. The term computer readable medium should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term computer readable medium should also be taken to include medium that is capable of tangibly storing or encoding instructions for execution by a computer system and that causes the computer system to perform any of the methods described herein.

The above description of illustrated embodiments of the invention including what is described in the Abstract is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of and examples for the invention are described herein for illustrative purposes various equivalent modifications are possible within the scope of the invention as those skilled in the relevant art will recognize.

These modifications can be made to the invention in light of the above detailed description. The terms used in the following claims should not be construed to limit the invention to the specific embodiments disclosed in the specification and the claims. Rather the scope of the invention is to be determined entirely by the following claims which are to be construed in accordance with established doctrines of claim interpretation.

