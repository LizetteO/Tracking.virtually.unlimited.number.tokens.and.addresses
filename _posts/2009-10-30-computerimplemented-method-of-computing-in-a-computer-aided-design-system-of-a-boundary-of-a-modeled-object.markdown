---

title: Computer-implemented method of computing, in a computer aided design system, of a boundary of a modeled object
abstract: The present invention relates to a computer-implemented method of computing. In one embodiment, computing a boundary of a modelled object in a computer aided design system, the method may include accessing data defining a modeled object as a simplicial m-complex. The method may further include projecting the simplicial m -complex in , m≧n. The method also may include computing a polyhedral boundary of the modeled object as a polyhedral n−1-cycle in the projection of the simplicial complex. The polyhedral n−1-cycle may substantially border the projection of the simplicial complex. The present invention is further directed to a computer program product and a computerized system for performing the method of the invention.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08280698&OS=08280698&RS=08280698
owner: Dassauit Systèmes
number: 08280698
owner_city: Velizy Villacoublay
owner_country: FR
publication_date: 20091030
---
This application claims priority under 35 U.S.C. 119 or 365 to European Application No. 08291047.2 filed Nov. 7 2008.

The invention relates to the field of computers programs and systems and more specifically to the field of computer aided design CAD manufacturing CAM and engineering CAE systems.

A number of systems and programs are offered on the market for the design of parts assemblies of parts and products thereof such as the one provided by Dassault Syst mes under the trademark CATIA Computer Aided Three Dimensional Interactive Application . CATIA is a multi platform CAD CAM CAE software suite commonly referred to as a 3D Product Lifecycle Management PLM software suite. It supports multiple stages of product development CAx ranging from conceptualization through design CAD and manufacturing CAM until analysis CAE . This software suite is customizable via application programming interfaces API . Some versions can be adapted in various programming languages under dedicated APIs.

These so called CAD systems notably allow a user to construct and manipulate complex three dimensional 3D models of objects or assemblies of objects. CAD systems thus provide a representation of modeled objects using edges or lines in certain cases with faces. These CAD systems manage parts or assemblies of parts as modeled objects which are mainly specifications of geometry. In particular CAD files contain specifications from which geometry is generated. From geometry a representation is generated. Specifications geometry and representation may be stored in a single CAD file or multiple ones. CAD systems include graphic tools for representing the modeled objects to the designers these tools are dedicated to the display of complex objects the typical size of a file representing an object in a CAD system extending up to the range of a Mega byte for part and an assembly may comprise thousands of parts. A CAD system manages models of objects which are stored in electronic files.

Designing a mechanical part with a known CAD system can be seen as defining the geometrical shape and dimensions of said part so as to fit functional and manufacturing requirements. Mainly the resulting shape is a combination of basic features such as pad pocket groove shaft etc. created by the designer. Through complex geometrical and topological computations the CAD system yields the boundary representation of the solid mechanical part as e.g. a closed and oriented surface.

One knows the concept of swept volumes e.g. in the fields of geometric design machining simulation robotics or digital mockup. Given a solid called profile in the following and a trajectory thereof we call the swept volume the union of all positions of the profile along the said trajectory. The representation of swept volumes can be used to design shapes simulate the process of material removal or addition detect collisions and compute clearance in moving parts and mechanisms. For instance the calculation of a swept volume is useful to determine the required space of a vehicle motor that is vibrating during its functioning. Also the calculation of a swept volume is useful to determine the required space of a wheel of a vehicle while said wheel turns left and right and moves up and down thanks to shock absorbers. Also the swept volume is useful to determine the required space of a manufacturing tool.

In this respect one may rely on Minkowski sums or additions. An efficient computation of Minkowski sums may be used to compute large offsets and machining trajectories or repair polyhedral models.

Owing to the importance of swept volumes in geometric modeling many solutions have been developed to represent the said swept volumes both in academic works and commercial applications.

A naive approach hereafter referred to as method M1 consists in considering the union of a finite number of instances of the profile volume along its trajectory.

A more elaborate method hereafter M2 which has a number of variants consists in decomposing a given solid or profile in convex parts then producing the convex bodies resulting of the sweeping of each convex part by each segment of a piecewise linear trajectory then take the union of all theses convex bodies see e.g. Accurate Minkowski sum approximation of polyhedral models Gokul Varadhan Dinesh Manocha Graphical Models 68 2006 343 355 Video mode of MachineWorks uses this approach .

Another class of methods M3 consists in computing a superset of the boundary of the swept volume by considering all the pairs profile triangle trajectory point or profile edge trajectory edge that could according to local geometry only appear in the swept volume boundary. These methods produce a non structured set of triangles a triangle soup whose union is in theory a subset of the swept volume and a superset of the swept volume boundary see e.g. U.S. Pat. No. 6 993 461 in the name of Applicants .

A mathematically well founded method M4 known as kinetic convolution has been developed for two dimensional 2D swept body computation see e.g. L. J. Guibas M. Overmars and J. Stolfi. A kinetic framework for computational geometry.

In proc. 24th Annu IEEE Sympos. Found. Comput. Sci pages 100 11 1983 . This method produces a 2D closed piecewise linear curve. This pioneer work as since given rise to several 2D implementations such as described in 

Ron Wein Exact and Efficient Construction of Planar Minkowski Sums using the Convolution Method ACS Technical Report No. ACS TR 241300 04 and

Victor Milenkovic Elisha Sacks An approximate arrangement algorithm for semi algebraic curves. Symposium on Computational Geometry 2006 237 246.

On the other hand other works extend the line of 2D work to 3D polyhedral solids. A main result is a procedure that given two solids whose boundary is a polyhedral 2 manifold computes a so called polyhedral tracing see e.g. 

J. Basch L. J. Guibas G. D. Ramkumar and L. Ramshaw Polyhedral tracings and their convolution. In Proc. 2nd Workshop on Algorithmic Foundations of Robotics 1996 and

G. D. Ramkumar Tracings and their convolution theory and applications PhD. thesis 1998 Stanford and related subsequent papers.

One knows two ways of implementing methods M1 M2 M3 and M4 in practice. For example methods M1 and M2 produce a set of solids whose union is the result. Similarly method M3 produces a set of triangles. Computing in practice an explicit representation of the union at issue is not mandatory. It is even problematic for 3D complex geometries because it is extremely sensitive to rounding errors.

Another class of methods relies on voxel or dexel volume representations M5 cf. the Photo mode in MachineWorks .

Next the so called wrapping methods M6 produce a watertight rough approximation of the swept solid. It is fast and robust but it is not accurate. The technology is for instance described in Swept volume approximation of a polygon soup J. C. Himmelstein E. Ferr J. P. Laumond International Conference on Robotics and Automation 10 14 Apr. 2007 Roma pp 4854 4860. It is implemented in Kineo path planner product of Kineo Computer Aided Motion company. This method amounts to compute an implicit representation of the swept volume by calculating the distance to the swept surface boundary on the vertices of a 3D regular grid. This distance field is computed from a sampling of the trajectory satisfying a given 3D tolerance on the resulting sweep. Then the outer skin is collected using a variant of a classical algorithm known as the marching cube .

Finally a number of patents or patent applications broadly deals with the subject see e.g. U.S. Pat. Nos. 7 091 995 7 031 790 6 690 385 5 649 084 6 307 555 6 989 830 6 988 121 EP A 0 280 968 EP A 0 405 106 EP A 0 280 968 U.S. Pat. No. 5 159 512 US 2003 014133 US 2005 143963 and US 2004 059450.

For example method M1 requires considering a large number of instances of the swept volume and is therefore very expensive in memory and computation time if one asks for a good accuracy.

Method M2 presents the same drawbacks as method M1 yet in a lesser extent. For each segment of the trajectory and each convex part of the profile it generates a body of roughly the same complexity i.e. number of triangles than the convex part.

Method M3 is efficient in a number of respects. For example the number of produced triangles is of the order of magnitude of the number of triangles effectively produced in the result when the trajectory does not wind too much. A major drawback of this method is that it is sensitive with respect to rounding errors an arbitrarily small perturbation in the vertices coordinates may create small gaps in the boundary of the result. Typically it is quite easy to produce the set of triangles. However it is in general not possible to extract a topologically valid watertight polyhedron due to robustness issues. Another limitation of M3 is that it is restricted to one dimensional trajectory which is not relevant to compute Minkowski sums.

An obvious drawback of the 2 dimensional version of method M4 is that it is restricted to 2D polygons. In addition the theoretical approach chosen here induces significant limitations. Firstly it is intrinsically limited to Minkowski sum. In particular path planning robotics or machining applications of these procedures are restricted to translational motions meaning that only 3 axis machining is possible . Secondly the operands of the Minkowski sum have to be solids whose boundaries are polyhedral 2 manifolds with all their vertices satisfying the so called hemisphere assumption for each vertex V the set of outward normal vectors to faces adjacent to V has to be included in a hemisphere. Now there are numerous examples of a manifold vertex violating the hemisphere assumption. Finally another drawback is that as far as known by the present inventors this 3D procedure has not been implemented basically.

Method M5 is efficient and robust but the size of data increases dramatically with the desired accuracy. It is then a good method for applications where the accuracy is not critical.

Method M6 produces a conservative approximation well suited to rough collision analysis but it is not accurate enough for machining simulations. Furthermore the theoretical drawback is that the cost in time and memory increases as O 1 where is the required accuracy while a theoretical increase rate of O 1 would be preferred. Indeed in practice method M6 is fast if the relative accuracy the ratio between the model size and the required accuracy is small. The examples mentioned in the paper make use of grids whose sizes range from 32to 128voxels which leads respectively to the values 64 to 256 for the relative accuracy. This accuracy may be enough for rough path planning or collision detection or as a first fast rejection step. However manufacturing applications need relative accuracies which typically range from 10to 10.

To summarize the above analysis the prior art shows too much sensitivity with respect to rounding errors is expensive either in memory or in computation cost and or is not accurate enough at least for some applications. Accordingly there remains a need for a robust topologically correct and watertight and accurate method of computing a swept volume more generally a boundary of a modeled object the method compatible with a large class of objects.

To this aim and in one embodiment the invention therefore provides a computer implemented method of computing in a computer aided design system of a boundary of a modeled object the method comprising accessing data defining a modeled object as a simplicial m complex projecting the simplicial m complex in m n computing a polyhedral boundary of said modeled object as a polyhedral n 1 cycle in the projection of the simplicial complex the polyhedral n 1 cycle substantially bordering the projection of the simplicial complex.

In other embodiments the method according to the invention may comprise one or more of the following features 

The invention further proposes a computer program product comprising program code means adapted for implementing the method according to the invention.

The invention still concerns a computerized system comprising means for implementing the method according to the invention.

The teachings of all patents published applications and references cited herein are incorporated by reference in their entirety.

The present invention provides a method of computing in a CAD system of a boundary of a modeled object typically a swept volume. The modeled object is defined as a simplicial m complex typically obtained from a polyhedral profile and a polyhedral trajectory. The complex is then projected in m n to this aim a suitable mapping or transformation can be invoked. Then the method computes a polyhedral boundary of the modeled object as a polyhedral n 1 cycle of the projection of the simplicial complex wherein the polyhedral n 1 cycle substantially borders the projection of the simplicial complex.

The invention is a general efficient and robust method suited to compute quickly and accurately a boundary of modeled object represented as a polyhedral cycle. For the sake of exemplification we shall hereafter consider application to a swept volume. A definition of polyhedral cycles is given below. In particular the output is not an unstructured set of triangles but roughly speaking a closed and topologically consistent polyhedral representation. Though this representation may intersect itself it is combinatorial watertight. In particular if a small perturbation or a floating point rounding is applied to the output it remains valid topologically correct and watertight hence the robustness of the implemented algorithm. The invention makes it possible to safely compute a boundary of a modeled object even though the computed boundary may sometimes intersect itself. The invention has several applications that shall be described below. In addition the robustness achieved thanks to the present scheme i.e. projecting the simplicial complex defining the object and subsequently computing a polyhedral boundary as n 1 cycle allows for saving substantial computation and memory load compared to known methods.

For instance compared to methods M1 and M5 discussed earlier the method of the invention can achieve accuracy without requiring huge memory and computation time. Compared to M2 the proposed method maintains a reasonable number of triangles. Compared to M3 the proposed method produces a combinatorial watertight output which is stable with respect to rounding errors. Furthermore it can in principle compute the sweep of a profile or arbitrary dimension along a trajectory of arbitrary dimension. In practice this allows to compute Minkowski sum as well as the volume swept by a mechanism with an arbitrary number of degrees of freedom. The method M4 is limited to 2D which prevent application to the computation of 3D swept volumes at variance with the present invention.

The overall process is now described in reference to describing a data flow according to an embodiment of the invention. depicts exemplary steps for obtaining a simplicial product. shows the steps leading from a simplicial complex to a zero boundary surface.

First as depicted in the method comprises step S of accessing data defining a modeled object as a simplicial m complex.

A simplicial complex is a topological space constructed by gluing together points line segments triangles and more generally their p dimensional equivalents. One of the advantages of using simplicial complexes is that their properties can be generalized for any dimension m. Simplicial complexes make it possible to compute a boundary of a modeled object thanks to simple mathematic operations what requires less resources than methods described in the prior art. Simplicial complexes are described in details below.

There are several ways of obtaining a simplicial m complex. For example a simplicial m complex also referred as simplicial complex can be obtained as a simplicial product as depicted in . gives an example for obtaining a simplicial complex in the way of a simplicial product. Steps S S show that a simplicial complex can be obtained from the product of a polyhedral profile times a polyhedral trajectory . The product may be a simplicial product of a polyhedral profile of a given object by a sequence of translations and or transformations as shall be illustrated notably in reference to and to .

The simplicial m complex is a simplicial complex of dimension m. The integer m is the maximal dimension of all the simplices of the complex. m may be arbitrary large. For instance if the dimension of the polyhedral profile is k with k 3 for instance the polyhedral profile is a 3D shape and the dimension of the polyhedral trajectory is l with l 2 for instance the polyhedral trajectory is a 2D shape such as a triangle then the dimension of the simplicial m complex is a simplicial complex of dimension m k l and in this example m 3 2 5. If the dimension of the polyhedral profile is k with k 0 for instance the polyhedral profile is a point and the dimension of the polyhedral trajectory is l with l 0 for instance the polyhedral trajectory is a point then the dimension of the simplicial m complex is a simplicial complex of dimension m k l and in this example m 0 0 0. Preferably m 2 if one wish to compute a 2D sweep and m 3 for a 3D sweep.

As depicted in the simplicial product of and is itself preferably computed through a two steps process a cartesian product at step S followed by a triangulation at step S. In dimensions greater than 2 step S may comprise a tetrahedrisation. Thus step S can be seen as a step of generalized triangulation.

The object blends the topologies of and into a higher dimensional structure that potentially includes both the topology and the geometry of the resulting swept surface. More generally and independently of the way the simplicial complex is obtained a simplicial complex is simply speaking a suitable starting point for the step S of .

The step S of calls a transformation or mapping function F in order to project or imbed the simplicial m complex in m n. The projection makes it possible to assign a location in an ambient space or physical space to each vertex of the simplicial m complex the ambient space being the space wherein the projection may be manipulated by the user of a CAD system. The integer n is the dimension of the ambient space or physical space in which the simplicial m complex of step S is projected. The condition m n prevents cases in which the transformation or mapping function F cannot occur. For instance according to the previous example the simplicial m complex of dimension m 5 is projected via the transformation or mapping function F into the ambient space with n 3 that is the simplicial 5 complex is projected into a three dimensional 3D space. Also as another example it is possible that n 2 in order to compute planar shadows.

Yet according to properties of simplicial complexes and the mapping function F n is not restricted to a given range of values and the minimum value of n is 1.

The simplicial m complex of step is somehow in transitional space inasmuch as the mapping function F leads back the simplicial m complex from an m dimension space to an n dimension space. For better understanding the simplicial m complex of the n dimension space is called the projection of the simplicial m complex .

In an embodiment a goal is to get the surface i.e. the swept surface of profile along a trajectory . There are several possibilities to project a simplicial m complex in just as there are usually several manners of projecting an object onto another. Yet a preferred embodiment that shall be discussed at length in the following provides the swept surface through a simple and robust practical scheme here called multiplicity procedure which is performed on a projection of the simplicial complex .

On a global point of view the steps of provides a swept surface that is a zero boundary surface E from an input simplicial complex and a mapping F for instance a 3D mapping F .

Despite the invention is likely to be applied to sweeping a triangulated closed surface along a trajectory appended figures exemplify the overall process in 2 dimension space through a one dimensional plane profile swept along a plane trajectory the plane profile and the plane trajectory being in the same plane. Such an exemplification is obviously easier to understand and to illustrate.

For instance shows a profile with closed contours together with a trajectory represented by a polygonal line .

The multiplicity procedure computation aims at providing a boundary of the modeled object. To reach that goal the multiplicity procedure uses an algorithm to compute a polyhedral n 1 cycle in the projection of the simplicial complex which as a result substantially borders the projection of the simplicial complex. The integer n of the polyhedral n 1 cycle represents the dimension of the ambient space or physical space in which the simplicial m complex provided at step S is projected. Preferably the polyhedral n 1 cycle comprises simplices of the projection of the simplicial complex.

A polyhedral n 1 cycle is a particular polyhedral n 1 chain which respects a condition called zero boundary condition. A polyhedral n 1 chain is a set of oriented n 1 simplices with a signed integer called multiplicity assigned to each n 1 simplex. Despite a polyhedral n 1 chain can be watertight the watertight property is not mandatory. On the contrary the polyhedral n 1 cycle meets the zero boundary condition which confers the watertight property to polyhedral n 1 cycle. The zero boundary condition is explained below in the description.

During the multiplicity procedure an orientation is provided to simplices of the projection of the simplicial complex also referred as simplices for short . Incidentally the orientation can also be provided to simplices of the simplicial complex that is prior to project the simplicial complex. The choice of the orientation provided to simplices of the projection of the simplicial complex or simplices is arbitrary and does not influence the final result. Indeed if an opposite orientation is provided to a simplex of the projection of the simplicial complex or simplex the multiplicity procedure computation will lead to a multiplicity with an opposite sign. depicts a choice of orientation shown by the various arrows.

Then the multiplicity of simplices of the projection of the simplicial complex is calculated. For instance the multiplicity of an edge of the projection of the simplicial complex which is a 1 simplex is the number of multiple edges of the projection of the simplicial complex sharing the same endvertices of the projection of the simplicial complex. illustrate the notion of edge multiplicity and show an example of how defining the multiplicity of a triangle.

Back to the edge has a multiplicity of 2 as it is shared by two triangles. The edges and have respectively a multiplicity of 1 and 1. Both edges are shared by one 1 triangle. However as edges and have an opposite orientation their multiplicity is opposed.

Then the zero boundary condition is determined. In order to define the zero boundary condition one consider the case where n 3. The resulting polyhedral 2 chain is defined by a set of logical vertices in 3D space and by a set of oriented triangles defined by ordered triples of vertices. Vertices are said logical vertices because two distinct logical vertices are allowed to share the same coordinates. Each oriented triangle is given a multiplicity such that changing the sign of the multiplicity is equivalent to reverse the triangle orientation. A polyhedral 2 chain is called a polyhedral 2 cycle if any edge that is any pair of logical vertices appearing in a triangle is traversed exactly the same number of times in the forward and reverse order by triangles counting multiplicities. This last condition is called the zero boundary condition.

The simplicial complex of step S is thus the union of the L face boundary times the trajectory plus the L face times the trajectory boundary which is represented by end points. This union is formally noted .

Once the simplicial m complex is obtained from for example the simplicial product the algorithm the multiplicity procedure of the main procedure of step S is run on the set of triangles. First the m simplicial complex is projected in m n . Then the multiplicities of the projection of the simplicial complex are computed as depicts by .

Then the swept contour the boundary is gelded according to the non zero multiplicity as shown on . Edges with a non zero multiplicity are kept and provide the boundary of the projection of the simplicial complex.

The invention is a computer implemented method of computing in a computer aided design system of a boundary of a modeled object. The method comprises the step of accessing data S defining a modeled object as a simplicial m complex. illustrate four cases of sweep defining a modeled object as a simplicial m complex. The four cases do not exhaust all possible sweeps.

Preferably at the step of accessing data the simplicial complex is a simplicial product S as illustrated in . This is a simple situation of sweep. The profile Pis a polyhedron and a trajectory Pis a piecewise linear curve in other words a broken line. represents the result of a sequence of translations of the profile Pover the trajectory P.

Advantageously and still at the step of accessing data the simplicial complex is a simplicial product S of a polyhedral profile of a given object by a sequence of translations and or transformations. This covers a large number of ways to obtain a simplicial complex. illustrate such a transformation which is a generalization of previous case. In this situation the sequence of translation is replaced by a sequence of transformations operating on the polyhedral profile P. The sequence of transformation is still called the trajectory P. In this case the result is a linear approximation of consecutive transformations.

In other words P Pcan be seen as the union of all the copies of Ptranslated along vectors in Por equivalently as the union of all the copies of Ptranslated along vectors in P. Polyhedron Pis the profile and polyhedron Pthe trajectory but in this particular case the profile and the trajectory play the same role and could be swapped.

The invention is a computer implemented method of computing in a computer aided design system of a boundary of a modeled object. In other words the invention is a computer implemented method of design in a computer aided design system of a boundary of a modeled object. The method comprises the steps of accessing data S providing a mapping function F at step S projecting the simplicial m complex in m n with the mapping function and computing a polyhedral boundary at steps S S of said modeled object.

Simplicial complexes polyhedral chains and polyhedral cycles are presented with more details in order to give a general formulation of the steps S S of computing a polyhedral boundary of said modeled object as a polyhedral n 1 cycle in the projection of the simplicial complex the polyhedral n 1 cycle substantially bordering the projection of the simplicial complex. Simplicial complexes generalize in any dimension the usual notion of triangulation. Simplicial complexes are topological space constructed by gluing together points line segments triangles and more generally their p dimensional equivalents.

For an integer k 0 a k simplex is the convex hull of k 1 points in a non degenerate position in an at least k dimensional ambient space. These k 1 points are called the vertices of the simplex. We denote by v v . . . v the k simplex with vertices v v . . . v.

A face of a k simplex is any j simplex with j k whose vertices constitute a subset of the vertices of . depicts a 3 simplex and depict all faces of the 3 simplex.

A simplex is said to be a coface of if is a face of as depicted in a simplicial complex and all co faces of edge .

In general both the profile and the trajectory are simplicial complexes. In cases of above the profile is a triangle which is a 2 dimensional simplicial complex. In cases of the trajectory is a 1 dimensional simplicial complex. In cases of the trajectory is a 2 dimensional simplicial complex.

Given two simplicial complexes and it is possible to build a new simplicial complex noted for instance the simplicial product of and as depicted in . This simplicial product is not unique as seen below. The set of vertices of is the Cartesian product of the set of vertices of with the set of vertices of . Therefore these new vertices belong to the Cartesian product of the respective ambient spaces of and . Now given a couple of simplices where is a simplex of and a simplex of the Cartesian product of by is a convex polytope but is not a simplex if or is not a 0 simplex.

For example if and are 1 simplices segments as depicted in their Cartesian product is a parallelogram in the product space and has to be decomposed into two triangles 2 simplices as depicted in . As shown in there are of course two ways of splitting a parallelogram into two triangles.

Similarly as shown in if is a 1 simplex segment and a 2 simplex triangle their Cartesian product is a prism with a triangular basis which must be decomposed into three tetrahedrons 3 simplices yielding the simplicial product. Again this decomposition is not unique. In general if is a k simplex and a j simplex their Cartesian product can be decomposed into k J simplices.

The choice of this decomposition does not change the final result in cases of translational sweeps and . Conversely in and it is possible to choose the decomposition that minimizes some chordal error or the one that maximizes the output solid for example for conservative collision detection .

The shows that the main procedure occurs once the simplicial m complex is projected in . The output of the algorithm of is computed polyhedral n 1 cycle at steps S S. For instance once the simplicial m complex is projected in a polyhedral 2 cycle is computed. Such a polyhedral 2 cycle is topologically watertight triangulation that may self intersect but still defines inner and outer regions of the space.

More precisely a polyhedral 2 chain is defined by a set of logical vertices in 3D space and by a set of oriented triangles defined by ordered triples of vertices. Vertices are called logical vertices because two distinct logical vertices are allowed to share the same coordinates. Each oriented triangle is given a multiplicity such that changing the sign of the multiplicity is equivalent to reverse the triangle orientation. A polyhedral 2 chain is called a polyhedral 2 cycle if any edge that is any pair of logical vertices appearing in a triangle is traversed exactly the same number of times in the forward and reverse order by triangles counting multiplicities. This last condition will be called the zero boundary condition. In other words a cycle is a chain satisfying the zero boundary condition.

By theorem the non zero multiplicity segments or edges define a cycle which is a zero boundary simplicial complex. The zero boundary condition involves multiplicities and orientations in a very subtle manner. In the zero boundary condition means that at each vertex the sum of the multiplicities of all incident edges is zero. Given a vertex v by definition an in edge ends at v and an out edge starts at v. The multiplicity of a vertex is defined by the sum of all in edges multiplicities minus the sum of all out edges multiplicities .

For instance the vertex is the sum of the in edges and multiplicities minus the out edge multiplicity. As a result the vertex has a multiplicity of 2 1 1 0. A similar operation is applied on each vertex as shown on .

Among the advantages provided by polyhedral cycles such cycles extend the notion of watertight manifold polyhedral solid boundary. Thus the in out regions of watertight polyhedrons are extended to the notion of index of a point with respect to a polyhedral cycle an integer number counting in some sense how many times a point is inside the current polyhedron .

In general the perturbation of the coordinates of a usual watertight manifold polyhedral solid boundary can make it invalid. This is particularly the case when self intersections occur. However as the validity of a polyhedral cycle is purely combinatorial it cannot be broken by coordinate perturbations. As a result polyhedral cycle is stable and this stability is a key ingredient of robustness.

For instance applying a rotation matrix using floating point arithmetic to the vertices of a valid polyhedron can make it invalid because rounding errors occur. On the contrary applying a rotation to the vertices of a polyhedral cycle is completely safe. Thus robustness is granted.

The simplicial complex St can be defined equivalently using the co face concept that has been illustrated in . Taking the co faces of provides a set of simplices. Then taking all the faces of all theses simplices yields the star of . Formally St Face CoFace . The co face of is a set of simplices but the star of is a simplicial complex which is a structured object.

The link of a simplex in a simplicial complex C is a simplicial complex denoted Lk C or Lk for short defined as the set of all simplicies in St that have an empty intersection with . In the link of vertex is a closed contour represented by a bold line. One can notice that the link of a boundary vertex can also be an open contour as shown in .

The simplicial complex in the previous is a 2 manifold according to the definition. All interior edges have a two points link and all boundary edges have a one point link as illustrated in .

Ball sphere and disk concepts are governed by the following logic illustrated in . Given an finite dimensional space the unit ball is the set of points X x . . . x such that X 1. The unit sphere is the boundary of the unit ball that is the set of points X such that X 1. The disk is the half part of the unit sphere that is the set of points X such that X 1 and x 0.

More generally a k dimensional disk is equivalent to a k dimensional ball. One can notice that a 0 dimensional sphere is made of two isolated points and a 0 dimensional disk is an isolated point while by convention spheres and disks of negative dimensions are considered empty.

Let v . . . v be a k simplex of a k manifold C. Simplex is oriented by the ordering of its vertices. The orientation of induces the orientation of its k 1 simplices faces as follows. For all j 0 . . . k the ordering v . . . v v . . . v that is omitting the jvertex defines the orientation induced on this k 1 simplex if j is even and the inverse of its orientation if j is odd. Reversing a simplex orientation means that one should swap for example the two first vertices.

For example orienting the tetrahedron in by 0 1 2 3 induces the following triangles orientations 1 2 3 0 2 3 2 0 3 0 1 3 and 0 1 2 1 0 2 . Conversely if the tetrahedron orientation is reversed that is 1 0 2 3 this induces reverse orientations of the triangles.

A combinatorial k manifold C is said to be orientable if it is possible to assign a consistent orientation to each k simplex in C by specifying an ordering of the vertices of . Consistency of orientation means the following. The definition of combinatorial k manifolds entails that any interior k 1 simplex of C is a face of exactly two k simplices noted and . The given orientation is said to be consistent if the orientations induced on by and are opposite. In other words it is consistent if the two induced orderings are related through an odd permutation i.e. of negative signature .

In the 3 manifold C is made of two tetrahedron and sharing triangle . Orienting 0 1 2 3 induces 1 2 3 as orientation. Orienting 2 1 3 4 induces 2 1 3 1 2 3 as orientation. Clearly complex C is not oriented. Nevertheless it is orientable by reversing either orientation or orientation.

Not all k manifolds are orientable. The 2 manifold of is a triangulation of the Moebius strip it is not orientable.

It is defined first the support of a polyhedral cycle to be the union of all its triangles. The connected components of the complement of the support of in 3 space are called 3D cells. Only one 3D cell is not bounded and is called the outer cell .

Given a polyhedral cycle recall that each triangle of is oriented by the ordering of its three vertices and this ordering defines a normal vector. Furthermore each triangle of has an integer multiplicity. Given a point X in 3 space which does not belong to any triangle from the winding number of X with respect to is an integer number W defined as follows. Consider an oriented half line starting at X and intersecting no edge from . Such a always exists. Call the unit vector defining the direction of pointing from X toward infinity. When intersects a triangle T from we say that crosses T forward if the dot product of with the normal nof T is positive and backward if it is negative. It cannot be zero as this would imply that intersects at least one edge from .

Initialize the integer W with the value W 0. Each time crosses a triangle T from with multiplicity increment W of if crosses T forward and decrement W of if crosses T backward. sign .

The resulting number W X is called the winding number of X with respect to . It does not depend on half line and it is constant in any 3D cell meaning that W X has the same value for all points X within the same 3D cell. In particular W X 0 for all points X within the outer cell.

Given the two simplicial complexes the profile and the trajectory the procedure may first builds their simplicial product as depicted in . Starting form a simplicial complex each vertex V v v of can be mapped naturally to a point F V in 3D space as depicted in . For example in cases of and this point is the sum F V v vwhile in cases of and this point is F V v v the image of vby the transformation v.

As an example if V V V is a 2 simplex triangle in the simplicial product we consider the possibly degenerated triangle F V F V F V oriented by the order of the triple. This oriented triangle defines a normal vector. 

Notice that N can be zero if F V F V and F V are collinear. Given a triangle V V V the multiplicity procedure computes a signed integer number called the multiplicity of .

Notice that the dim 3 exponent involved in the Mult variable computation is related to the dimension of the 3D ambient space. In a 2D ambient space the multiplicity of a segment is computed by a similar procedure using a dim 2 exponent. More generally for a dimension n ambient space the exponent is dim n.

In order to make the above procedure more intuitive and practical we examine now how it specializes in case of . In this case the simplicial complex is the profile P a triangulation of a L shaped polygon. It is a 2 dimensional simplicial complex. Simplicial complex is the trajectory P a broken line linearly interpolating the successive positions. It is a 1 dimensional simplicial complex. Cartesian products of triangles of with edges of are prisms while Cartesian products of edges of with edges of are parallelograms. The procedure triangulates these products each prism gives rise to three tetrahedrons while each parallelogram gives rise to two triangles thus yielding the simplicial product. depicts two simplicial complexes whereas depicts a triangulation of their Cartesian product tetrahedrons .

The triangulation procedure described below makes this triangulation consistent which means that the boundary triangles of the tetrahedrons produced by the decomposition of prisms have to coincide with the boundary triangles produced by the decomposition of parallelograms.

Once the simplicial product is computed for instance through the Cartesian product triangulation the procedures of S above can be applied. The multiplicity procedure takes a triangle of the simplicial product as input. In case there are three kinds of triangles in this product triangles of type coming from the product of a triangle of with a vertex of triangles of type coming from the decomposition into two triangles of a parallelogram product of an edge of with an edge of and triangle of type coming from the decomposition of a prism product of a triangle of with an edge of . In the first case each such triangle is a face of exactly one tetrahedron if the vertex is the first or last in the trajectory and of exactly two tetrahedrons for other vertices. In the second and third cases assuming that the triangulation of the profile is a manifold without boundary each triangle is the face of exactly two tetrahedrons.

Each triangle of the product has a 3D image given by the images of its vertices by F. In this particular case each vertex of the triangle is a couple v v where vis a vertex of the profile and vis a vertex of the trajectory and its image by F is just F v v v v.

If the image of the triangle in 3D space is not collinear it defines an oriented plane which is the plane supporting the image triangle and oriented by the triangle orientation. For this given triangle see the multiplicity procedure in S considers the one or two coface tetrahedrons of the triangle in product and determines the situation of the fourth vertex of each tetrahedron with respect to the oriented plane.

On when the fourth vertex of each tetrahedron is on the negative side the multiplicity procedure will return 2 since the factor 1 1. On when the fourth vertex of each tetrahedron is on the negative side the multiplicity procedure will return 2. On when the fourth vertex of one tetrahedron is on the positive side and the fourth vertex of the other tetrahedron is on the negative side the multiplicity procedure will return 0.

The main procedure scans all triangles of product and inserts the corresponding triangles with the corresponding multiplicity in the resulting chain .

In fact most triangles have zero multiplicity. In order to accelerate the main procedure it is possible to filter out most of the triangles in the simplicial product or more generally the simplicial complex using the outer normal information. Let us describe one possible way to optimize the procedure in the case of .

Notice that given a segment of the trajectory the set of perpendicular unit vectors to this segment is a great circle on the unit sphere see . The circles of two consecutive segments define a sector on the unit sphere see .

In the triangles product of a triangle tof the profile by a vertex vof the trajectory will be attributed a zero index by the multiplicity procedure if the normal to tdoes not point into the sector delimited by the great circles normal to the two trajectory segments adjacent to v. On reference indicates a zero multiplicity and reference indicates a normal vector that is outside the sector.

In and in the plane of triangle tis perpendicular to the plane of the figure this is why triangle tis drawn as a line segment and why its unit normal vector is included in the plane of the figure. Furthermore the trajectory dotted line is included in the plane of the figure.

Similarly as shown in a triangle part of the parallelogram product of an edge eof the profile by an edge eof the trajectory will be attributed a zero index by the multiplicity procedure if the arc of great circle joining the normal to the triangles of the profile adjacent to edge edoes not cut the great circle normal to edge e.

Using a localization structure quad tree for example on the unit sphere one can attach to each cell of the unit sphere the set of triangles whose outer unit normal points inside this cell. Then for respectively each segment and each vertex of the trajectory the remarks above allow recovering respectively the set of trajectory segments and the set of profile triangles the product of which will produce a non zero multiplicity triangle. This recovering is performed by scanning the localization data structure.

In many situations the output polyhedral cycle provides a representation of the swept volume. In order to make this more precise three general situations situations 1 2 3 are described for which one can actually make use of the output cycle. Note that the general procedure is symmetric in the two operands profile and trajectory and therefore in the situations below one can swap the operands Cand C.

In this case the output cycle contains the boundary of the swept volume or more generally the boundary of the modeled object and may be some extra surfaces in the interior of the swept volume. A graphic rendering of the cycle always provides a visually correct representation of the swept volume when computed from a view point that is outside the swept volume. Moreover the winding number of the cycle provides a membership predicate to the swept volume a point space which does not belong to any triangle from is in the interior of the swept volume if and only if its winding number with respect to is positive. The present method provides a good graphic rendering even if extra surfaces are present. There is no need in the present method to re calculate the boundary in order to delete the extra surfaces in the interior of the boundary. This reduces the amount of calcul and preserves the resources.

Situation 3 occurs when Cis a combinatorial k manifold and Ca combinatorial k manifold where kis odd and kis even. In situations 2 or 3 as in situation 1 the output cycle contains the boundary of the swept volume or more generally the boundary of the modeled object and may be some extra surfaces in the interior of the swept volume. A graphic rendering of the cycle always provides a visually correct representation of the swept volume when computed from a view point that is outside the swept volume. Moreover the cycle determines without ambiguity the outer skin of the swept volume. More precisely the boundary of outer 3D cell induced by the output cycle is the outer skin of the swept volume. The same remarks as formulated for situation 1 apply here.

An example of situation 1 is when the trajectory is a 1 dimensional piecewise linear curve in the set of invertible affine transformations for example with its vertices being isometries and parameterized by the time in this case it is indeed cycle free.

A more elaborated example is the following. In order to compute the Minkowski sum of the skin of two polyhedrons it is enough to consider the union of the Minkowski sum of the skin of the first polyhedron with the 1 skeleton that is the set of edges of the second and the sum of the skin of the second with the 1 skeleton of the first. In order to fit case 1 it is enough to span the 1 skeleton by a single path or a tree or a forest.

An example of situation 2 is the following. Assume operand Cis a . A polygon soup is an unstructured set of triangles and pieces of triangulations with possibly non manifold edges and vertices. It approximately spans the boundary of a solid meaning that it covers up this boundary unless may be for some small gaps between triangles. Let us note 0 such that the largest gap does not exceed 2 . It is possible to heal this polygon soup which is to convert it into a watertight representation. First create a tetrahedron or octahedron Clarge enough to contain a ball of radius . Then compute the Minkowski sum of Cwith C. This operation fits situation 2 because Cis indeed a 3 manifold and the Minkowski sum with Cpreserves the orientation of the tetrahedrons of C.

An example of situation 3 is the following. Assume that we want to compute the union of all the images of a solid defined by a two parameters family of transformations. It is possible to approximate the family of transformations by triangulating the 2 dimensional parameter space into a combinatorial 2 manifold C. It is possible as well to triangulate the solid into a combinatorial 3 manifold C. If the transformations and their dependence with respect to the parameters are smooth enough simplices can be made sufficiently small to reach a given approximation of the exact map. This approximation is defined by the piecewise linear map induced on C C by the images of the vertices of C C. Notice that it is not required unlike situation 2 for the transformations to be orientation preserving in particular a transformation may send an interior simplex on the boundary of the image.

Another example of situation 3 is the following. Assume a robot arm with n degrees of freedoms holding a solid S. The volume swept by S can be computed as follows. First triangulate the configuration space of the arm as a combinatorial n manifold possibly as a product of the triangulations of the configuration spaces of each join of the arm .

If n is even triangulate S as a combinatorial 3 manifold. If S is given by its skin triangulation this requires triangulating the solid which is not entirely trivial if S is not convex. Another option is to triangulate a thickening of the skin by creating an inner vertex Vfor each skin vertex V at distance 0 and if possible with the vector right arrow over VV pointing toward the interior of the solid and then replacing each skin triangle by a thin triangular prism.

If n is odd the skin triangulation of the solid is used. Both cases fit situation 3. depicts a thickened polygon with its triangulation.

As an example for obtaining a simplicial complex a general procedure for the triangulation of the Cartesian product C Cof two simplicial complexes Cand C as depicted in at step S is described here. The procedure below allows triangulating any subset of the product in a consistent way. More precisely given a simplex in Cand a simplex in C the triangulate procedure triangulates the Cartesian product in such a way that if in Cand in Care respective faces of and with possibly the triangulation computed from and is compatible with the triangulation computed from and . In other words it is a sub complex of the triangulation computed from and . This procedure allows then to output any subset of the triangulation of the Cartesian product on the fly thus avoiding the costly triangulation of the whole Cartesian product.

The consistency condition relies on two arbitrary given total orderings one on the set of vertices of Cand one on the set of vertices of CGiven a n simplex in Cand a m simplex in C these total orderings induce an ordering of the vertices of the simplices of and . Using this ordering and are expressed as x . . . x and y . . . y where x . . . xand y . . . yare respective increasing sequences of vertices of and .

The triangulate procedure below is called with the two input simplices and and an empty simplicial complex T. The procedure successively adds n m simplices to T. Faces of these simplices are not explicitly added to T. By convention they are considered implicitly as part of the resulting complex.

How the triangulation procedure works is illustrated below with a triangle 0 1 2 and a line segment 3 4 . For simplicity vertices names use integer numbers representing the absolute ordering. The recursion first navigates down to the deepest calling level until one of the two input simplices is a 0 simplex. depicts this step.

Next step see is to perform the easy products of a simplex by a 0 simplex at each leaf node of the calling tree. Resulting simplices are stored in Tand T.

This yields the geometry shown in . From left on to right on input simplices 0 1 2 and 3 4 Cartesian product which is a prism the output triangulation T of the Cartesian product by three tetrahedrons.

The resulting simplicial complex T is defined by three adjacent tetrahedrons. The final step of the triangulation procedure is to complete the combinatorial description of T by adding triangles edges and vertices. This step is not further described.

The invention may advantageously be implemented in one or more computer programs A B that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A system bus provides the set of hardware lines for data transfer among these components of computer system . Attached to the system bus is I O device interface for connecting various input and output devices e.g. keyboard mouse displays printers speakers etc. to computer . Network interface allows the computer system to connect to various other computers or devices attached to a network of computers e.g. a local area network a wide area network a global computer network such as the Internet and the like . Memory provides volatile storage for computer software instructions A and data used to implement an embodiment of the present invention e.g. steps and procedures of and supporting code detailed above . Disk provides non volatile storage for computer software instructions B and data used to implement an embodiment of the present invention. Central processor unit is also attached to system bus and provides for the execution of computer instructions.

The application program may be implemented in a high level procedural or object oriented programming language or in assembly or machine language if desired and in any case the language may be a compiled or interpreted language.

Generally processor receives instructions and data from a read only memory and or a random access memory . Storage devices suitable for tangibly embodying computer program instructions A B and data include all forms of nonvolatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM disks. Any of the foregoing may be supplemented by or incorporated in specially designed ASICs application specific integrated circuits .

While this invention has been particularly shown and described with references to example embodiments thereof it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the scope of the invention encompassed by the appended claims.

For example the preferred embodiment of the present invention has been described. It will be understood that various modifications may be made without departing from the spirit and scope of the invention. Therefore other implementations are within the scope of the following claims.

Although the method and routines described herein above are described in a na ve manner for the sake of pedagogy it is obvious that improvements can be contemplated with respect to algorithm efficiency considerations.

