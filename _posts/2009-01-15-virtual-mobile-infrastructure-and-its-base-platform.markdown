---

title: Virtual mobile infrastructure and its base platform
abstract: A virtual mobile infrastructure (VMI) includes a base platform that has a plurality of hosts. On a host operation system (OS), a quick emulator (QEMU) process is used to virtualize at least one guest cell phone operating system. A data center manages these cell phone OSes generated by this base platform, allocates the OSes to users, and allows communication between cell phone client and server via mobile terminal protocol. A virtual machine (VM) switch contains a method to use the VMI, and to acquire adapted cell phone screen and inexpensive cell phone VM. A VMI product is able to encapsulate the third-party virtual desktop infrastructure (VDI) products (such as Citrix XenDesktop, LeoStream, etc.), henceforth to acquire screens from PC VM as well. Moreover, a VM manager allows administrators of enterprises to manage thousands of VMs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09081601&OS=09081601&RS=09081601
owner: TRANSOFT (SHANGHAI) INC.
number: 09081601
owner_city: Shanghai
owner_country: CN
publication_date: 20090115
---
This application claims priority to Chinese Application No. 200810204286.X filed on Dec. 10 2008 the entire contents of which is incorporated herein by reference.

The invention involves a virtual mobile infrastructure. The infrastructure involves how the cell phone user obtains a PC and cell virtual mobile VM in the data center and the screen of applications running on the VM specifically how cell phone VM is generated via the QEMU of the data center server and how the VM pool is used to manage large amount of VMs.

With the advance of computer and internet technology there appears a trend for the virtualization of personal computer PC OS. The PC OS no longer runs on the local real machine instead is centrally managed in a remote data center where large amount of OSes are virtualized. Meanwhile the desktop of the OS is delivered to the terminals via network. As an applied area of PC OS virtualization this is called Virtual Desktop Infrastructure or briefly VDI.

The VDI management software controls a large number of PC VMs in pooling in the data center while a connection broker sends out RDP screen to desktop thin clients. The technology from VMWare ESXi Citrix Xen and Microsoft Hyper V serves as the VDI foundation.

On the other hand today s high end Smartphone is starting to become similar to a personal computer. For example a mobile handheld device such as the Blackberry or iPhone in today s market can go online check e mail play music stream videos take pictures navigate driving or simply make a phone call. The demand of cell phone capabilities keeps on increasing. This leads to a high cost of cell phone manufacturing. Therefore recently the concept of virtual mobile is proposed namely the virtualization of large number of cell phone OSes with the resources and fix net of the data center and the delivery of screen to cell phone terminal.

Compared to the traditional cell phone technology virtual mobile has the advantages 1 a quick expansion of IT automation to anyone who carries a cell phone with lots of old PC applications and new mobile applications executed on the VMs in the data center and screen transmitted to cell phones. 2 Enabling virtualization will also allow the mobile devices to be more secure against virus attacks or lose of the physical device. 3 The screen of Mobile VM is much more adapted to the cell phone as a client plus it requires much less transfer data hence lower wireless bandwidth. 4 The cell phone client is able to take advantage of huge inexpensive resources of CPU memory disk and fix net in the data center.

Under this virtual mobile background a viable highly effective Virtual Mobile Infrastructure VMI becomes an urgently needed solution to the domain problem.

The purpose of this invention is to provide a virtual mobile infrastructure. Specifically it involves the infrastructure for the enterprises or mobile service providers to deliver PC and or cell phone screen to the cell phone.

With the features of a VM switch a method utilizes this invention s VMI to obtain an adapted cell phone screen and an inexpensive VM. In one embodiment the system can encapsulate the third party VDI products e.g. Citrix XenDesktop LeoStream etc. henceforth to obtain the screen of a PC VM. Additionally through the VM management method the administrators of the enterprises or mobile service providers are able to manage thousands of VMs.

a base platform including several hosts each running a QEMU process to virtualize at least one guest operating system and its memory as a cell phone VM 

a data management center to manage the cell phone VMs generated by the said base platform and to allocate the said cell phone VM to the user 

a VM switch to connect the said base platform and the said data management center. The said VM switch allows the user select cell phone OS and cell phone application that runs on the cell phone VM according to the user requests from cell phone client and

In one embodiment of this invention the base platform further includes a method for the QEMU process and kernel of the guest operating system to share host memory.

In one embodiment of this invention the base platform further includes a performance agent to acquire the performance statistics of the host and or its child processes.

In one embodiment of this invention the base platform further includes a method to improve QEMU s soft MMU where the system uses a page lookup to find the physical address of the virtual address of the guest OS memory region and further takes this physical address as an offset to mask out the address in an assembly instruction.

In one embodiment of this invention the base platform further includes A preprocessor to debug virtualized I O device drivers based on the openness of the source code of guest OS and its platform building tool. For complete openness a re build of source code can run directly on x86 platform if the platform building tool is acquired then I O driver can be debugged with the tool otherwise the development hardware board and BSP must be used to help the reverse engineering work.

In one embodiment of this invention the said MTP based server runs on top of the host operating system of the said base platform.

A method to adapt the screen proportionally to the cell phone screen size by shrinking expanding rotating and compressing the screen image before it is sent to the client 

A method to detect image change recognize text and deliver text and changed square region only before the image is sent to the client.

In one embodiment of this invention the said cell phone client includes A method to deliver GPS longitude and latitude data through data channel to the said MTP server support echo canceling and negotiate the optimal method from multiple audio codecs based on the wireless bandwidth and cell phone hardware capability.

A VM allocator to build session acquire optimal VM from a VM pool and allocate VM to cell phone clients 

A VM pool manager to select optimal VM in the pool return VM to the pool check VM state and use a background worker to continuously check pool status in order to match the rules from a rule engine 

A VM server manager to manage multiple hosts and use platform API to interact with the said base platform and

A management console to unify the management of the composition of the following resources human organization template virtual machine application package and platform server.

In one embodiment of this invention the said rule engine includes the control rules of VM generation destroy start and stop. The said rules can be created edited loaded saved and deleted by administrators with high level computer language.

In one embodiment of this invention the said VM switch includes connection broker to provide access for cell phone client and deliver OS screen and application screen to the client.

In one embodiment of this invention the client access through the said connection broker further includes unified authentication and authorization to complete the Kerberos security protocol and single sign on SSO .

In one embodiment of this invention the said VM switch includes personnel and organization databases application and package databases as well as VM server and template management databases.

In one embodiment of this invention it further includes a method to manage template. The template is used to bind one or more of the following configuration items VM memory CPU application host and cell phone OS.

In one embodiment of this invention it further includes a VDI socket where the said VM switch can encapsulate a third party VDI product via VDI socket so that a user is able to select PC VM and PC application running on an external VDI product.

A PC connection broker to inform external VDI product that after user login which application will be run on the selected VM and to inform cell phone client to get ready to receive application screen via MTP after PC application agent activates the said application.

A PC application agent installed on the VM of external VDI product beforehand. When the VM starts the application agent itself is activated and then activates the requested PC application. The application agent then informs PC connection broker the failure or success of the activation. If successful the application screen is delivered to the cell phone client. When cell phone client disconnects PC application agent shuts down the application.

In one embodiment of this invention the aforementioned virtual mobile base platform further includes 

A method to improve QEMU soft MMU where the system uses a page lookup to find the physical address of the virtual address of the guest OS memory region and further takes this physical address as an offset to mask out the address in an assembly instruction.

A preprocessor to debug virtualized I O device drivers based on the openness of the source code of guest OS and its platform building tool. For complete openness a re build of source code can run directly on x86 platform if the platform building tool is acquired then I O driver can be debugged with the tool otherwise the development hardware board and BSP must be used to facilitate the reverse engineering work.

This invention provides a method to subscribe application on a mobile network for enterprises and mobile service providers. This method is based on the cell phone OS virtualization to build a MTP client so that user is able to access acquire VM run application obtain cell application screen and henceforth run any cell operating system and cell application. Additionally because it can encapsulate the third party VDI products it can also run any PC operating system and PC application.

In this invention a user uses Smartphone instead of dumb terminal thereby obtain screen via remote desktop protocol RDP or RDP compatible mobile terminal MTP . The screen can come from not only a PC VM the backend is the same as VDI but with cell screen adaptor but also b cell VM in the data center.

In cell phone as a client uses VM switch to obtain cell phone screen from Transoft data management center . Data management center interacts with QVisor platform where QVisor host supplies multiple cell phone VMs. In one embodiment cell phone client may also obtain PC VM screen from third party VDI products .

The purpose of VM switch is to deliver application screen from VDI PC VM and VMI cell VM platforms to cell phone client . A typical VMI configuration is like this VM switch is installed at a geographical node simultaneously controls multiple aforementioned data management center and multiple VDI products . Here VM switch may allow user to select an application running on VMI cell VM or third party VDI PC VM backend systems.

In one embodiment VDI system may also combine with applicant s patent A generalized application virtualization method for business use on the web and the mini server using this method US patent publish No. US 2008 0183641A1 and China patent publish No. CN101231731A . The applicant s product TRANSOD s client and server may also run in the data management center to facilitate automatic application deployment.

VM switch has a connection broker managing connections from VDI products or VMI data management center. Connection broker consists of PC connection broker and cell connection broker . The VM switch also manages the database of personnel and organization database of application and package and database of VM server and templates . The operations of these databases are not detailed here. VM switch decides if the user has the privilege to obtain the screen of the subscribed application. VM switch also decides if the application is from the third party VDI backend or from the data management center QVisor backend thus to take proper action to adapt the screen for the cell phone client.

VDI third party product employs PC application agent and PC connection broker to become part of the VMI architecture. and thus forms the so called VDI socket .

Data management center is the management system of cell phone VM including VM allocator management console pool manager VM performance monitor VM management server and QVisor APIs . The data management center contains the current states of all VMs. It is able to acquire and allocate VMs from QVisor via the VM pool manager. The acquisition of a VM needs access to QVisor API via VM server manager. QVisor API includes create and destroy VM start and stop VM get VM list VM list running VM list off VM and get VM performance.

QVisor platform is the base technology of VMI. The platform contains multiple QVisor hosts . Each QVisor host runs host operating system . On top of the host OS there are MTP server performance agent and multiple QEMU child processes . A cell phone operating system runs on top of QEMU. The cell phone operating system can be Win Mobile gPhone iPhone etc. As the cell phone OS boots the cell application agent automatically starts. QVisor platform has a layering architecture as shown in . QVisor platform executes performance monitoring shared QEMU and kernel memory paging optimization and I O device debugging preprocessor.

To realize VMI it is necessary to have MTP client talks with MTP server via the MTP protocol. MTP client is the software downloaded to the cell phone. MTP server runs on top of Linux of the QVisor host . MTP protocol is detailed as follows 

Mobile Terminal Protocol MTP client is installed on the cell phone no need to install if Win Mobile cell phone already comes with RDP remote desktop protocol 6.0 client or iPhone already comes with Safari browser . On the client the subscribed application list in the package appears. If the user clicks one of the applications in the package the VM switch contains user id information for authentication. Afterwards the data management center acquires a VM frp QVisor platform via QVisor API . At this junction the application agent activates the application. The MPT server then delivers the first application screen to the user s cell phone.

Step launch default mobile application on default cell phone VM. Practically allow user to obtain the OS desktop of mobile VM 

Step enter PC connection broker . Find best fit PC VM and start it. PC connection broker is further illustrated in 

Step inform PC agent to launch PC application. PC application agent is further illustrated in . In one embodiment if a third party VDI product is encapsulated this application may be streamed activated to PC VM by applicant s patent CN10123173A A generalized application virtualization method for business use on the web and the mini server using this method 

Step enter mobile connection broker find best fit mobile VM and start it. Inform cell application agent to launch mobile application on VM the flowchart of mobile connection broker is further illustrated in 

Step administrator enters management console . The console provides an interactive interface for administrator operations 

Step see if the operation is to manage personnel organization. If yes enter Step . Otherwise enter Step 

Step proceed with Light weighted Directory Protocol LDAP where the personnel and organization database of the VM switch is accessed 

Step see if the operation is to manage application package. If yes enter Step . Otherwise enter Step 

Step enter VM Server manager. For details see . The summarized process is to enter Step QVisor API then enter Step to execute host OS commands in QVisor host 

Step the various functions coming from the VM server manager of Step will use QVisor API via web services to create start stop delete . . . VM 

Step in QVisor host execute the creation or destroy of the child process of QEMU and the guest OS on the QEMU 

Step from the console interface obtain template name image ID related to the path of image storage location template type i.e. different cell OS memory CPU application and the host designated by the user to store the template information as a template record in the template database table 

Step enter VM server management. For details see and its related description. The summarized process is to enter Step QVisor API then enter Step to change memory and CPU in the QVisor host 

Step the memory and CPU changing functions coming from the VM server manager of Step will use QVisor API via web services to change memory and CPU 

Step see if the user passes UAAS authentication and authorization. For details see . If yes enter Step . Otherwise enter Step 

Step connect to the application a tell Application agent on the VM the subscribed application ID b wait until the application is launched or failed c inform MTP client to receive the first screen or report error.

Step the Telco Server finds that the user has no available ticket. It then send a request to the UAAS Server to ask the URL of the Proxy Server of the user s company 

Step the UAAS Server replies with the URL Uniform Resource Locator of the Proxy Server of the user s company 

Step the Telco Server asks the user to redirect the UAAS Proxy Server to the URL of his company s Proxy Server 

Step the UAAS proxy server sends the ID and the TGT of the user to the UAAS Server to complete the authorization 

Step allocate the VM to user Start of this VM automatically starts an application agent on VM as shown in .

Step see if the service of VM pool manager is to return VM. If yes enter Step . Otherwise enter Step 

Step see if the service of VM pool manager is to check VM state. If yes enter Step . Otherwise enter Step 

Step see if the service of VM pool manager is to check VM pool. If yes enter Step . Otherwise enter Step 

Step from database get platform record to obtain the values of kernel memory machine and exe file name 

Step generate uuid and MAC number UUID Universal Unique Identifier is the number generated on the host to guarantee the uniqueness in the same time and space for all hosts. MAC Media Access Control address is burned in the Network Interface Card NIC also known as hardware address.

Step execute a child process with the above arguments to execute QEMU and its guest OS the execution uses Linux command fork or Windows system call createProcess . These command build QEMU a child proces while this process in turn launch its guest OS with these arguments.

Step kill the child process of PID execution uses Linux command kill . Kill terminates QEMU along with its guest OS. For Windows operating system use system call TerminateProcess .

Step switch to the VM state found. If the state is RUNNING enter Step . If the state is POWERED OFF enter Step . If the state is N A enter Step 

Step execute Linux command line of ps top vmstat ps is a Linux system command to display process states. The appended argument ux tells the utilization of CPU and memory for a running process. Top is another Linux system command with similar function to display process states but in an interactive mode. Vmstat may be used to display more kernel threads as well as statistical information of IO virtual memory and CPU Trap. If the host OS is Windows XP or Vista the functions in the Windows Management Instrumentation WMI such as CollectingHighCPUUtilizationEvents may be used to acquire the process states.

Step use lseek to find the size of QEMU kernel files use ftok to calculate the key for memory sharing. lseek is a function of C programming language and can obtain the length of a file using its offset value while ftok is Linux system function to get key for a subsequent call to shmget to share memory 

Step calculate argument value for Shmat Loading address ram base physical page descriptor start loading address target page mask kernel QEMU load address This means the absolute memory address of guest OS is the sum of the following three quantities 1 base address of cell phone random access memory RAM 2 the absolute address of translated physical memory address page and 3 kernel QEMU loading address 

Step shmget is a Linux system function usable to acquire or create a IPC shared memory segment associated with the value of the argument key. If the return value of Shmget key size IPC Creat is EEXIST enter Step . Otherwise enter Step 

Step shared memory already exists i.e. the calling child process is not the first child process on this host 

Step shmat is a Linux system function usable to attach a shared memory for a child process. Thus the subsequently created child processes may use Shmat shm id loading address to share memory with the first child process 

Steps provide a kernel sharing solution for Linux. If the host runs Windows XP or Vista the system services of memory management in the Win32 development environment is used to take guest OS and QEMU as a single child process and then take function CreateFileMapping to get its file handle. Subsequently other child processes uses function OpenFileMapping and the file handle obtained in the CreateFileMapping function call to share the memory of the first child process.

Step see if the operation is to translate address for guest OS. If yes enter Step . Otherwise enter Step 

Step Set the physical address with repect to the virtual adddress in the page table as Guest OS offset 

Step see if the operation is other non regional translation operations. If yes enter Step . Otherwise enter Step 

Step change to data center large size device e.g. SD is replaced with hard disk 64M RAM is expanded to 128 M etc. then proceed to Step 

Step see if the source code of the cell phone OS is completely open. If yes enter Step . Otherwise enter Step 

Step screen may be the original PC screen or adapted PC screen generated by the technology from applicant s China patent CN101231731A Proceed to Step 

Step see if device database contains cell phone information. If yes enter Step . Otherwise enter Step 

Step report error and record in the server log file to facilitate future updates for the device database. Currently there is no way to adapt the screen. Step 

Step lookup and obtain cell phone screen height and width from server device database. Compare the screen image with actual cell phone height and width 

Step negotiate audio standard with server based on bandwidth on both ends and cell phone capabilities to select optimized audio codec. 

Step see if negotiation successful. If yes use the negotiated standard and proceed to Step . Otherwise use G.722 standard and proceed to Step 

Step Inform connection broker app launched which in turn tells MTP client to get ready receiving the first screen 

Step the cell application agent after activated and connected to the VM starting on the host stay in a wait state 

Step cell connection broker after authenticated acquire the VM and proceed to send application name to the host 

Step MTP server connects to MTP client successfully and display the screen of the application running on VM 

In the real world deploying environment it is entirely possible to deploy the VM switch and data management center in a telco data center or entirely in a enterprise. It is also possible to deploy the VM switch in telco while data management center in enterprise. The I O device debugging pre processor related to this invention may be usable to any cell phone OS virtualization.

The illustration of the above flow charts and sequence diagram explain virtual mobile infrastructure VMI . On one hand VMI provides an application subscription method on the mobile network for the telco. The method is based on cell phone OS being virtualized with the improved mobile terminal protocol to allow user access VM acquisition application running and screen delivery thereby can be operated on any cell OS and cell application. On the other hand because of the encapsulation of third party VDI products the method also allows a cell phone to run any PC OS and PC application.

As a summary this invention combines cell phone on board debugging technology QEMU emulation technology OS virtualization technology and virtual desktop infrastructure technology. It provides a virtual mobile infrastructure for enterprises and telcos.

While this invention has been particularly shown and described with references to preferred embodiments thereof it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the scope of the invention encompassed by the claims.

