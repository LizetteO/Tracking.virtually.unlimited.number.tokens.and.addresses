---

title: Deep packet inspection (DPI) using a DPI core
abstract: Illustrated is a system for performing Deep Packet Inspection (DPI) that includes a core to prepare a data packet for transmission. Further, the system includes a memory controller to direct the data packet to a DPI core. Additionally, the system includes a Network Interface Card to receive the data packet for transmission after DPI is performed on the data packet by the DPI core. The system includes a Direct Memory Management module to update a descriptor that references a received data packet stored in an Operating System buffer. Moreover, the system includes an Input/Output Memory Management Unit to direct the descriptor to be stored in a DPI memory. Additionally, the system includes an interrupt controller to transmit an interrupt to the DPI core to such that the DPI core retrieves the descriptor from the DPI memory and performs DPI on the data packet stored in the OS buffer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08122125&OS=08122125&RS=08122125
owner: Hewlett-Packard Development Company, L.P.
number: 08122125
owner_city: Houston
owner_country: US
publication_date: 20090908
---
Deep Packet Inspection DPI is used to for example ensure Quality of Service QoS for certain packet types to meet network traffic and bandwidth requirements to detect malware or enforce business conduct policies on information exchanged inside and outside a company. DPI is presently used in data centers and other places where large amounts of data are processed. Through DPI network security and efficiency can be maintained.

Illustrated is a system and method for DPI that uses a DPI module residing on a DPI core to perform DPI. In some example embodiments this DPI core resides upon the same computer system as a general purpose core e.g. the core and associated Operating System OS . When receiving a data packet a NIC associated with the core copies using DMA the data packet to a packet buffer in residing in the computer system s main memory. An updated descriptor from the NIC is directed by the Input Output Memory Management Unit I O MMU to the DPI module. At some later point the interrupt controller sends an interrupt to the DPI module instructing the DPI module to perform DPI on the received packet. When a data packet is to be transmitted the OS is instructed by a memory controller associated with the core to write the data packet to a DPI buffer. This instruction is provided via a DMA module associated with the memory controller. At some later point the interrupt controller sends an interrupt to the DPI module instructing the DPI module to perform DPI on the packet to be transmitted. Further as will be more fully illustrated below the core s I O MMU interrupt controller memory controller and Translation Look Aside Buffer TLB are modified so that the DPI memory can only be accessed by the DPI module.

In some example embodiments the DPI module is statically mapped on a specific DPI core at boot time. This can be implemented at boot time by the computer system s BIOS which effectively hides the DPI core from the general purpose core s available to the OS and bootstraps the DPI environment onto the DPI core. With respect to memory allocation on the computer system the DPI module s virtual address space is mapped to a statically assigned portion of the computer system s main memory. This portion of memory is reserved as DPI memory. While the DPI module is able to access all memory on the computer system including memory allocated for the OS the OS and core s upon which it resides cannot access the DPI memory.

In some example embodiments interfaces are associated with each of the I O MMU interrupt controller and memory controller are made available only to the DPI module to allow the DPI module to modify the functionality of the I O MMU interrupt controller and memory controller . These interfaces may be physical interfaces or Application Programming Interfaces APIs . Example modified functionality includes the I O MMU directing updated descriptors to a DPI module residing on the DPI core from the NIC the interrupt controller interrupting the DPI module to perform DPI and the memory controller writing a data packet to be transmitted to a DPI buffer e.g. DPI memory from an OS packet buffer .

In some example embodiments wherein the performance of DPI includes an inspection for at least one of a QoS for the data packet to meet network traffic and bandwidth considerations to detect malware associated with the data packet or enforce business conduct policies with regard to the data packet. Further the descriptor includes at least one of a pointer to an address in memory or a referent to the address in the memory. Additionally the DPI module resides on a common compute blade with the OS. Moreover the OS is executed on a core that is distinct from an additional core upon which the DPI module is executed. In some example embodiments the performance of DPI on the data packet includes inspecting a load of the data packet.

In some example embodiments a removable physical storage medium is shown to be a single medium and the term machine readable medium should be taken to include a single medium or multiple medium e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any of the one or more of the methodologies illustrated herein. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic medium and carrier wave signals.

The methods shown herein may be implemented as data and instructions that are stored in respective storage devices which are implemented as one or more computer readable or computer usable storage media or mediums. The storage media include different forms of memory including semiconductor memory devices such as DRAM or SRAM Erasable and Programmable Read Only Memories EPROMs Electrically Erasable and Programmable Read Only Memories EEPROMs and flash memories magnetic disks such as fixed floppy and removable disks other magnetic media including tape and optical media such as Compact Disks CDs or Digital Versatile Disks DVDs . Note that the instructions of the software discussed above can be provided on one computer readable or computer usable storage medium or alternatively can be provided on multiple computer readable or computer usable storage media distributed in a large system having possibly plural nodes. Such computer readable or computer usable storage medium or media is are considered to be part of an article or article of manufacture . An article or article of manufacture can refer to any manufactured single component or multiple components.

In the foregoing description numerous details are set forth to provide an understanding of the present invention. However it will be understood by those skilled in the art that the present invention may be practiced without these details. While the invention has been disclosed with respect to a limited number of embodiments those skilled in the art will appreciate numerous modifications and variations therefrom. It is intended that the appended claims cover such modifications and variations as fall within the true spirit and scope of the invention.

