---

title: Information processing apparatus, information processing method, and program
abstract: Whether or not a default device exists among devices associated with a device management application is determined. When it is determined that the default device exists among the devices associated with the device management application, a friendly name of the default device is displayed in a device name display part of the device management application. When it is determined that no default device exists among the devices associated with the device management application, a device name of any one of the devices associated with the device management is displayed in the device name display part of the device management application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09529560&OS=09529560&RS=09529560
owner: Canon Kabushiki Kaisha
number: 09529560
owner_city: Tokyo
owner_country: JP
publication_date: 20091020
---
The present invention relates to an information processing apparatus an information processing method and a program for managing peripheral devices.

In recent years peripheral device control systems in which peripheral devices are connected to an information processing apparatus by utilizing various types of interfaces such as universal serial bus USB Ethernet registered trademark and a wireless local area network LAN have been effectively used in various forms at home and office. Examples of a peripheral device include a printer a facsimile machine a scanner a digital camera a device having a multiple function of a printer a facsimile machine a scanner and a digital camera and so forth.

A device management application that manages peripheral devices exists as an example of a peripheral device control system. By utilizing the device management application a setting of a device or device driver can be changed and an operation state of a device can be monitored.

Furthermore when a printer is provided as an example of a peripheral device an application that can print an image or document can be activated from the device management application. Additionally when a scanner is provided as an example of a peripheral device an application that can read an image or document can also be activated from the device management application.

As the Internet becomes widespread an information processing apparatus and peripheral devices are connected to the Internet and various types of online services utilizing the Internet are also provided. For example a user can obtain using the device management application a link to an online service that is associated with a device.

Here a multifunction printer in which a printer a facsimile FAX machine a scanner and a storage device are mounted hereinafter referred to as an MFP in some cases is provided as an example of a peripheral device. Both a driver that controls a printer function and a driver that controls a FAX function are printer class drivers and are installed in an information processing apparatus as different drivers. As a result a printer icon representing the printer the driver for the printer function and a FAX icon representing the FAX the driver for the FAX function are displayed as icons having different names on a printer queue. Accordingly a device management application for the MFP needs to appropriately manage the two drivers. However control of determining which priority is to be assigned to which driver or the like is not appropriately performed and priorities of the drivers are simply determined in accordance with an order of installation of the drivers or the like. Moreover a device name that is to be displayed in a device name display part of the device management application is not appropriately determined. Thus a device name that is to be displayed in the device name display part is simply determined in accordance with an order of installation of the drivers or the like and the device name is displayed.

The present invention aims to focus on the following problems in a case in which a plurality of device drivers are associated to one peripheral device and to solve the problems.

 1 A problem that a device name which is to be displayed in a device name display part of a device management application is not appropriate.

 2 A problem that a driver which is associated with each function that is to be performed using a device management application is not appropriate.

Here in the above described example of the MFP an example is considered in which a user mainly uses the printer function. In an environment in which the user uses the MFP it is desirable that an appropriate name indicating the printer function or a printer driver name be displayed in the device name display part of the device management application. For example when the user customizes a printer icon name friendly name so that the friendly name of the printer icon is changed to a friendly name such as Koichi s Printer it is desirable that the friendly name be displayed in the device name display part of the device management application. For example the user does not customize the printer icon name it is desirable that a model name of the MFP or the like be displayed in the device name display part. Furthermore each of the functions of the MFP is classified as the main function or a sub function it is desirable that a driver name or friendly name which indicates the main function be displayed in the device name display part.

Similar issues are considered for a function of chaining a setting of a device driver on the device management application or a function of monitoring an operation state of a device. For example when an operation of opening a printer queue on the device management application is performed in a case in which a plurality of printer queues that are associated with the device management application exist it is desirable that a printer queue for a device which is set as a default device be preferentially opened. Additionally similarly also for setting print setting of a device driver it is desirable that a print setting dialog for a driver which is set as a default device printer be preferentially displayed.

The present invention focuses on the problems of the above described example of the related art and proposes a system which provides a device management application that provides an appropriate display or function in accordance with an environment in which a user uses the system which automatically fits to an environment in which the user uses the system and which has an excellent operability.

An information processing apparatus according to an embodiment of the present invention includes the following elements a determination unit configured to determine whether or not a default device exists among devices that are associated with a device management application and a display unit configured to display when it is determined by the determination unit that the default device exists among the devices which are associated with the device management application a friendly name of the default device in a device name display part of the device management application and configured to display when it is determined by the determination unit that no default device exists among the devices which are associated with the device management application a friendly name of any one of the devices that are associated with the device management application in the device name display part of the device management application.

Hereinafter embodiments of the present invention will be described with reference to the accompanying drawings.

From information concerning Windows registered trademark Vista OS that is cited below information to which no detail description is particularly added is disclosed at Microsoft Developer Network MSDN site as of Sep. 29 2008. The uniform resource locator URL of the MSDN site on the Internet is as follows. http msdn.microsoft.com en us library default.aspx

As shown in the PC includes a random access memory unit a random access memory RAM a hard disk drive unit a hard disk drive HDD that is a storage unit a keyboard unit a keyboard device KBD that is an example of an input unit and a central processing unit CPU that is a control unit. Furthermore the PC includes a display a liquid crystal display LCD that is an example of a display unit a network board a network board NB that is an example of a communication control unit and a bus that connects the above mentioned elements of the PC to one another. Moreover the storage unit may be a portable CD ROM a built in read only memory ROM or the like. Applications including the application and so forth and individual modules software that are shown in are stored on the HDD . The applications and modules are on an as needed basis read into the RAM and executed by the CPU . Accordingly the CPU realizes functions of the applications including the application and so forth and functions of the individual modules software that are shown in .

In reference numeral denotes an Ethernet registered trademark control stack that controls Ethernet registered trademark . Reference numeral denotes an Internet protocol IP network control stack that controls an IP network. Reference numeral is a web services on devices WSD control stack that controls WSD. Reference numeral denotes an independent hardware vendor IHV native protocol control stack that controls an IHV specific protocol. Reference numeral denotes a network plug and play hereinafter referred to as an N PnP in some cases control stack that controls N PnP.

Note that plug and play extensions PnP X exist as a series of extension functions of plug and play. The PnP X provide support for a device that is connected to a network and are included in Windows registered trademark Vista OS as standard. However in the first embodiment an example is described in which the N PnP is utilized as a function that is equivalent to the PnP X. Reference numeral denotes a group of device drivers. The group of device drivers includes a group of standard drivers that is packaged with the OS as standard and a group of IHV made drivers that is provided from an IHV. Reference numeral denotes an application programming interface API device driver interface DDI and the API DDI includes an API and a DDI. Reference numeral denotes an application and the application is a device management application that is packaged with the OS as standard. Reference numeral is an application capable of printing which is described below with reference to . Reference numeral is a group of applications and the group of applications includes the device management application a print application and so forth. The device management application can display a printer queue button and a print setting button which are described below with reference to through the API DDI .

Referring to information that is the printer name ABC Kmmn Printer is set in pPrinterName as a friendly name . The information that is set has been obtained from the INF file when the printer driver has been installed. The virtual port name USB001 for the printer function of the MFP 3 is set in pPortName. Furthermore information that is the driver name ABC Kmmn Printer of the printer driver is set in pDriverName. The information that is set has been obtained from the INF file when the printer driver has been installed. 0 indicating an online status is set in Status.

Referring to information that is the FAX name ABC Kmmn. FAX is set in pPrinterName. The information that is set has been obtained from the INF file when the FAX driver has been installed. The virtual port name USB002 for the facsimile function of the MFP 3 is set in pPortName. Furthermore information that is the driver name ABC Kmmn FAX of the FAX driver is set in pDriverName. The information that is set has been obtained from the INF file when the FAX driver has been installed. 0 indicating an online status is set in Status.

Referring to information that is the printer name ABC Kmmn Printer is set in pPrinterName. The information that is set has been obtained from the INF file when the printer driver has been installed. The virtual port name USB001 of for the printer function of the MFP 3 is set in pPortName. Furthermore information that is the driver name ABC Kmmn Printer of the printer driver and 0 indicating an online status are set in pDriverName and Status respectively.

Referring to information that is the FAX name Koichi s Fax is set in pPrinterName. The information that is set is a friendly name and the value that was set in pPrinterName illustrated in has been changed into the friendly name by the user in the printer and FAX folder . The virtual port name USB002 of a virtual port for the facsimile function of the MFP 3 is set in pPortName. Furthermore the driver name ABC Kmmn FAX of the FAX driver and 0 indicating an online status are set in pDriverName and Status respectively.

Note that referring to an example in which a printer queue folder is opened and displayed and an example in which a print setting dialog is opened and displayed are described as examples of individual functions programs that can be performed using the device management application and that are associated with devices. However the present invention is not limited to the above described examples. The present invention can be applied to similar functions and programs.

For example for an application for opening and displaying a picture or document and for printing the picture or document when printing is performed a printer selection screen for selecting a printer is displayed. The present invention can be applied to a function program of setting a printer that is first selected on the printer selection screen as a target device that is determined using the process illustrated in and of displaying the target device on the printer selection screen. With the function program operability for users can be markedly improved.

Furthermore for example in a case in which a function program of providing a link to a website that is associated to a device is implemented as a function program that can be performed using the device management application it is necessary that information concerning the device be added as a parameter to the URL of the website. Here a target device that is determined using the process illustrated in is set as the specified parameter and a link to a website that is associated with the target device is provided whereby the operability for users can be markedly improved.

The printer queue button and the print setting button that are shown in are displayed on the device management application that is activated when the MFP 3 is connected to the PC . As shown in two elements each of which represents a corresponding one of the printer queue button and the print setting button and a function thereof are set in a element.

First the first element will be described. A character string Open Printer Queue which is to be displayed on the printer queue button is set in a OpenPrinterQueue element. A code open PrinterQueue which indicates a function program of displaying the printer queue folder or is set in a openPrinterQueue element. The process of displaying a printer queue folder which is illustrated in is associated with the code openPrinterQueue .

Next the second element will be described. A character string Printing Preferences which is to be displayed on the print setting button is set in a Printing Preferences element. A code printinereferences which indicates a function program of displaying the print setting dialog or is set in a printing Preferences element. The process of displaying a print setting dialog which is illustrated in is associated with the code printingPreferences .

 MFG ABC MDL Kmmn CLS PRINTER CMD K4 DES ABC Kmmn indicates a device identification ID . The device ID is a device ID of a printer function of the MFP 3 and the PC can obtain the device ID from the MFP 3 via the network . The device ID indicates the following information 

Referring to when a device the MFP 3 is connected to a PC the PC via the network step S a device ID is obtained step S . Next whether or not a driver the printer driver and the FAX driver has been installed is determined step S . When it is determined in step S that no driver has been installed a driver the printer driver and the FAX driver is installed step S .

After that the driver the printer driver and the FAX driver is loaded step S . Then whether or not a device management application the device management application has been installed is determined step S . When it is determined in step S that no device management application has been installed a process of installing a device management application which is described below with reference to is performed step S . Whether or not a device management control file shown in exists is determined step S . When it is determined in step S that a device management control file exists a process of activating a device management application which is described below with reference to is performed step S . The process in a case of connection of a device is completed step S . When it is determined in step S that no device management control file shown in exists the process proceeds to step S and the process in a case of connection of a device is completed. When it is determined in step S that a device management application the device management application has already been installed the process proceeds to step S. When it is determined in step S that a driver the printer driver and the FAX driver has already been installed the process proceeds to step S.

In step S shown in when the process of installing a device management application is performed referring to the process of installing a device management application starts step S .

In accordance with manufacturer MFG information and model MDL information included in the device ID search for the device management control file or the device management control file among device management control tiles that are provided on the web server or that are stored on the CD ROM which is inserted in the PC is performed S . When the deice management control file or the device management control file has been found step S the found deice management control file is saved on the HDD of the PC step S and a device management application is installed step S . When installation of a device management application is completed the process of installing a device management application is terminated step S . When the deice management control file or the device management control file has not been found in step S the process of installing a device management application is terminated without installation of any device management application S .

In step S shown in when the process of activating a device management application is performed referring to the process of activating a device management application starts step S . The device management control file that was saved in step S shown in is loaded step S . A process of determining a device name which is described below with reference to is performed thereby determining a device name that is to be displayed in the device name display part or step S . The contents of display on the device management application are determined from the device name and the device management control file step S . The device management application is activated step S and the process of activating a device management application is completed step S .

In step S shown in when the process of determining a device name is performed referring to the process of determining a device name starts step S . The device management control file that was saved in step S shown in is loaded step S and the number of devices drivers that are associated with the device management application is checked step S . When the number of devices drivers is one step S the friendly name that is set in pPrinterName shown in any one of of the one checked device driver is compared with the driver name of the device driver that is set in pDriverName shown in a corresponding one of step S .

Whether or not the friendly name of the one checked device driver is the same as the driver name of the device driver is determined step S . When it is determined in step S that friendly name of the one checked device driver is the same as the driver name of the device driver the element of the one checked device driver is checked step S . Whether or not a default name ABC Kmmn in the example shown in is defined in the ABC Kmmn element as shown in is determined step S . When it is determined in step S that a default name is defined the default name that is defined in the element of the one checked device driver is set as a device name S . Then the process of determining a device name is terminated step S .

In this manner when the number of devices drivers is one and the friendly name of the device driver is the same as the driver name of the device driver a default name that is defined in the element is displayed as a device name as shown in the device name display part illustrated in . Accordingly optimum information is displayed for users whereby the operability for the users can be improved.

When it is determined in step S that no default name is defined the friendly name of the one checked device driver is set as a device name step S . The process proceeds to step S and the process of determining a device name is terminated. Note that when a result of determination in step S is YES alternatively the processes of steps S to S can be omitted and the process of step S can be performed.

When it is determined in step S that the friendly name of the device driver is not the same as the driver name of the device driver the process proceeds to step S.

For example when a plurality of MFPs whose models are the same exist on the network a plurality of printer icons and a plurality of FAX icons are displayed in the printer and FAX folder as follows.

In such a case if display of a default name which is defined in a element as a device name in a device name display part of a device management application is performed a plurality of device management applications for physically different devices are displayed. Because the same device name default name is displayed in a device name display part of each of the device management applications it is difficult to determine which device management application is displayed for which MFP. There is a high probability of improper operation being performed by the user and this is a problem. In the first embodiment of the present invention this problem is solved using a process that is described below. When it is determined in step S that the number of devices drivers which are associated with the device management application is two or more the process proceeds to step S shown in . Then search for the default device among the devices drivers that are associated with the device management application is performed step S . Whether or not the default device has been found among the devices drivers that are associated with the device management application is determined step S . When it is determined that the default device has been found the friendly name of the device driver is set as a device name step S . Then the process proceeds to step S shown in and the process of determining a device name is terminated. Here it is supposed that the default device mark is added to the FAX the FAX driver represented by the FAX icon and that the FAX is set as the default device for normal use. In this case the friendly name of the default device for normal use is displayed in the device name display part shown in . Accordingly the default device for normal use is preferentially used and the friendly name of the default device is displayed as a device name in the device name display part of the device management application whereby the operability for users can be improved.

When it is determine in step S that no default device has been found among the devices drivers that are associated with the device management application the process proceeds to step S.

For example a case in which the printer icon a driver made by another company is set as the default device also corresponds to the above mentioned case. In this case the elements and the elements that are provided in the elements shown in are checked. Then among the devices drivers that are associated with the device management application search for a driver name to which a highest priority is assigned is performed step S . When a driver name to which a highest priority is assigned has been found step S search for a friendly name of a device driver having the driver name to which a highest priority is assigned is performed among the devices drivers that are associated with the device management application step S .

Whether or not among the devices drivers that are associated with the device management application a friendly name of a device driver having the driver name to which a highest priority is assigned has been found is determined step S . When it is determined that a friendly name of a device driver having the driver name to which a highest priority is assigned has been found the friendly name is set as a device name step S . Then the process proceeds to step S shown in and the process of determining a device name is terminated.

When it is determined in step S that among the devices drivers that are associated with the device management application no friendly name of a device driver having the driver name to which a highest priority is assigned has been found the process returns to step S. Then search for a driver name to which the next highest priority is assigned is performed.

When it is determined in step S that no driver name to which the next highest priority is assigned has been found an appropriate device driver is selected from among the devices drivers that are associated with the device management application . Then the friendly name of the device driver is set as a device name step S . After that the process proceeds to step S shown in and the process of determining a device name is terminated. In this manner the friendly name of a device driver to which a highest priority is assigned is displayed as a device name in the device name display part of the device management application whereby the operability for users can be improved. Note that when a result of determination in step S is NO alternatively the processes of steps S to S can be omitted. and the process of step S can be performed.

When the printer queue button or the print setting button which are shown in is pressed the process of determining a target device starts step S . The deice management control file that was saved in step S shown in is loaded step S and the number of devices drivers that are associated with the device management application is checked step S . When the number of devices drivers is one step S the device driver is set as a target device step S . and the process of determining a target device is terminated step S . When it is determined in step S that the number of devices drives that are associated with the device management application is two or more search for the default device among the devices drivers that are associated with the device management application is performed step S .

Whether or not the default device has been found among the devices drivers that are associated with the device management application is determined step S . When it is determined that the default device has been found the default device driver is set as a target device step S . Then the process proceeds to step S and the process of determining a target device is terminated. Here it is supposed that the default device mark is added to the FAX the FAX driver represented by the FAX icon and that the FAX is set as the default device for normal use. In this case when the printer queue button is pressed the printer queue folder which is shown in for the FAX FAX driver that is set as the default device for normal use is displayed. Furthermore in this case when the print setting button is pressed the print setting dialog which is shown in for the FAX FAX driver that is set as the default device for normal use is displayed. In this manner the default device for normal use is preferentially used whereby the operability for users can be improved.

In step S regarding a case in which no default device has been found among the devices drivers that are associated with the device management application a case in which the printer icon a driver made by another company is set as the default device also corresponds to the case. In this case the elements and the elements that are provided in the elements shown in are checked. Then among the devices drivers that are associated with the device management application search for a driver name to which a highest priority is assigned is performed step S . When a driver name to which a highest priority is assigned has been found step S search for a friendly name of a device driver having the driver name to which a highest priority is assigned is performed among the devices drivers that are associated with the device management application step S .

Whether or not among the devices drivers that are associated with the device management application a friendly name of a device driver having the driver name to which a highest priority is assigned has been found is determined step S . When it is determined that a friendly name of a device driver having the driver name to which a highest priority is assigned has been found the device driver having the friendly name is set as a target device step S . Then the process proceeds to step S and the process of determining a target device is terminated. When it is determined in step S that among the devices drivers that are associated with the device management application no friendly name of a device driver having the driver name to which a highest priority is assigned has been found the process returns to step S and search for a driver name to which the next highest priority is assigned is performed.

When it is determined in step S that no driver name to which the next highest priority is assigned has been found an appropriate device driver that is selected from among the devices drivers which are associated with the device management application is set as a target device step S . Then the process proceeds to step S and the process of determining a target device is terminated.

In this manner a device driver to which a highest priority is assigned is set as a target device. Then when the printer queue button is pressed the printer queue folder for the device driver is displayed. When the print setting button is pressed the print setting dialog for the device driver is displayed. Thus the operability for users can be improved.

Note that as information that is used to set a device as a target device for example a friendly name can be utilized. However the present invention is not limited to the above described example using a friendly name. Any information with which a device can be identified can be utilized.

When device drivers are incorporated using the plug and play operation and devices are installed in a PC there is a case in which the default device is determined in accordance with an order of installation of the devices. For example in Windows registered trademark Vista OS when a printer or a FAX is installed using the plug and play operation a device that is last installed is set as the default device.

In an example of the MFP 3 the MFP 3has the three functions i.e. the printer function the facsimile function and the scanner function. The OS processes each of the functions as one device and controls installation of each of the functions. Accordingly in the example the plug and play operation is performed in an order of the printer function the facsimile function and the scanner function on the functions thereby completing installation of the functions in this order. Thus the FAX the FAX driver is set as the default device for normal use in the printer and FAX folder. As a result in the printer and FAX folder the default device mark is added to the FAX icon . As described above there is a problem that the facsimile function which is a sub function is set as the default device instead of setting the printer function which is the main function as the default device. Methods for solving such a problem are illustrated in .

Note that although in the above described example in which the OS is Windows registered trademark Vista OS a device function that is last installed is set as the default device this depends on a specification of the OS. Accordingly when the OS is an OS other than Windows registered trademark Vista OS a case can be considered in which a specification of the OS is different from the specification of Windows registered trademark Vista OS. For example a device function that is first installed is set as the default device. It can also be considered that an OS having the following specification exists in a case in which a device function is first installed even when other devices functions are installed after the device function is first installed a state in which the device function that is first installed is set as the default device is held. In the above mentioned OS hereinafter referred to as an OS B except in a case in which the user manually changes the setting of the default device the device function that is first installed is set as the default device. For the OS control using the wait time which is illustrated in is implemented not in the UI module of the printer driver but in the UI module of the FAX driver . In this manner the printer function which is the main function can be set as the default device whereby the above described problem can be solved. Furthermore a case can also be considered in which the printer driver and the FAX driver support a plurality of OSs such as Windows registered trademark Vista OS and B . In this case a process of determining the type of each of OSs is implemented in the UI modules and and an appropriate process can be performed in accordance with the type of OS. An implementation method such as a method in which the printer function which is the main function is set as the default device in this manner can also be considered. The example of the implementation method is illustrated in .

In Windows registered trademark Vista OS a driver that is last installed is set as a default printer. In the OS B a driver that is first installed is set as the default printer. A device that is set as the default printer differs depending on the type of OS. Accordingly a process of setting as the default printer a printer driver that is supposed to be used as the main driver is performed by determining the type of OS and by performing a wait process for installation. The process will be described below.

For the printer function installation of the printer driver starts in step S. When installation of the printer driver starts the initialization event PRINTER EVENT INITIALIZE in a case of installation occurs in the UI module in the course of an installation process and a process illustrated in starts. Referring to when the process for the initialization event in a case of installation of a driver starts step S the type of OS is checked step S . When the OSis Windows registered trademark Vista OS step S . an operation of waiting 60 seconds is performed step S and the process for the initialization event in a case of installation is terminated step S . While the operation of waiting 60 seconds is being performed for the printer driver during a wait time installation of the FAX driver is completed. In this case the printer driver is set as the default printer. When it is determined in step Sthat the OS is an OS other than Windows registered trademark Vista OS which includes a case in which the OSis B the process proceeds to step S and the process for the initialization event in a case of installation is terminated.

For the facsimile function installation of the FAX driver starts in step S. When installation of the FAX driver starts the initialization event PRINTER EVENT INITIALIZE in a case of installation occurs in the UI module in the course of an installation process and a process illustrated in starts. Referring to when the process for the initialization event in a case of installation of a driver starts step S the type of OSis checked step S . When the OS is B step S an operation of waiting 60 seconds is performed step S and the process for the initialization event in a case of installation is terminated step S . While the operation of waiting 60 seconds is being performed for the FAX driver during a wait time installation of the printer driver is completed. In this case the printer driver is set as the default printer. When it is determined in step Sthat the OS is an OS other than B which includes a case in which the OS is Windows registered trademark Vista OS the process proceeds to step S and the process for the initialization event in a case of installation is terminated.

As described above when the printer driver and the FAX driver support a plurality of OSs such as Windows registered trademark Vista OS and B the printer function which is the main function can be set as the default device whereby the problem can be solved. Note that although the wait time is set to be 60 seconds in the above described example the present invention is not limited to the abovedescribed example. Any appropriate time can be set in accordance with the type of device or driver whereby the methods illustrated in can be realized in various cases.

Examples of the methods for solving the above described problem using a wait time are described with reference to and . However another method for solving the problem will be described with reference to .

Note that in the examples illustrated in PRINTER EVENT INITIALIZE is utilized as an initialization event in a case of installation. However the present invention is not limited to the examples. The present invention can also be realized using another method e.g. DIF FINISHINSTALL ACTION that is a function of a Co installer.

The user can set using a manual operation any printer printer driver or any FAX FAX driver in the printer and FAX folder as the default device for normal use. Accordingly in a case other than a case of installation of a device it is considered that the setting of the default device for normal use is changed by the above mentioned manual operation performed by the user. Also in this case a device name that is to be displayed in the device name display part of the device management application is determined using the process of determining a device name which is illustrated in and the device name is displayed. Furthermore also in this case a printer queue folder that is to be displayed in accordance with the flow illustrated in and a print setting dialog that is to be displayed in accordance with the flow illustrated in are determined using the process of determining a target device which is illustrated in and the printer queue folder and the print setting dialog are displayed.

A case such as each of the cases illustrated in i.e. a case in which the printer function that is the main function is set as the default device when a device a device driver is installed can be considered. In this case for example when installation is performed a setting of the default device is set. When the setting of the default device is kept even after the installation was performed a friendly name of the printer driver is displayed in the device name display part of the device management application . For example after installation is performed the FAX driver for the facsimile function that is a sub function is set as the default device using a manual operation performed by the user. In this case a friendly name of the FAX driver is displayed in the device name display part of the device management application . As described above as circumstances demand a name of the main function of a device can he displayed in the device name display part of the device management application or a name of the default device that is set in accordance with the intention of the user can be displayed in the device name display part of the device management application . As a result the peripheral device control system that has an excellent operability can be realized. Furthermore a case can also be considered in which a printer queue button or a print setting button is pressed on the device management . Also in this case similarly as circumstances demand a printer queue folder or a print setting dialog for the main function of a device can be displayed or a printer queue folder or a print setting dialog for the default device that is set in accordance with the intention of the user can be displayed. As a result the peripheral device control system that has a more excellent operability can be realized.

In the second embodiment an example is described in which in the MFP 3 having a printer function a facsimile function and a scanner function either the printer function the printer driver or the facsimile function the FAX driver is set as the default device. The problem in the example and the methods for solving the problem are described. As an example of a case of the MFP 3 other than the above described case there is a case in which neither the printer function the printer driver nor the facsimile function the FAX driver is set as the default device.

 MFG ABC MDL Kmmn CLS PRINTER CMD K4 DES ABC Kmmn ATRB Main indicates a device ID. The device ID is a device ID of the printer function of the MFP 3 and the PC can obtain the device ID from the MFP 3 via the network . The device ID indicates the following information 

The attribute ATRB indicates an attribute of the printer function of the MFP 3 and Main that is set indicates that the function i.e. the printer function is the main function. Note that although detailed description is omitted in a third embodiment a device ID of the facsimile function of the MFP 3 includes information ATRB Sub and Sub is set in the attribute ATRB . Here Sub that is set indicates that the function i.e. the facsimile function is a sub function.

Furthermore the present invention can be achieved by performing the following reading process. A storage medium on which a program code of software that realizes the functions of the above described embodiments is provided in a system or an apparatus. A computer a CPU a microprocessor unit MPU or the like of the system or apparatus performs a process of reading the program code that is stored on the storage medium in this case the program code that is read from the storage medium realizes the functions of the above described embodiments. Accordingly the program code and the storage medium on which the program code is stored constitute the present invention.

Additionally as a matter of course the functions of the above described embodiments can be realized not only by executing the program code that is read by the computer but also using the following manner. An OS that operates on the computer or the like performs some of or all of practical processes in accordance with instructions in the program code and the functions of the above described embodiments can be realized using the processes.

In the embodiments of the present invention a device management such as the device management application shown in is provided as an example of the application . However the application is not limited to the example. The present invention can be realized using any application having similar functions and any application having similar functions is effective.

In the embodiments of the present invention a color inkjet printer is used as an example of the printer. The printer is not limited to the example. Any printer such as a monochrome laser beam printer LBP can be used.

In the embodiments of the present invention personal computers are provided as examples of the information processing apparatuses. However the information processing apparatuses are not limited to the examples. The present invention can be realized using any information processing apparatus terminal that can be used in a similar manner such as a digital versatile disc DVD player a game player a set top box or an Internet appliance. Any information processing apparatus terminal is effective.

In the embodiments of the present invention a printer is used as an example of a peripheral device. However in addition any one of a copier a facsimile machine a scanner a digital camera a device having a multiple function of a copier a facsimile machine a scanner and a digital camera and so forth can be applied as the peripheral device in the present invention.

In the embodiments of the present invention an OS that is equivalent to Windows registered trademark Vista OSis used as an example of the OS. The OSis not limited to the example. Any OS can be used.

In the embodiments of the present invention Ethernet registered trademark is used as an example of the network configuration of the network . However the network configuration of the network is not limited to the example. Any other network configuration can be used.

In the embodiments of the present invention Ethernet registered trademark is used as an example of the interface among the PC the MFP 3 and the printer . However the interface is not limited to the example. Any interface such as a wireless LAN IEEE1394 Bluetooth or USB can be used.

In the embodiments of the present invention a WSD protocol is used as an example of the protocol for web services. The protocol for web services is not limited to the example. Any protocol such as an IHV specific protocol can be used.

In the embodiments of the present invention an example in which a device name that is to be displayed in the device name display part of the device management application is automatically selected and an example in which a target device that is to be used when the printer queue button or the print setting button is pressed is automatically selected are described. The present invention is not limited to the examples. For example when activation of an application provision of a link to a website provision of a service or the like is performed using the device management application a device name or a target device can be automatically selected and set.

According to the embodiments of the present invention the following positive effects can be obtained.

 1 A system can be proposed which automatically fits to an environment in which a user uses the system which can display an appropriate device name in a device name display part of a device management application and which has an excellent operability.

 2 A system can be proposed which automatically fits to an environment in which a user uses the system which can perform an appropriate function using a device management application and which has an excellent operability.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Applications No. 2008 271045 filed Oct. 21 2008 and No. 2009 151477 filed Jun. 25 2009 which are hereby incorporated by reference herein in their entirety.

