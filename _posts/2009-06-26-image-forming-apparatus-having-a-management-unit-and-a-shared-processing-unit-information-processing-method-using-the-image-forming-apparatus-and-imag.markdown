---

title: Image forming apparatus having a management unit and a shared processing unit, information processing method using the image forming apparatus, and image forming system having the image forming apparatus
abstract: An image forming apparatus includes a shared processing unit configured to define processes used in common by a plurality of function implementing units, and a management unit configured to store in memory a logic name and identification information identifying a function implementing unit for each of the plurality of function implementing units such that the logic name and the identification information are associated with each other, and to generate a logic unit based on a logic name associated with given identification information contained in a request if the given identification information contained in the request is stored in the memory, the logic unit serving to cause a function implementing unit identified by the given identification information to perform processing, wherein the shared processing unit is configured to request the logic unit generated by the management unit to process a requested item contained in the request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08363238&OS=08363238&RS=08363238
owner: Ricoh Company, Ltd.
number: 08363238
owner_city: Tokyo
owner_country: JP
publication_date: 20090626
---
The disclosures herein generally relate to an image forming apparatus an information processing method and an image forming system.

When a function is added as a functional extension of an image forming apparatus e.g. MFP multifunction peripheral it may be preferable to arrange that the added function is usable as a Web service. To this end there may be a need to create a WSDL Web Services Description Language for the newly added function and to provide an I F i.e. interface to clients through the created WSDL. In such a case there may be a need for a client to perform the following steps 1 finding a WSDL corresponding to the new function 2 creating client side codes corresponding to the I F embedded in the WSDL and 3 coping with the actions defined in the new Web service. With regard to each of these steps proposals have been made as described below.

With respect to the first step of finding a WSDL corresponding to the new function an external server for managing the WSDL may be provided and the WSDL may be registered in this server in advance. This external server may be implemented by use of a conventional technology referred to as UDDI Universal Description Discovery and Integration . Japanese Laid open Patent Publication No. 2005 055983 discloses a method that solves a query by providing a separate service management apparatus.

With respect to the second step of creating client side codes corresponding to the I F embedded in the WSDL various methods have been disclosed. Japanese Laid open Patent Publication No. 2004 272317 discloses a client that dynamically copes with a change made to the I F on the server side. In this arrangement the client detects an error upon accessing an I F that has been changed and executes an error circumventing program if the detected error is caused by a change made to the I F. Further Japanese Laid open Patent Publication No. 2005 055983 discloses providing an intermediary apparatus for managing Web services. A service provider registers in this intermediary apparatus in advance. A user then accesses the intermediary apparatus which absorbs a difference in the I F from that of the provider.

With respect to the third step of coping with the actions defined in the new Web service Japanese Laid open Patent Publication No. 2006 072910 discloses registering a scenario in an external server in advance wherein this scenario defines actions for using a Web service. When using the Web service the scenario is obtained from the server to access the Web service.

In the technology disclosed in Japanese Laid open Patent Publication No. 2005 055983 there is a need for an external apparatus for managing a WSDL. In order to use a new function as a Web service a client needs to obtain the WSDL from such an external apparatus. In the technology disclosed in Japanese Laid open Patent Publication No. 2004 272317 there is a need to provide embedded programs for error detection and error circumvention. Further code compilation is necessary when preparation is made on the client side. In the technology disclosed in Japanese Laid open Patent Publication No. 2006 072910 there is a need to provide an external server in advance in which scenarios need to be registered.

Accordingly it may be preferable to provide an image forming apparatus an information processing method and an image forming system that can dynamically extend a Web service function through the use of a unified I F.

In one embodiment an image forming apparatus includes a communication unit configured to receive a request written in a first description format a data processing unit configured to convert a requested item contained in the request into a data format of processing details corresponding to the requested item if the data format is available and configured to convert the requested item into a second description format if the data format is not available a management unit configured to store in memory a logic name and identification information identifying a function implementing unit for each of a plurality of function implementing units such that the logic name and the identification information are associated with each other and a shared processing unit configured to define processes used in common by the plurality of function implementing units wherein the management unit is configured to generate a logic unit based on a logic name associated with given identification information contained in the request if the given identification information contained in the request is stored in the memory the logic unit serving to cause a function implementing unit identified by the given identification information to perform processing and wherein the shared processing unit is configured to request the logic unit generated by the management unit to process the requested item contained in the request.

In another embodiment an information processing method is provided for an image forming apparatus which includes a communication unit configured to receive a request written in a first description format a data processing unit configured to convert a requested item contained in the request into a data format of processing details corresponding to the requested item if the data format is available and configured to convert the requested item into a second description format if the data format is not available a management unit configured to store in memory a logic name and identification information identifying a function implementing unit for each of a plurality of function implementing units such that the logic name and the identification information are associated with each other and a shared processing unit configured to define processes used in common by the plurality of function implementing units. The information processing method includes checking by the management unit whether given identification information contained in the request for identifying a function implementing unit is found in the memory generating by the management unit a logic unit based on a logic name associated with the given identification information if the given identification information is found in the memory by said checking the logic unit serving to cause the function implementing unit identified by the given identification information to perform processing and requesting by the shared processing unit the logic unit generated by said generating to process the requested item contained in the request.

In another embodiment an image forming system in which a client apparatus and an image forming apparatus are connected to each other the client apparatus comprising a request generating unit configured to generate a request in a first description format the request containing a requested item that is requested to the image forming apparatus and a first communication unit configured to transmit the request the image forming apparatus comprising a second communication unit configured to receive a request written in a first description format a data processing unit configured to convert a requested item contained in the request into a data format of processing details corresponding to the requested item if the data format is available and configured to convert the requested item into a second description format if the data format is not available a management unit configured to store in memory a logic name and identification information identifying a function implementing unit for each of a plurality of function implementing units such that the logic name and the identification information are associated with each other and a shared processing unit configured to define processes used in common by the plurality of function implementing units wherein the management unit is configured to generate a logic unit based on a logic name associated with given identification information contained in the request if the given identification information contained in the request is stored in the memory the logic unit serving to cause a function implementing unit identified by the given identification information to perform processing and wherein the shared processing unit is configured to request the logic unit generated by the management unit to process the requested item contained in the request.

According to at least one embodiment of the present invention an image forming apparatus an information processing method and an image forming system that can dynamically extend a Web service function through the use of a unified I F are provided.

In the following embodiments of the present invention will be described with reference to the accompanying drawings.

In the image forming system according to the present embodiment all the data inclusive of parameters necessary for making device settings are described in a request or response so that only one exchange between the client PC and a server MFP suffices. There is thus no need to perform a procedure that is registered in an external server. As will be described later the contents of the data are configured such that it is easy to extend functions. At the client PC thus minimum necessary actions can be performed without the need to make modification upon functional extension. This aspect will be described later in detail.

The MFP illustrated in includes a network interface hereinafter referred to as network I F a Web service framework an information processing logic unit an information access unit an information storage unit and a new function .

The network I F is an interface for connecting the image forming apparatus to the LAN. The Web service framework includes a communication client unit a communication server unit and a data processing unit .

The communication client unit and the communication server unit are used to communicate with the client PC . The data processing unit analyzes a request from the client PC and generates a response to the client PC . For example the data processing unit parses a request described in XML Extensible Markup Language and generates a response described in XML. The detail of the data processing unit will later be described.

The information processing logic unit is provided with a logic function that is completed within a device. The information processing logic unit analyzes a request that is completed within a device and generates a response. The information access unit acquires information retained in the information storage unit based on a requested item contained in a request that is analyzed by the information processing logic unit . The information access unit edits the acquired information to generate replacement or updated information for storage in the information storage unit . The information storage unit serves to store data indicative of a state of the MFP identification information for each operator image data and so on.

The new function includes a new function logic unit a new function extension data unit a new function management unit and a new function processing unit . The new function logic unit is generated each time the Web service is requested. The new function logic unit requests the data processing unit to analyze data if the data of a requested item contained in the request needs to be analyzed. If such analysis is unnecessary the new function logic unit sends a request to process the Web service to the new function processing unit .

The new function extension data unit retains data that is extended by the new function . The new function management unit supplies a logic name and a URI Uniform Resource Identifier serving as an identifier of the new function to a logic management unit which will be described later when the new function is added to the MFP . Here the logic name may be a class name as defined in JAVA registered trademark . The new function processing unit performs processing of the new function . The new function processing unit corresponds to a function implementing unit which will be described later.

In the following the client PC will be described. The client PC includes a network I F a Web service framework an information access unit a view generating unit and a user interface hereinafter referred to as UI . The network I F the Web service framework and the information access unit perform similar processing to the one performed by the corresponding units of the MFP and a description thereof will be omitted.

The view generating unit generates data of a display screen that is used to display a response from the MFP on a display screen. The UI is a user interface used to operate the client PC . In the following the data processing units and for unifying an I F will be described.

In the present embodiment the I F is unified. The data processing units and serve to achieve such I F unification. In the following a description will be given of the main functions of the MFP and PC inclusive of the data processing units and .

The data processing unit may include a request analyzing unit a process detail acquiring unit and a response generating unit . The request analyzing unit analyzes a request described in a first description format. This analysis is performed according to the syntax of the first description format. The first description format may be a description format that is written in XML and for which a set of items is identified by a namespace. The request analyzing unit may be implemented as an XML parser. With this arrangement a requested item contained in a request can be acquired.

The process detail acquiring unit acquires identification information identifying the function implementing unit and processing details corresponding to the requested item based on the results of analysis obtained by the request analyzing unit . Based on a data format specified for each function implementing unit stored in the data format storage unit for example the process detail acquiring unit converts the requested item into the processing details represented in the corresponding data format.

If the data format corresponding to the requested item cannot be acquired the process detail acquiring unit converts the requested item into a predetermined description format. The predetermined description format may be a second description format which may be comprised of a namespace name a variable or tag name and a class having a value.

The case in which the data format cannot be acquired may occur when a data format serving as a data interface for the function implementing unit is not registered in the data format storage unit despite the fact that the identification information is stored in the list management unit because the function implementing unit corresponding to the requested item is a newly added one.

With the above described arrangement it is possible to issue a request and to request processing with respect to a function implementing unit newly added to the MFP .

The response generating unit generates a response corresponding to the requested item processed by the function implementing unit . The response generated by the response generating unit may depend on a version in which the MFP belongs for example. The response generated by the response generating unit includes a response item output from the function implementing unit .

The response generating unit converts a response item output from the function implementing unit described in a function implementing unit specific data format into a response described in the first description format. If the response item output from the function implementing unit is written in the second description format the response generating unit extracts necessary information from this response item for inclusion in the response described in the first description format.

The case in which the response item is written in the second description format may occur when a data format serving as a data interface for the function implementing unit is not registered in the data format storage unit despite the fact that the identification information is stored in the list management unit because the function implementing unit is a subsequently added one.

With the above described arrangement it is possible to generate a response corresponding to the response item output from the function implementing unit that is newly added to the MFP .

The function implementing unit performs corresponding processing based on the requested item acquired by the process detail acquiring unit . The function implementing unit may acquire information stored in memory not shown to output the acquired information. The function implementing unit may edit information stored in the memory to replace the information or may generate new information based on the requested item for storage in the memory. The memory may further store information relating to a state of the MFP image data of images processed by the MFP information regarding operators using the MFP etc.

The function implementing unit may perform processing relating to the image forming function communication function facsimile function and so on of the MFP in addition to processing relating to the information stored in the memory. The function implementing unit may be part of the MFP or may be connected to the MFP .

The list management unit stores and manages a list of function implementing units provided in the MFP . When a new function implementing unit is added the list managed by the list management unit is updated.

The data format storage unit stores data formats for requested items response items and or state items separately for each function implementing unit. With this provision the process detail acquiring unit or the like can perform conversion between the first description format and a data format corresponding to a given function implementing unit.

The communication unit communicates with the client PC to receive a request and transmit a response and or message for example.

The client PC sends a request to the MFP and receives a response from the MFP responding to the request. In this manner the client PC controls the MFP and manages information kept at the MFP .

The client PC may include a data processing unit a communication unit a function implementing unit a list management unit and a data format storage unit . The data processing unit generates a request for transmission to the MFP and analyzes a response transmitted from the MFP . This makes it possible to acquire the status of the MFP . The status may be a state of the MFP and or may be information stored in the MFP .

The data processing unit may include a request generating unit a response analyzing unit and a status acquiring unit . The request generating unit generates a request including a requested item that is requested to the MFP . The request generated by the request generating unit may be described in the first description format.

The response analyzing unit analyzes a response transmitted from the MFP . The response analyzing unit may be implemented as an XML parser if a response is described in XML for example.

The status acquiring unit acquires the status of the MFP based on a response item analyzed by the response analyzing unit . Further the status acquiring unit delivers the response item to a function implementing unit based on the acquired status. With this arrangement each function implementing unit can perform processing corresponding to the received response item.

The status acquiring unit converts the response item into a data format provided on a function implementing unit specific basis. If the data format corresponding to the response item is not stored in the data format storage unit the status acquiring unit converts the response item into the second description format to output the converted item.

The case in which the response item is written in the second description format may occur when the response item corresponds to the function implementing unit that is newly added to the client PC in a fashion similar to the case of the MFP . With the above described arrangement it is possible to output a response item and to request corresponding processing with respect to a function implementing unit newly added to the client PC .

The function and configuration of the function implementing unit the list management unit the data format storage unit and the communication unit are similar to those of the counterpart units of the MFP and a description thereof will be omitted.

The request illustrated in includes a HTTP request header part R and a body R that contains one or more requested items. In the body R a description provided at the portion indicated by reference symbol e indicates that this request is described by use of Atom and extended formats defined by namespace a and namespace vendor . The extended format defined by a namespace vendor corresponds to a requested item for a newly added function in the present embodiment.

R indicates a portion that is described in extended formats. R includes a mail address corresponding to the name foo and information such as a facsimile number relating to a record which are provided as respective request items. R further includes a value g that has tags identified by the namespace vendor .

By referring to again the procedure proceeds to step S after step S. In step S the request analyzing unit analyzes the request from the top to check the standard format. In this example a check is made as to whether the standard format is an A format or a B format. The procedure proceeds to step S in the case of the A format and proceeds to step S in the case of the B format.

The standard format refers to a universally applicable standard such as APP or Atom if the request is described in XML for example. The present embodiment is not limited to a case in which one standard format is selected from two formats. One or more standard formats may be selected and processed from three or more standard formats.

In step S to step S following step S the request analyzing unit acquires a requested item with respect to a portion described in the A format. The process detail acquiring unit then acquires the processing details corresponding to the requested item. The process details acquired here are expressed in a data format provided on a function implementing unit specific basis. This operation is repeated until all the portion described in the A format is processed.

It should be noted that identification information identifying a function implementing unit is acquired by the request analyzing unit . Identification information identifying a function implementing unit may be contained in each requested item of the request or may be provided in one to one correspondence to the description formats used in the request.

In step S to step S following step S the request analyzing unit and the process detail acquiring unit perform similar processes to those in steps S to S with respect to a portion described in the B format.

The procedure proceeds to processing of nonstandard formats after completing the processing of the portion described in the standard format. In step S the request analyzing unit checks whether an original format i.e. nonstandard format is used in the request. If there is an original format the procedure proceeds to step S. Otherwise the procedure proceeds to step S. The check in step S may be performed by checking whether a set of requested items corresponding to the functions processed by the MFP is in existence rather than by checking whether an original format is in existence. If there is a set of requested items corresponding to the functions processed by the MFP the procedure proceeds to step S. Otherwise the procedure proceeds to step S.

In steps to S following step S the request analyzing unit keeps performing the process of acquiring a requested item contained in the request until all the requested items are acquired. Each time a requested time is acquired the process detail acquiring unit checks in step S whether the processing details corresponding to the acquired requested item are found among already registered information. If the processing details are found among already registered information the procedure proceeds to step S. If the processing details are not found among already registered information the procedure proceeds to step S.

In step S following step S the process detail acquiring unit acquires the processing details. The process details acquired here are expressed in a data format provided on a function implementing unit specific basis. In step S following step S the process detail acquiring unit converts the requested item into the second description format.

In this manner a function of a requested item can be performed even if the requested item contained in a request is directed to a function that is not registered in the MFP . Namely a function implementing unit can perform the function of the requested item by performing the corresponding processing details in the corresponding data format or by performing processing based on the requested item described in the second data format. Accordingly a client apparatus or the like that generates a request can transmit a request to the MFP to use a certain function even if this function corresponds to a newly added function implementing unit.

By referring to again the procedure proceeds to step S after the process performed in step S or step S. In step S the acquired processing details are supplied to the new function logic unit .

In step illustrated in data indicative of a response item to be contained in a response is supplied to the data processing unit . In step S following step S the response generating unit selects a description format for a response based on the supplied data. In this step a standard format is selected. The procedure proceeds to step S if the response is to be described in the A format and proceeds to step S if the response is to be described in the B format.

The present embodiment is not limited to a case in which one standard format is selected from two standard formats. One or more standard formats may be selected from a plurality of standard formats followed by generating a response described in the one or more selected standard formats.

In step S to step S following step S the response generating unit keeps generating data of a response item described in the A format until there is no remaining data of a response item to be described in the A format. In step S to step S following step S the response generating unit keeps generating data of a response item described in the B format until there is no remaining data of a response item to be described in the B format.

In step S following step S or step S the response generating unit checks whether there is data of a response item that is to be described in an original format. If there is data to be described in an original format the procedure proceeds to step S. Otherwise the procedure proceeds to step S.

In step S to step S following step S the response generating unit keeps performing the process of describing a response item in the original format until there is no remaining data of a response item to be described in the original format. In step S the response generating unit checks whether the response item of interest is unknown data. Unknown data is the data that is written in a data format that is not registered in advance for example. The unknown data is described in the second description format for example. The second description format may have a namespace name a variable or tag name and a value.

If the data is known the procedure proceeds to step S. If the data is unknown data the procedure proceeds to step S. In step S following step S the response generating unit refers to the data format of the acquired response item to generate a response in the first description format. In step S following step S the response generating unit generates a response in the first description format from the acquired response item described in the second description format.

By referring to again the procedure proceeds to step S after step S or step S. In step S the response generated by the response generating unit is supplied to the information processing logic unit .

When data in the address book is to be edited PUT defined in HTTP may be used to enter a request and to output a response in response to the request. When data in the address book is to be referred to GET defined in HTTP may be used to output response data. When data in the address book is to be deleted DELETE defined in HTTP may be used without exchanging data through a request and a response.

In the manner described above the I F is unified so that Web service functional extension can be dynamically performed.

The shared I F is an I F unit for which a plurality of I Fs are defined for shared use. The shared processing unit is a processing unit for which shared processes corresponding to respective I Fs of the shared I F are defined. A user i.e. logic unit of the framework implements only one or more necessary processes i.e. I F required to perform its own function among the processes defined in the shared processing unit .

The logic management unit stores in memory a logic name and a URI serving as an identifier for each function used in the Web service such that the logic name and the URI are associated with each other for management purposes. Here the logic name may be a class name as defined in JAVA registered trademark . When an identifier to be managed is included in a request a new function logic unit is generated based on the identifier and a class name.

In the example illustrated in the information processing logic unit requires all the processes A through D defined in the shared processing unit while the new function logic unit requires only the processes C and D for the purpose of performing its intended function. In this manner shared processes corresponding to the shared I Fs A through D are defined in the framework.

The memory unit stores a logic name and an identifier e.g. URI of a Web service in such a manner that they are associated with each other. is a drawing illustrating an example of a management table stored in the memory unit . As illustrated in an identifier IDENTIFIER and a logic name LOGIC NAME are stored and associated with each other.

The management table merely stores acquired identifiers and logic names without discriminating existing functions from new functions. This arrangement allows each function to be easily added or removed regardless of whether the function is new or old.

Referring to again the generation unit generates a new function logic unit based on the logic name and identifier listed in the management table stored in the memory unit .

In step S following step S the logic management unit upon receiving the logic name and identifier from the new function management unit registers i.e. stores them in the management table and associates them with each other. With this arrangement the added new function can be used upon receiving a request requesting the use of the added new function.

In step S following step S the logic management unit upon receiving the identifier from the new function management unit deletes the received identifier and the logic name corresponding to this identifier. With this arrangement the added new function can be deleted when there is no need to use this new function any longer.

As illustrated in and the addition and deletion of a new function can be performed during the ongoing operation of the MFP thereby allowing a function specific addition and deletion to be performed at any desired time.

In step S following step S the communication server unit issues to the logic management unit a request to process the request received in step S. In step S following step S the logic management unit requests the shared processing unit to perform shared processing.

In step S following step S the logic management unit acquires an identifier contained in the request and checks whether the acquired identifier is found in the management table that the logic management unit manages. If the acquired identifier is found in the management table the logic management unit creates a new function logic unit based on the logic name and identifier stored in the management table.

In step S following step S the shared processing unit sends a process request to the created new function logic unit thereby requesting that the requested items in the request be processed. In step S following step S the new function logic unit checks whether there is data to be processed for requested items contained in the request. The detail of this check will be described later.

When a request that the new function processing unit perform processing is provided the new function logic unit performs conversion into a data format corresponding to the new function processing unit to make a process request.

In step S following step S the new function logic unit generates a new function management unit based on the data acquired by reference from the new function processing unit . The new function management unit retains new function extension data.

In step S following step S the new function logic unit acquires a response item indicative of the completion of processing and requests the shared processing unit to generate a response including the response item. The response item may be given in a predetermined data format or may be given in the second description format. The second description format may have a namespace containing the response item a variable or tag name and a value if the response is to be described in XML for example.

In step S following step S the shared processing unit requests the data processing unit to generate a response if the response is to include the response item.

In step S following step S the shared processing unit supplies to the logic management unit the response generated by the data processing unit including the response item. The response is described in the first description format which may be expressed in XML for example. More specifically the response may be expressed by use of APP Atom or another extension format. Which format is used depends on the contents of a request specifying in what format a response should be returned and on what formats are supported by the image forming apparatus.

In step S following step S the logic management unit supplies to the communication server unit the response together with a request to transmit the response. In step S following step S the communication server unit transmits the response to the client PC .

In the following a description will be given of a case in which a data creation modification request is received from a client. A data creation modification request differs from a reference request in that data to be processed is present in a requested item.

In step S a user uses the client PC to transmit to the MFP a request that contains a requested item requesting creation modification. The request contains data that is to be processed according to the requested item.

Upon receiving a process request from the shared processing unit in step S the new function logic unit requests the data processing unit to analyze the data to be processed. In step S following step S the data processing unit creates a new function management unit in which to retain extension data if there is data to be extended according to the analysis of the acquired data.

In step S following step S the new function logic unit issues to the new function processing unit a request that the requested item be converted into a predetermined data format and that the converted processing details be performed.

In step S following step S the new function processing unit performs processing in accordance with the acquired processing details. In so doing the new function processing unit refers to the data of the new function management unit to perform the processing.

In step S following step S the new function processing unit sends a notice indicative of the completion of processing to the new function logic unit upon completing the processing. In step S following step S the new function logic unit sends a notice indicative of the completion of processing to the shared processing unit .

In step S following step S the shared processing unit sends a notice indicative of the completion of processing to the logic management unit . In step S following step SS the logic management unit issues to the communication server unit a request that a notice of the completion of processing be sent to the client PC . In step S following step S the communication server unit sends a notice indicative of the completion of processing to the client PC . For example the notice may be transmitted as an http response.

In the following a description will be given of a series of processes performed when the client PC receives a response from the MFP after transmitting a request to the MFP . is a sequence chart illustrating the processes performed by a client PC.

In step S the UI supplies a user indicated requested item requesting creation reference modification or deletion to the information access unit . In step S following step S the information access unit issues to a communication client unit a communication request that the user indicated request be transmitted to the MFP .

In step S following step S the communication client unit transmits the requested item as a request to the MFP . The request includes an identifier identifying a function implementing unit that is used to process the requested item.

In step S following step S the MFP transmits a response to the communication client unit in response to the request. In step S following step S the communication client unit sends the received response to the data processing unit .

As was previously described the communication client unit acquires a response item by analyzing the data of the received response described in the first description format.

In step S following step S the communication client unit sends the analyzed response item to the information access unit . In step S following step S the information access unit requests the view generating unit to generate a display screen based on the response item. In the following a description will be given of the view generating unit receiving a request to generate a display screen.

In step S a check is made as to whether the response item data is provided in a known data format. If it is ascertained in step S that a known data format is used processes in step S to step S are repeatedly performed to generate display screen data corresponding to the known data.

If it is ascertained in step S that a new data format is used processes in step S to step S are repeatedly performed to generate display screen data according to predetermined rules with respect to the new data. Here the term new data format refers to a data format of data corresponding to the newly extended function of the MFP . The term predetermined rules refers to rules that are used at the client PC to generate display screen data with respect to the known data.

With this arrangement display screen data can be generated based on the new data according to the existing display format since the new data received by the view generating unit is described in a predetermined data format i.e. first description format .

In the following a specific example of the present embodiment will be described. In this example a description will be given of a process performed upon adding an address book function as a new function to an MFP when the address book function is not present in the MFP. is a drawing illustrating an example of the added address book function.

As illustrated in an address book logic unit is generated such as to provide address book functions corresponding to all the I Fs GET refer PUT modify POST create and DELETE delete defined in the framework.

An address book extension data unit retains extended data in a predetermined description format. is a drawing illustrating an example of data retained in the address book extension data unit . In the example illustrated in the address book extension data unit has data described in XML.

Referring to again an address book management unit supplies a logic name and identifier identifying the address book function to the logic management unit when this address book function is added to the MFP. An example of such an identifier may be addressbook . An address book processing unit performs processing defined in the address book logic unit .

In step S following step S the communication server unit issues to the logic management unit a request to process the request received in step S. In step S following step S the logic management unit requests the shared processing unit to perform shared processing.

In step S following step S the logic management unit acquires an identifier i.e. addressbook contained in the request and checks whether the acquired identifier is found in the management table that the logic management unit manages. If the acquired identifier is found in the management table the logic management unit creates an address book logic unit based on the logic name and identifier stored in the management table.

In step S following step S the shared processing unit sends a process request to the created address book logic unit thereby requesting that the requested item i.e. reference in the request be processed. In step S following step S the address book logic unit requests the address book processing unit to process the requested item i.e. reference contained in the request.

In step S following step S the address book logic unit generates an address book extension data unit based on the data acquired by reference from the address book processing unit . The address book extension data unit retains new function address book function extension data.

In step S following step S the address book logic unit acquires a response item indicative of the completion of processing and requests the shared processing unit to generate a response including the response item. The response item may be given in a predetermined data format or may be given in the second description format. The second description format may have a namespace containing the response item a variable or tag name and a value if the response is to be described in XML for example.

In step S following step S the shared processing unit requests the data processing unit to generate a response if the response is to include the response item.

In step S following step S the shared processing unit supplies to the logic management unit the response generated by the data processing unit including the response item. The response is described in the first description format which may be expressed in XML for example. More specifically the response may be expressed by use of APP Atom or other extension format. Which format is used depends on the contents of a request specifying in what format a response should be returned and on what formats are supported by the image forming apparatus.

In step S following step S the logic management unit supplies to the communication server unit the response together with a request to transmit the response. In step S following step S the communication server unit transmits the response to the client PC .

In this manner there is neither a need to acquire a WSDL corresponding to an added address book nor a need to create a special program for the added address book function. The client PC can use the new function of MFP by simply modifying an identifier.

In step S the UI supplies a user indicated requested item requesting modification to the information access unit . In step S following step S the information access unit issues to a communication client unit a communication request that the user indicated modification request be transmitted to the MFP .

In step S following step S the communication client unit transmits the requested item as a request to the MFP . The request may be transmitted as an http request. In such a case PUT http sample.com ws addressbook hoge of HTTP is sent to the MFP .

In step S following step S the MFP transmits a response to the communication client unit in response to the request. In step S following step S the communication client unit requests the data processing unit to analyze the response data.

As was previously described the communication client unit acquires a response item by analyzing the data of the received response described in the first description format.

In step S following step S the communication client unit sends the analyzed response item to the information access unit . In step S following step S the information access unit requests the view generating unit to generate display screen data based on the response item.

In response to the analysis request issued in step S the data processing unit analyzes the response illustrated in . The portion indicated by reference symbol x in is extension data new data that is newly added at the MFP . The client PC thus does not recognize this data.

In response to the view generation request issued in step S the view generating unit generates display screen data with respect to the acquired response items. In so doing the new data indicated by reference symbol x as illustrated in is converted as illustrated in . The client PC can thus perform processing according to predetermined rules to display the new data on a display screen.

In the right hand side half illustrates an example of the new data displayed on a display screen. As can be seen from comparison between and different display screen data are generated from the same data. The display screen as illustrated in would appear in a straightforward configuration. In the client PC however display screen data is generated based on the new data according to the rules relating to generation of display screen data thereby displaying the display screen as illustrated in .

In this manner provision is made such that the client PC can generate display screen data according to predetermined rules even if the supplied data is unknown. The generation of display screen data is only an example. If processing can be performed without recognizing the contents of data no modification is necessary on the client side to process the data.

In the present embodiment all the data inclusive of parameters necessary for making device settings are described in a request or response so that only one exchange between a client PC and a server MFP suffices. Namely only one exchange is sufficient to display screen data.

The main processing unit is a central portion for providing computing functions and includes a CPU a RON and a RAM . The CPU executes computer programs of the present embodiment by reading the computer programs from the ROM or the like to load the programs into the RAM . The ROM is a nonvolatile memory and stores computer programs performed by the CPU and parameters and the like necessary to control the MFP or client PC. The RAM serves as a work memory for use by the CPU .

The input device may be a keyboard or the like and is used by a user to enter instructions. The display device serves to display data indicative of status of the computer or the like. The printer is an apparatus that forms an image on a medium. The scanner is an apparatus that optically scans an image formed on a medium. The HDD serves to store a large volume of data such as image data.

The computer programs of the present embodiment may be stored in the HDD or the ROM or may be stored in a recording medium that is mountable to a driver device that is not shown.

Further the present invention is not limited to these embodiments but various variations and modifications may be made without departing from the scope of the present invention. The object of the present invention may also be achieved by an image forming system that includes an MFP and a client PC connected to each other as illustrated in .

The present application is based on Japanese priority application No. 2008 177332 filed on Jul. 7 2008 with the Japanese Patent Office the entire contents of which are hereby incorporated by reference.

